"use strict";

function _classStaticPrivateMethodGet(receiver, classConstructor, method) { _classCheckPrivateStaticAccess(receiver, classConstructor); return method; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }
function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }
function _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError("attempted to get private field on non-instance"); } return fn; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }
function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }
function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }
function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }
function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }
function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) { _classCheckPrivateStaticAccess(receiver, classConstructor); _classCheckPrivateStaticFieldDescriptor(descriptor, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }
function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }
function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) { _classCheckPrivateStaticAccess(receiver, classConstructor); _classCheckPrivateStaticFieldDescriptor(descriptor, "get"); return _classApplyDescriptorGet(receiver, descriptor); }
function _classCheckPrivateStaticFieldDescriptor(descriptor, action) { if (descriptor === undefined) { throw new TypeError("attempted to " + action + " private static field before its declaration"); } }
function _classCheckPrivateStaticAccess(receiver, classConstructor) { if (receiver !== classConstructor) { throw new TypeError("Private static access of wrong provenance"); } }
function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e114) { throw _e114; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e115) { didErr = true; err = _e115; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
/**
 * @licstart The following is the entire license notice for the
 * JavaScript code in this page
 *
 * Copyright 2022 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @licend The above is the entire license notice for the
 * JavaScript code in this page
 */
!function webpackUniversalModuleDefinition(t, e) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) ? module.exports = e() : "function" == typeof define && define.amd ? define("pdfjs-dist/build/pdf", [], e) : "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) ? exports["pdfjs-dist/build/pdf"] = e() : t["pdfjs-dist/build/pdf"] = t.pdfjsLib = e();
}(globalThis, function () {
  return function () {
    "use strict";

    var __webpack_modules__ = [, function (t, e) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.VerbosityLevel = e.Util = e.UnknownErrorException = e.UnexpectedResponseException = e.UNSUPPORTED_FEATURES = e.TextRenderingMode = e.StreamType = e.RenderingIntentFlag = e.PermissionFlag = e.PasswordResponses = e.PasswordException = e.PageActionEventType = e.OPS = e.MissingPDFException = e.LINE_FACTOR = e.LINE_DESCENT_FACTOR = e.InvalidPDFException = e.ImageKind = e.IDENTITY_MATRIX = e.FormatError = e.FontType = e.FeatureTest = e.FONT_IDENTITY_MATRIX = e.DocumentActionEventType = e.CMapCompressionType = e.BaseException = e.BASELINE_FACTOR = e.AnnotationType = e.AnnotationStateModelType = e.AnnotationReviewState = e.AnnotationReplyType = e.AnnotationMode = e.AnnotationMarkedState = e.AnnotationFlag = e.AnnotationFieldFlag = e.AnnotationEditorType = e.AnnotationEditorPrefix = e.AnnotationEditorParamsType = e.AnnotationBorderStyleType = e.AnnotationActionEventType = e.AbortException = void 0;
        e.arrayByteLength = arrayByteLength;
        e.arraysToBytes = function arraysToBytes(t) {
          var e = t.length;
          if (1 === e && t[0] instanceof Uint8Array) return t[0];
          var s = 0;
          for (var _n = 0; _n < e; _n++) s += arrayByteLength(t[_n]);
          var n = 0;
          var i = new Uint8Array(s);
          for (var _s = 0; _s < e; _s++) {
            var _e = t[_s];
            _e instanceof Uint8Array || (_e = "string" == typeof _e ? stringToBytes(_e) : new Uint8Array(_e));
            var _a = _e.byteLength;
            i.set(_e, n);
            n += _a;
          }
          return i;
        };
        e.assert = function assert(t, e) {
          t || unreachable(e);
        };
        e.bytesToString = function bytesToString(t) {
          "object" == _typeof(t) && null !== t && void 0 !== t.length || unreachable("Invalid argument for bytesToString");
          var e = t.length,
            s = 8192;
          if (e < s) return String.fromCharCode.apply(null, t);
          var n = [];
          for (var _i = 0; _i < e; _i += s) {
            var _a2 = Math.min(_i + s, e),
              _r = t.subarray(_i, _a2);
            n.push(String.fromCharCode.apply(null, _r));
          }
          return n.join("");
        };
        e.createPromiseCapability = function createPromiseCapability() {
          var t = Object.create(null);
          var e = !1;
          Object.defineProperty(t, "settled", {
            get: function get() {
              return e;
            }
          });
          t.promise = new Promise(function (s, n) {
            t.resolve = function (t) {
              e = !0;
              s(t);
            };
            t.reject = function (t) {
              e = !0;
              n(t);
            };
          });
          return t;
        };
        e.createValidAbsoluteUrl = function createValidAbsoluteUrl(t) {
          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
          var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
          if (!t) return null;
          try {
            if (s && "string" == typeof t) {
              if (s.addDefaultProtocol && t.startsWith("www.")) {
                var _e2 = t.match(/\./g);
                _e2 && _e2.length >= 2 && (t = "http://".concat(t));
              }
              if (s.tryConvertEncoding) try {
                t = stringToUTF8String(t);
              } catch (t) {}
            }
            var _n2 = e ? new URL(t, e) : new URL(t);
            if (function _isValidProtocol(t) {
              if (!t) return !1;
              switch (t.protocol) {
                case "http:":
                case "https:":
                case "ftp:":
                case "mailto:":
                case "tel:":
                  return !0;
                default:
                  return !1;
              }
            }(_n2)) return _n2;
          } catch (t) {}
          return null;
        };
        e.getModificationDate = function getModificationDate() {
          var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();
          return [t.getUTCFullYear().toString(), (t.getUTCMonth() + 1).toString().padStart(2, "0"), t.getUTCDate().toString().padStart(2, "0"), t.getUTCHours().toString().padStart(2, "0"), t.getUTCMinutes().toString().padStart(2, "0"), t.getUTCSeconds().toString().padStart(2, "0")].join("");
        };
        e.getVerbosityLevel = function getVerbosityLevel() {
          return n;
        };
        e.info = function info(t) {
          n >= s.INFOS && console.log("Info: ".concat(t));
        };
        e.isArrayBuffer = function isArrayBuffer(t) {
          return "object" == _typeof(t) && null !== t && void 0 !== t.byteLength;
        };
        e.isArrayEqual = function isArrayEqual(t, e) {
          if (t.length !== e.length) return !1;
          for (var _s2 = 0, _n3 = t.length; _s2 < _n3; _s2++) if (t[_s2] !== e[_s2]) return !1;
          return !0;
        };
        e.objectFromMap = function objectFromMap(t) {
          var e = Object.create(null);
          var _iterator = _createForOfIteratorHelper(t),
            _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var _step$value = _slicedToArray(_step.value, 2),
                _s3 = _step$value[0],
                _n4 = _step$value[1];
              e[_s3] = _n4;
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          return e;
        };
        e.objectSize = function objectSize(t) {
          return Object.keys(t).length;
        };
        e.setVerbosityLevel = function setVerbosityLevel(t) {
          Number.isInteger(t) && (n = t);
        };
        e.shadow = shadow;
        e.string32 = function string32(t) {
          return String.fromCharCode(t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t);
        };
        e.stringToBytes = stringToBytes;
        e.stringToPDFString = function stringToPDFString(t) {
          if (t[0] >= "ï") {
            var _e3;
            "þ" === t[0] && "ÿ" === t[1] ? _e3 = "utf-16be" : "ÿ" === t[0] && "þ" === t[1] ? _e3 = "utf-16le" : "ï" === t[0] && "»" === t[1] && "¿" === t[2] && (_e3 = "utf-8");
            if (_e3) try {
              var _s4 = new TextDecoder(_e3, {
                  fatal: !0
                }),
                _n5 = stringToBytes(t);
              return _s4.decode(_n5);
            } catch (t) {
              warn("stringToPDFString: \"".concat(t, "\"."));
            }
          }
          var e = [];
          for (var _s5 = 0, _n6 = t.length; _s5 < _n6; _s5++) {
            var _n7 = r[t.charCodeAt(_s5)];
            e.push(_n7 ? String.fromCharCode(_n7) : t.charAt(_s5));
          }
          return e.join("");
        };
        e.stringToUTF8String = stringToUTF8String;
        e.unreachable = unreachable;
        e.utf8StringToString = function utf8StringToString(t) {
          return unescape(encodeURIComponent(t));
        };
        e.warn = warn;
        e.IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];
        e.FONT_IDENTITY_MATRIX = [.001, 0, 0, .001, 0, 0];
        e.LINE_FACTOR = 1.35;
        e.LINE_DESCENT_FACTOR = .35;
        e.BASELINE_FACTOR = .25925925925925924;
        e.RenderingIntentFlag = {
          ANY: 1,
          DISPLAY: 2,
          PRINT: 4,
          SAVE: 8,
          ANNOTATIONS_FORMS: 16,
          ANNOTATIONS_STORAGE: 32,
          ANNOTATIONS_DISABLE: 64,
          OPLIST: 256
        };
        e.AnnotationMode = {
          DISABLE: 0,
          ENABLE: 1,
          ENABLE_FORMS: 2,
          ENABLE_STORAGE: 3
        };
        e.AnnotationEditorPrefix = "pdfjs_internal_editor_";
        e.AnnotationEditorType = {
          DISABLE: -1,
          NONE: 0,
          FREETEXT: 3,
          INK: 15
        };
        e.AnnotationEditorParamsType = {
          FREETEXT_SIZE: 1,
          FREETEXT_COLOR: 2,
          FREETEXT_OPACITY: 3,
          INK_COLOR: 11,
          INK_THICKNESS: 12,
          INK_OPACITY: 13
        };
        e.PermissionFlag = {
          PRINT: 4,
          MODIFY_CONTENTS: 8,
          COPY: 16,
          MODIFY_ANNOTATIONS: 32,
          FILL_INTERACTIVE_FORMS: 256,
          COPY_FOR_ACCESSIBILITY: 512,
          ASSEMBLE: 1024,
          PRINT_HIGH_QUALITY: 2048
        };
        e.TextRenderingMode = {
          FILL: 0,
          STROKE: 1,
          FILL_STROKE: 2,
          INVISIBLE: 3,
          FILL_ADD_TO_PATH: 4,
          STROKE_ADD_TO_PATH: 5,
          FILL_STROKE_ADD_TO_PATH: 6,
          ADD_TO_PATH: 7,
          FILL_STROKE_MASK: 3,
          ADD_TO_PATH_FLAG: 4
        };
        e.ImageKind = {
          GRAYSCALE_1BPP: 1,
          RGB_24BPP: 2,
          RGBA_32BPP: 3
        };
        e.AnnotationType = {
          TEXT: 1,
          LINK: 2,
          FREETEXT: 3,
          LINE: 4,
          SQUARE: 5,
          CIRCLE: 6,
          POLYGON: 7,
          POLYLINE: 8,
          HIGHLIGHT: 9,
          UNDERLINE: 10,
          SQUIGGLY: 11,
          STRIKEOUT: 12,
          STAMP: 13,
          CARET: 14,
          INK: 15,
          POPUP: 16,
          FILEATTACHMENT: 17,
          SOUND: 18,
          MOVIE: 19,
          WIDGET: 20,
          SCREEN: 21,
          PRINTERMARK: 22,
          TRAPNET: 23,
          WATERMARK: 24,
          THREED: 25,
          REDACT: 26
        };
        e.AnnotationStateModelType = {
          MARKED: "Marked",
          REVIEW: "Review"
        };
        e.AnnotationMarkedState = {
          MARKED: "Marked",
          UNMARKED: "Unmarked"
        };
        e.AnnotationReviewState = {
          ACCEPTED: "Accepted",
          REJECTED: "Rejected",
          CANCELLED: "Cancelled",
          COMPLETED: "Completed",
          NONE: "None"
        };
        e.AnnotationReplyType = {
          GROUP: "Group",
          REPLY: "R"
        };
        e.AnnotationFlag = {
          INVISIBLE: 1,
          HIDDEN: 2,
          PRINT: 4,
          NOZOOM: 8,
          NOROTATE: 16,
          NOVIEW: 32,
          READONLY: 64,
          LOCKED: 128,
          TOGGLENOVIEW: 256,
          LOCKEDCONTENTS: 512
        };
        e.AnnotationFieldFlag = {
          READONLY: 1,
          REQUIRED: 2,
          NOEXPORT: 4,
          MULTILINE: 4096,
          PASSWORD: 8192,
          NOTOGGLETOOFF: 16384,
          RADIO: 32768,
          PUSHBUTTON: 65536,
          COMBO: 131072,
          EDIT: 262144,
          SORT: 524288,
          FILESELECT: 1048576,
          MULTISELECT: 2097152,
          DONOTSPELLCHECK: 4194304,
          DONOTSCROLL: 8388608,
          COMB: 16777216,
          RICHTEXT: 33554432,
          RADIOSINUNISON: 33554432,
          COMMITONSELCHANGE: 67108864
        };
        e.AnnotationBorderStyleType = {
          SOLID: 1,
          DASHED: 2,
          BEVELED: 3,
          INSET: 4,
          UNDERLINE: 5
        };
        e.AnnotationActionEventType = {
          E: "Mouse Enter",
          X: "Mouse Exit",
          D: "Mouse Down",
          U: "Mouse Up",
          Fo: "Focus",
          Bl: "Blur",
          PO: "PageOpen",
          PC: "PageClose",
          PV: "PageVisible",
          PI: "PageInvisible",
          K: "Keystroke",
          F: "Format",
          V: "Validate",
          C: "Calculate"
        };
        e.DocumentActionEventType = {
          WC: "WillClose",
          WS: "WillSave",
          DS: "DidSave",
          WP: "WillPrint",
          DP: "DidPrint"
        };
        e.PageActionEventType = {
          O: "PageOpen",
          C: "PageClose"
        };
        e.StreamType = {
          UNKNOWN: "UNKNOWN",
          FLATE: "FLATE",
          LZW: "LZW",
          DCT: "DCT",
          JPX: "JPX",
          JBIG: "JBIG",
          A85: "A85",
          AHX: "AHX",
          CCF: "CCF",
          RLX: "RLX"
        };
        e.FontType = {
          UNKNOWN: "UNKNOWN",
          TYPE1: "TYPE1",
          TYPE1STANDARD: "TYPE1STANDARD",
          TYPE1C: "TYPE1C",
          CIDFONTTYPE0: "CIDFONTTYPE0",
          CIDFONTTYPE0C: "CIDFONTTYPE0C",
          TRUETYPE: "TRUETYPE",
          CIDFONTTYPE2: "CIDFONTTYPE2",
          TYPE3: "TYPE3",
          OPENTYPE: "OPENTYPE",
          TYPE0: "TYPE0",
          MMTYPE1: "MMTYPE1"
        };
        var s = {
          ERRORS: 0,
          WARNINGS: 1,
          INFOS: 5
        };
        e.VerbosityLevel = s;
        e.CMapCompressionType = {
          NONE: 0,
          BINARY: 1
        };
        e.OPS = {
          dependency: 1,
          setLineWidth: 2,
          setLineCap: 3,
          setLineJoin: 4,
          setMiterLimit: 5,
          setDash: 6,
          setRenderingIntent: 7,
          setFlatness: 8,
          setGState: 9,
          save: 10,
          restore: 11,
          transform: 12,
          moveTo: 13,
          lineTo: 14,
          curveTo: 15,
          curveTo2: 16,
          curveTo3: 17,
          closePath: 18,
          rectangle: 19,
          stroke: 20,
          closeStroke: 21,
          fill: 22,
          eoFill: 23,
          fillStroke: 24,
          eoFillStroke: 25,
          closeFillStroke: 26,
          closeEOFillStroke: 27,
          endPath: 28,
          clip: 29,
          eoClip: 30,
          beginText: 31,
          endText: 32,
          setCharSpacing: 33,
          setWordSpacing: 34,
          setHScale: 35,
          setLeading: 36,
          setFont: 37,
          setTextRenderingMode: 38,
          setTextRise: 39,
          moveText: 40,
          setLeadingMoveText: 41,
          setTextMatrix: 42,
          nextLine: 43,
          showText: 44,
          showSpacedText: 45,
          nextLineShowText: 46,
          nextLineSetSpacingShowText: 47,
          setCharWidth: 48,
          setCharWidthAndBounds: 49,
          setStrokeColorSpace: 50,
          setFillColorSpace: 51,
          setStrokeColor: 52,
          setStrokeColorN: 53,
          setFillColor: 54,
          setFillColorN: 55,
          setStrokeGray: 56,
          setFillGray: 57,
          setStrokeRGBColor: 58,
          setFillRGBColor: 59,
          setStrokeCMYKColor: 60,
          setFillCMYKColor: 61,
          shadingFill: 62,
          beginInlineImage: 63,
          beginImageData: 64,
          endInlineImage: 65,
          paintXObject: 66,
          markPoint: 67,
          markPointProps: 68,
          beginMarkedContent: 69,
          beginMarkedContentProps: 70,
          endMarkedContent: 71,
          beginCompat: 72,
          endCompat: 73,
          paintFormXObjectBegin: 74,
          paintFormXObjectEnd: 75,
          beginGroup: 76,
          endGroup: 77,
          beginAnnotation: 80,
          endAnnotation: 81,
          paintImageMaskXObject: 83,
          paintImageMaskXObjectGroup: 84,
          paintImageXObject: 85,
          paintInlineImageXObject: 86,
          paintInlineImageXObjectGroup: 87,
          paintImageXObjectRepeat: 88,
          paintImageMaskXObjectRepeat: 89,
          paintSolidColorImageMask: 90,
          constructPath: 91
        };
        e.UNSUPPORTED_FEATURES = {
          forms: "forms",
          javaScript: "javaScript",
          signatures: "signatures",
          smask: "smask",
          shadingPattern: "shadingPattern",
          errorTilingPattern: "errorTilingPattern",
          errorExtGState: "errorExtGState",
          errorXObject: "errorXObject",
          errorFontLoadType3: "errorFontLoadType3",
          errorFontState: "errorFontState",
          errorFontMissing: "errorFontMissing",
          errorFontTranslate: "errorFontTranslate",
          errorColorSpace: "errorColorSpace",
          errorOperatorList: "errorOperatorList",
          errorFontToUnicode: "errorFontToUnicode",
          errorFontLoadNative: "errorFontLoadNative",
          errorFontBuildPath: "errorFontBuildPath",
          errorFontGetPath: "errorFontGetPath",
          errorMarkedContent: "errorMarkedContent",
          errorContentSubStream: "errorContentSubStream"
        };
        e.PasswordResponses = {
          NEED_PASSWORD: 1,
          INCORRECT_PASSWORD: 2
        };
        var n = s.WARNINGS;
        function warn(t) {
          n >= s.WARNINGS && console.log("Warning: ".concat(t));
        }
        function unreachable(t) {
          throw new Error(t);
        }
        function shadow(t, e, s) {
          var n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;
          Object.defineProperty(t, e, {
            value: s,
            enumerable: !n,
            configurable: !0,
            writable: !1
          });
          return s;
        }
        var i = function BaseExceptionClosure() {
          function BaseException(t, e) {
            this.constructor === BaseException && unreachable("Cannot initialize BaseException.");
            this.message = t;
            this.name = e;
          }
          BaseException.prototype = new Error();
          BaseException.constructor = BaseException;
          return BaseException;
        }();
        e.BaseException = i;
        e.PasswordException = /*#__PURE__*/function (_i2) {
          _inherits(PasswordException, _i2);
          var _super = _createSuper(PasswordException);
          function PasswordException(t, e) {
            var _this;
            _classCallCheck(this, PasswordException);
            _this = _super.call(this, t, "PasswordException");
            _this.code = e;
            return _this;
          }
          return _createClass(PasswordException);
        }(i);
        e.UnknownErrorException = /*#__PURE__*/function (_i3) {
          _inherits(UnknownErrorException, _i3);
          var _super2 = _createSuper(UnknownErrorException);
          function UnknownErrorException(t, e) {
            var _this2;
            _classCallCheck(this, UnknownErrorException);
            _this2 = _super2.call(this, t, "UnknownErrorException");
            _this2.details = e;
            return _this2;
          }
          return _createClass(UnknownErrorException);
        }(i);
        e.InvalidPDFException = /*#__PURE__*/function (_i4) {
          _inherits(InvalidPDFException, _i4);
          var _super3 = _createSuper(InvalidPDFException);
          function InvalidPDFException(t) {
            _classCallCheck(this, InvalidPDFException);
            return _super3.call(this, t, "InvalidPDFException");
          }
          return _createClass(InvalidPDFException);
        }(i);
        e.MissingPDFException = /*#__PURE__*/function (_i5) {
          _inherits(MissingPDFException, _i5);
          var _super4 = _createSuper(MissingPDFException);
          function MissingPDFException(t) {
            _classCallCheck(this, MissingPDFException);
            return _super4.call(this, t, "MissingPDFException");
          }
          return _createClass(MissingPDFException);
        }(i);
        e.UnexpectedResponseException = /*#__PURE__*/function (_i6) {
          _inherits(UnexpectedResponseException, _i6);
          var _super5 = _createSuper(UnexpectedResponseException);
          function UnexpectedResponseException(t, e) {
            var _this3;
            _classCallCheck(this, UnexpectedResponseException);
            _this3 = _super5.call(this, t, "UnexpectedResponseException");
            _this3.status = e;
            return _this3;
          }
          return _createClass(UnexpectedResponseException);
        }(i);
        e.FormatError = /*#__PURE__*/function (_i7) {
          _inherits(FormatError, _i7);
          var _super6 = _createSuper(FormatError);
          function FormatError(t) {
            _classCallCheck(this, FormatError);
            return _super6.call(this, t, "FormatError");
          }
          return _createClass(FormatError);
        }(i);
        e.AbortException = /*#__PURE__*/function (_i8) {
          _inherits(AbortException, _i8);
          var _super7 = _createSuper(AbortException);
          function AbortException(t) {
            _classCallCheck(this, AbortException);
            return _super7.call(this, t, "AbortException");
          }
          return _createClass(AbortException);
        }(i);
        function stringToBytes(t) {
          "string" != typeof t && unreachable("Invalid argument for stringToBytes");
          var e = t.length,
            s = new Uint8Array(e);
          for (var _n8 = 0; _n8 < e; ++_n8) s[_n8] = 255 & t.charCodeAt(_n8);
          return s;
        }
        function arrayByteLength(t) {
          if (void 0 !== t.length) return t.length;
          if (void 0 !== t.byteLength) return t.byteLength;
          unreachable("Invalid argument for arrayByteLength");
        }
        e.FeatureTest = /*#__PURE__*/function () {
          function FeatureTest() {
            _classCallCheck(this, FeatureTest);
          }
          _createClass(FeatureTest, null, [{
            key: "isLittleEndian",
            get: function get() {
              return shadow(this, "isLittleEndian", function isLittleEndian() {
                var t = new Uint8Array(4);
                t[0] = 1;
                return 1 === new Uint32Array(t.buffer, 0, 1)[0];
              }());
            }
          }, {
            key: "isEvalSupported",
            get: function get() {
              return shadow(this, "isEvalSupported", function isEvalSupported() {
                try {
                  new Function("");
                  return !0;
                } catch (t) {
                  return !1;
                }
              }());
            }
          }, {
            key: "isOffscreenCanvasSupported",
            get: function get() {
              return shadow(this, "isOffscreenCanvasSupported", "undefined" != typeof OffscreenCanvas);
            }
          }, {
            key: "platform",
            get: function get() {
              return "undefined" == typeof navigator ? shadow(this, "platform", {
                isWin: !1,
                isMac: !1
              }) : shadow(this, "platform", {
                isWin: navigator.platform.includes("Win"),
                isMac: navigator.platform.includes("Mac")
              });
            }
          }]);
          return FeatureTest;
        }();
        var a = _toConsumableArray(Array(256).keys()).map(function (t) {
          return t.toString(16).padStart(2, "0");
        });
        var Util = /*#__PURE__*/function () {
          function Util() {
            _classCallCheck(this, Util);
          }
          _createClass(Util, null, [{
            key: "makeHexColor",
            value: function makeHexColor(t, e, s) {
              return "#".concat(a[t]).concat(a[e]).concat(a[s]);
            }
          }, {
            key: "scaleMinMax",
            value: function scaleMinMax(t, e) {
              var s;
              if (t[0]) {
                if (t[0] < 0) {
                  s = e[0];
                  e[0] = e[1];
                  e[1] = s;
                }
                e[0] *= t[0];
                e[1] *= t[0];
                if (t[3] < 0) {
                  s = e[2];
                  e[2] = e[3];
                  e[3] = s;
                }
                e[2] *= t[3];
                e[3] *= t[3];
              } else {
                s = e[0];
                e[0] = e[2];
                e[2] = s;
                s = e[1];
                e[1] = e[3];
                e[3] = s;
                if (t[1] < 0) {
                  s = e[2];
                  e[2] = e[3];
                  e[3] = s;
                }
                e[2] *= t[1];
                e[3] *= t[1];
                if (t[2] < 0) {
                  s = e[0];
                  e[0] = e[1];
                  e[1] = s;
                }
                e[0] *= t[2];
                e[1] *= t[2];
              }
              e[0] += t[4];
              e[1] += t[4];
              e[2] += t[5];
              e[3] += t[5];
            }
          }, {
            key: "transform",
            value: function transform(t, e) {
              return [t[0] * e[0] + t[2] * e[1], t[1] * e[0] + t[3] * e[1], t[0] * e[2] + t[2] * e[3], t[1] * e[2] + t[3] * e[3], t[0] * e[4] + t[2] * e[5] + t[4], t[1] * e[4] + t[3] * e[5] + t[5]];
            }
          }, {
            key: "applyTransform",
            value: function applyTransform(t, e) {
              return [t[0] * e[0] + t[1] * e[2] + e[4], t[0] * e[1] + t[1] * e[3] + e[5]];
            }
          }, {
            key: "applyInverseTransform",
            value: function applyInverseTransform(t, e) {
              var s = e[0] * e[3] - e[1] * e[2];
              return [(t[0] * e[3] - t[1] * e[2] + e[2] * e[5] - e[4] * e[3]) / s, (-t[0] * e[1] + t[1] * e[0] + e[4] * e[1] - e[5] * e[0]) / s];
            }
          }, {
            key: "getAxialAlignedBoundingBox",
            value: function getAxialAlignedBoundingBox(t, e) {
              var s = Util.applyTransform(t, e),
                n = Util.applyTransform(t.slice(2, 4), e),
                i = Util.applyTransform([t[0], t[3]], e),
                a = Util.applyTransform([t[2], t[1]], e);
              return [Math.min(s[0], n[0], i[0], a[0]), Math.min(s[1], n[1], i[1], a[1]), Math.max(s[0], n[0], i[0], a[0]), Math.max(s[1], n[1], i[1], a[1])];
            }
          }, {
            key: "inverseTransform",
            value: function inverseTransform(t) {
              var e = t[0] * t[3] - t[1] * t[2];
              return [t[3] / e, -t[1] / e, -t[2] / e, t[0] / e, (t[2] * t[5] - t[4] * t[3]) / e, (t[4] * t[1] - t[5] * t[0]) / e];
            }
          }, {
            key: "singularValueDecompose2dScale",
            value: function singularValueDecompose2dScale(t) {
              var e = [t[0], t[2], t[1], t[3]],
                s = t[0] * e[0] + t[1] * e[2],
                n = t[0] * e[1] + t[1] * e[3],
                i = t[2] * e[0] + t[3] * e[2],
                a = t[2] * e[1] + t[3] * e[3],
                r = (s + a) / 2,
                o = Math.sqrt(Math.pow(s + a, 2) - 4 * (s * a - i * n)) / 2,
                l = r + o || 1,
                c = r - o || 1;
              return [Math.sqrt(l), Math.sqrt(c)];
            }
          }, {
            key: "normalizeRect",
            value: function normalizeRect(t) {
              var e = t.slice(0);
              if (t[0] > t[2]) {
                e[0] = t[2];
                e[2] = t[0];
              }
              if (t[1] > t[3]) {
                e[1] = t[3];
                e[3] = t[1];
              }
              return e;
            }
          }, {
            key: "intersect",
            value: function intersect(t, e) {
              var s = Math.max(Math.min(t[0], t[2]), Math.min(e[0], e[2])),
                n = Math.min(Math.max(t[0], t[2]), Math.max(e[0], e[2]));
              if (s > n) return null;
              var i = Math.max(Math.min(t[1], t[3]), Math.min(e[1], e[3])),
                a = Math.min(Math.max(t[1], t[3]), Math.max(e[1], e[3]));
              return i > a ? null : [s, i, n, a];
            }
          }, {
            key: "bezierBoundingBox",
            value: function bezierBoundingBox(t, e, s, n, i, a, r, o) {
              var l = [],
                c = [[], []];
              var h, d, u, p, g, m, f, b;
              for (var _c = 0; _c < 2; ++_c) {
                if (0 === _c) {
                  d = 6 * t - 12 * s + 6 * i;
                  h = -3 * t + 9 * s - 9 * i + 3 * r;
                  u = 3 * s - 3 * t;
                } else {
                  d = 6 * e - 12 * n + 6 * a;
                  h = -3 * e + 9 * n - 9 * a + 3 * o;
                  u = 3 * n - 3 * e;
                }
                if (Math.abs(h) < 1e-12) {
                  if (Math.abs(d) < 1e-12) continue;
                  p = -u / d;
                  0 < p && p < 1 && l.push(p);
                } else {
                  f = d * d - 4 * u * h;
                  b = Math.sqrt(f);
                  if (!(f < 0)) {
                    g = (-d + b) / (2 * h);
                    0 < g && g < 1 && l.push(g);
                    m = (-d - b) / (2 * h);
                    0 < m && m < 1 && l.push(m);
                  }
                }
              }
              var A,
                _ = l.length;
              var y = _;
              for (; _--;) {
                p = l[_];
                A = 1 - p;
                c[0][_] = A * A * A * t + 3 * A * A * p * s + 3 * A * p * p * i + p * p * p * r;
                c[1][_] = A * A * A * e + 3 * A * A * p * n + 3 * A * p * p * a + p * p * p * o;
              }
              c[0][y] = t;
              c[1][y] = e;
              c[0][y + 1] = r;
              c[1][y + 1] = o;
              c[0].length = c[1].length = y + 2;
              return [Math.min.apply(Math, _toConsumableArray(c[0])), Math.min.apply(Math, _toConsumableArray(c[1])), Math.max.apply(Math, _toConsumableArray(c[0])), Math.max.apply(Math, _toConsumableArray(c[1]))];
            }
          }]);
          return Util;
        }();
        e.Util = Util;
        var r = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 728, 711, 710, 729, 733, 731, 730, 732, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8226, 8224, 8225, 8230, 8212, 8211, 402, 8260, 8249, 8250, 8722, 8240, 8222, 8220, 8221, 8216, 8217, 8218, 8482, 64257, 64258, 321, 338, 352, 376, 381, 305, 322, 339, 353, 382, 0, 8364];
        function stringToUTF8String(t) {
          return decodeURIComponent(escape(t));
        }
      }, function (__unused_webpack_module, exports, __w_pdfjs_require__) {
        Object.defineProperty(exports, "__esModule", {
          value: !0
        });
        exports.build = exports.RenderTask = exports.PDFWorkerUtil = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDocumentLoadingTask = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultStandardFontDataFactory = exports.DefaultCanvasFactory = exports.DefaultCMapReaderFactory = void 0;
        exports.getDocument = getDocument;
        exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;
        exports.version = void 0;
        var _util = __w_pdfjs_require__(1),
          _annotation_storage = __w_pdfjs_require__(3),
          _display_utils = __w_pdfjs_require__(6),
          _font_loader = __w_pdfjs_require__(9),
          _canvas = __w_pdfjs_require__(11),
          _worker_options = __w_pdfjs_require__(14),
          _is_node = __w_pdfjs_require__(10),
          _message_handler = __w_pdfjs_require__(15),
          _metadata = __w_pdfjs_require__(16),
          _optional_content_config = __w_pdfjs_require__(17),
          _transport_stream = __w_pdfjs_require__(18),
          _xfa_text = __w_pdfjs_require__(19);
        var DEFAULT_RANGE_CHUNK_SIZE = 65536,
          RENDERING_CANCELLED_TIMEOUT = 100;
        var DefaultCanvasFactory = _display_utils.DOMCanvasFactory;
        exports.DefaultCanvasFactory = DefaultCanvasFactory;
        var DefaultCMapReaderFactory = _display_utils.DOMCMapReaderFactory;
        exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;
        var DefaultStandardFontDataFactory = _display_utils.DOMStandardFontDataFactory,
          createPDFNetworkStream;
        exports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory;
        if (_is_node.isNodeJS) {
          var _w_pdfjs_require__ = __w_pdfjs_require__(20),
            t = _w_pdfjs_require__.NodeCanvasFactory,
            e = _w_pdfjs_require__.NodeCMapReaderFactory,
            s = _w_pdfjs_require__.NodeStandardFontDataFactory;
          exports.DefaultCanvasFactory = DefaultCanvasFactory = t;
          exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory = e;
          exports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory = s;
        }
        function setPDFNetworkStreamFactory(t) {
          createPDFNetworkStream = t;
        }
        function getDocument(t) {
          var e = new PDFDocumentLoadingTask();
          var s;
          if ("string" == typeof t || t instanceof URL) s = {
            url: t
          };else if ((0, _util.isArrayBuffer)(t)) s = {
            data: t
          };else if (t instanceof PDFDataRangeTransport) s = {
            range: t
          };else {
            if ("object" != _typeof(t)) throw new Error("Invalid parameter in getDocument, need either string, URL, TypedArray, or parameter object.");
            if (!t.url && !t.data && !t.range) throw new Error("Invalid parameter object: need either .data, .range or .url");
            s = t;
          }
          var n = Object.create(null);
          var i = null,
            a = null;
          for (var _t in s) {
            var _e4 = s[_t];
            switch (_t) {
              case "url":
                if ("undefined" != typeof window) try {
                  n[_t] = new URL(_e4, window.location).href;
                  continue;
                } catch (t) {
                  (0, _util.warn)("Cannot create valid URL: \"".concat(t, "\"."));
                } else if ("string" == typeof _e4 || _e4 instanceof URL) {
                  n[_t] = _e4.toString();
                  continue;
                }
                throw new Error("Invalid PDF url data: either string or URL-object is expected in the url property.");
              case "range":
                i = _e4;
                continue;
              case "worker":
                a = _e4;
                continue;
              case "data":
                if (_is_node.isNodeJS && "undefined" != typeof Buffer && _e4 instanceof Buffer) n[_t] = new Uint8Array(_e4);else {
                  if (_e4 instanceof Uint8Array) break;
                  if ("string" == typeof _e4) n[_t] = (0, _util.stringToBytes)(_e4);else if ("object" != _typeof(_e4) || null === _e4 || isNaN(_e4.length)) {
                    if (!(0, _util.isArrayBuffer)(_e4)) throw new Error("Invalid PDF binary data: either TypedArray, string, or array-like object is expected in the data property.");
                    n[_t] = new Uint8Array(_e4);
                  } else n[_t] = new Uint8Array(_e4);
                }
                continue;
            }
            n[_t] = _e4;
          }
          n.CMapReaderFactory = n.CMapReaderFactory || DefaultCMapReaderFactory;
          n.StandardFontDataFactory = n.StandardFontDataFactory || DefaultStandardFontDataFactory;
          n.ignoreErrors = !0 !== n.stopAtErrors;
          n.fontExtraProperties = !0 === n.fontExtraProperties;
          n.pdfBug = !0 === n.pdfBug;
          n.enableXfa = !0 === n.enableXfa;
          (!Number.isInteger(n.rangeChunkSize) || n.rangeChunkSize < 1) && (n.rangeChunkSize = DEFAULT_RANGE_CHUNK_SIZE);
          ("string" != typeof n.docBaseUrl || (0, _display_utils.isDataScheme)(n.docBaseUrl)) && (n.docBaseUrl = null);
          (!Number.isInteger(n.maxImageSize) || n.maxImageSize < -1) && (n.maxImageSize = -1);
          "string" != typeof n.cMapUrl && (n.cMapUrl = null);
          "string" != typeof n.standardFontDataUrl && (n.standardFontDataUrl = null);
          "boolean" != typeof n.useWorkerFetch && (n.useWorkerFetch = n.CMapReaderFactory === _display_utils.DOMCMapReaderFactory && n.StandardFontDataFactory === _display_utils.DOMStandardFontDataFactory);
          "boolean" != typeof n.isEvalSupported && (n.isEvalSupported = !0);
          "boolean" != typeof n.isOffscreenCanvasSupported && (n.isOffscreenCanvasSupported = !_is_node.isNodeJS);
          "boolean" != typeof n.disableFontFace && (n.disableFontFace = _is_node.isNodeJS);
          "boolean" != typeof n.useSystemFonts && (n.useSystemFonts = !_is_node.isNodeJS && !n.disableFontFace);
          "object" == _typeof(n.ownerDocument) && null !== n.ownerDocument || (n.ownerDocument = globalThis.document);
          "boolean" != typeof n.disableRange && (n.disableRange = !1);
          "boolean" != typeof n.disableStream && (n.disableStream = !1);
          "boolean" != typeof n.disableAutoFetch && (n.disableAutoFetch = !1);
          (0, _util.setVerbosityLevel)(n.verbosity);
          if (!a) {
            var _t2 = {
              verbosity: n.verbosity,
              port: _worker_options.GlobalWorkerOptions.workerPort
            };
            a = _t2.port ? PDFWorker.fromPort(_t2) : new PDFWorker(_t2);
            e._worker = a;
          }
          var r = e.docId;
          a.promise.then(function () {
            if (e.destroyed) throw new Error("Loading aborted");
            var t = _fetchDocument(a, n, i, r),
              s = new Promise(function (t) {
                var e;
                i ? e = new _transport_stream.PDFDataTransportStream({
                  length: n.length,
                  initialData: n.initialData,
                  progressiveDone: n.progressiveDone,
                  contentDispositionFilename: n.contentDispositionFilename,
                  disableRange: n.disableRange,
                  disableStream: n.disableStream
                }, i) : n.data || (e = createPDFNetworkStream({
                  url: n.url,
                  length: n.length,
                  httpHeaders: n.httpHeaders,
                  withCredentials: n.withCredentials,
                  rangeChunkSize: n.rangeChunkSize,
                  disableRange: n.disableRange,
                  disableStream: n.disableStream
                }));
                t(e);
              });
            return Promise.all([t, s]).then(function (_ref) {
              var _ref2 = _slicedToArray(_ref, 2),
                t = _ref2[0],
                s = _ref2[1];
              if (e.destroyed) throw new Error("Loading aborted");
              var i = new _message_handler.MessageHandler(r, t, a.port),
                o = new WorkerTransport(i, e, s, n);
              e._transport = o;
              i.send("Ready", null);
            });
          })["catch"](e._capability.reject);
          return e;
        }
        function _fetchDocument(_x2, _x3, _x4, _x5) {
          return _fetchDocument2.apply(this, arguments);
        }
        function _fetchDocument2() {
          _fetchDocument2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(t, e, s, n) {
            var i;
            return _regeneratorRuntime().wrap(function _callee6$(_context6) {
              while (1) switch (_context6.prev = _context6.next) {
                case 0:
                  if (!t.destroyed) {
                    _context6.next = 2;
                    break;
                  }
                  throw new Error("Worker was destroyed");
                case 2:
                  if (s) {
                    e.length = s.length;
                    e.initialData = s.initialData;
                    e.progressiveDone = s.progressiveDone;
                    e.contentDispositionFilename = s.contentDispositionFilename;
                  }
                  _context6.next = 5;
                  return t.messageHandler.sendWithPromise("GetDocRequest", {
                    docId: n,
                    apiVersion: "3.2.146",
                    data: e.data,
                    password: e.password,
                    disableAutoFetch: e.disableAutoFetch,
                    rangeChunkSize: e.rangeChunkSize,
                    length: e.length,
                    docBaseUrl: e.docBaseUrl,
                    enableXfa: e.enableXfa,
                    evaluatorOptions: {
                      maxImageSize: e.maxImageSize,
                      disableFontFace: e.disableFontFace,
                      ignoreErrors: e.ignoreErrors,
                      isEvalSupported: e.isEvalSupported,
                      isOffscreenCanvasSupported: e.isOffscreenCanvasSupported,
                      fontExtraProperties: e.fontExtraProperties,
                      useSystemFonts: e.useSystemFonts,
                      cMapUrl: e.useWorkerFetch ? e.cMapUrl : null,
                      standardFontDataUrl: e.useWorkerFetch ? e.standardFontDataUrl : null
                    }
                  });
                case 5:
                  i = _context6.sent;
                  e.data && (e.data = null);
                  if (!t.destroyed) {
                    _context6.next = 9;
                    break;
                  }
                  throw new Error("Worker was destroyed");
                case 9:
                  return _context6.abrupt("return", i);
                case 10:
                case "end":
                  return _context6.stop();
              }
            }, _callee6);
          }));
          return _fetchDocument2.apply(this, arguments);
        }
        var _e5 = /*#__PURE__*/new WeakMap();
        var PDFDocumentLoadingTask = /*#__PURE__*/function () {
          function PDFDocumentLoadingTask() {
            var _PDFDocumentLoadingTa, _PDFDocumentLoadingTa2;
            _classCallCheck(this, PDFDocumentLoadingTask);
            _classPrivateFieldInitSpec(this, _e5, {
              writable: true,
              value: null
            });
            this._capability = (0, _util.createPromiseCapability)();
            this._transport = null;
            this._worker = null;
            this.docId = "d" + (_classStaticPrivateFieldSpecSet(PDFDocumentLoadingTask, PDFDocumentLoadingTask, _t3, (_PDFDocumentLoadingTa = _classStaticPrivateFieldSpecGet(PDFDocumentLoadingTask, PDFDocumentLoadingTask, _t3), _PDFDocumentLoadingTa2 = _PDFDocumentLoadingTa++, _PDFDocumentLoadingTa)), _PDFDocumentLoadingTa2);
            this.destroyed = !1;
            this.onPassword = null;
            this.onProgress = null;
          }
          _createClass(PDFDocumentLoadingTask, [{
            key: "onUnsupportedFeature",
            get: function get() {
              return _classPrivateFieldGet(this, _e5);
            },
            set: function set(t) {
              (0, _display_utils.deprecated)("The PDFDocumentLoadingTask onUnsupportedFeature property will be removed in the future.");
              _classPrivateFieldSet(this, _e5, t);
            }
          }, {
            key: "promise",
            get: function get() {
              return this._capability.promise;
            }
          }, {
            key: "destroy",
            value: function () {
              var _destroy = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
                var _this$_transport;
                return _regeneratorRuntime().wrap(function _callee$(_context) {
                  while (1) switch (_context.prev = _context.next) {
                    case 0:
                      this.destroyed = !0;
                      _context.next = 3;
                      return (_this$_transport = this._transport) === null || _this$_transport === void 0 ? void 0 : _this$_transport.destroy();
                    case 3:
                      this._transport = null;
                      if (this._worker) {
                        this._worker.destroy();
                        this._worker = null;
                      }
                    case 5:
                    case "end":
                      return _context.stop();
                  }
                }, _callee, this);
              }));
              function destroy() {
                return _destroy.apply(this, arguments);
              }
              return destroy;
            }()
          }]);
          return PDFDocumentLoadingTask;
        }();
        var _t3 = {
          writable: true,
          value: 0
        };
        exports.PDFDocumentLoadingTask = PDFDocumentLoadingTask;
        var PDFDataRangeTransport = /*#__PURE__*/function () {
          function PDFDataRangeTransport(t, e) {
            var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
            var n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
            _classCallCheck(this, PDFDataRangeTransport);
            this.length = t;
            this.initialData = e;
            this.progressiveDone = s;
            this.contentDispositionFilename = n;
            this._rangeListeners = [];
            this._progressListeners = [];
            this._progressiveReadListeners = [];
            this._progressiveDoneListeners = [];
            this._readyCapability = (0, _util.createPromiseCapability)();
          }
          _createClass(PDFDataRangeTransport, [{
            key: "addRangeListener",
            value: function addRangeListener(t) {
              this._rangeListeners.push(t);
            }
          }, {
            key: "addProgressListener",
            value: function addProgressListener(t) {
              this._progressListeners.push(t);
            }
          }, {
            key: "addProgressiveReadListener",
            value: function addProgressiveReadListener(t) {
              this._progressiveReadListeners.push(t);
            }
          }, {
            key: "addProgressiveDoneListener",
            value: function addProgressiveDoneListener(t) {
              this._progressiveDoneListeners.push(t);
            }
          }, {
            key: "onDataRange",
            value: function onDataRange(t, e) {
              var _iterator2 = _createForOfIteratorHelper(this._rangeListeners),
                _step2;
              try {
                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                  var _s6 = _step2.value;
                  _s6(t, e);
                }
              } catch (err) {
                _iterator2.e(err);
              } finally {
                _iterator2.f();
              }
            }
          }, {
            key: "onDataProgress",
            value: function onDataProgress(t, e) {
              var _this4 = this;
              this._readyCapability.promise.then(function () {
                var _iterator3 = _createForOfIteratorHelper(_this4._progressListeners),
                  _step3;
                try {
                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                    var _s7 = _step3.value;
                    _s7(t, e);
                  }
                } catch (err) {
                  _iterator3.e(err);
                } finally {
                  _iterator3.f();
                }
              });
            }
          }, {
            key: "onDataProgressiveRead",
            value: function onDataProgressiveRead(t) {
              var _this5 = this;
              this._readyCapability.promise.then(function () {
                var _iterator4 = _createForOfIteratorHelper(_this5._progressiveReadListeners),
                  _step4;
                try {
                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                    var _e6 = _step4.value;
                    _e6(t);
                  }
                } catch (err) {
                  _iterator4.e(err);
                } finally {
                  _iterator4.f();
                }
              });
            }
          }, {
            key: "onDataProgressiveDone",
            value: function onDataProgressiveDone() {
              var _this6 = this;
              this._readyCapability.promise.then(function () {
                var _iterator5 = _createForOfIteratorHelper(_this6._progressiveDoneListeners),
                  _step5;
                try {
                  for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
                    var _t4 = _step5.value;
                    _t4();
                  }
                } catch (err) {
                  _iterator5.e(err);
                } finally {
                  _iterator5.f();
                }
              });
            }
          }, {
            key: "transportReady",
            value: function transportReady() {
              this._readyCapability.resolve();
            }
          }, {
            key: "requestDataRange",
            value: function requestDataRange(t, e) {
              (0, _util.unreachable)("Abstract method PDFDataRangeTransport.requestDataRange");
            }
          }, {
            key: "abort",
            value: function abort() {}
          }]);
          return PDFDataRangeTransport;
        }();
        exports.PDFDataRangeTransport = PDFDataRangeTransport;
        var PDFDocumentProxy = /*#__PURE__*/function () {
          function PDFDocumentProxy(t, e) {
            _classCallCheck(this, PDFDocumentProxy);
            this._pdfInfo = t;
            this._transport = e;
          }
          _createClass(PDFDocumentProxy, [{
            key: "annotationStorage",
            get: function get() {
              return this._transport.annotationStorage;
            }
          }, {
            key: "numPages",
            get: function get() {
              return this._pdfInfo.numPages;
            }
          }, {
            key: "fingerprints",
            get: function get() {
              return this._pdfInfo.fingerprints;
            }
          }, {
            key: "stats",
            get: function get() {
              (0, _display_utils.deprecated)("The PDFDocumentProxy stats property will be removed in the future.");
              return this._transport.stats;
            }
          }, {
            key: "isPureXfa",
            get: function get() {
              return (0, _util.shadow)(this, "isPureXfa", !!this._transport._htmlForXfa);
            }
          }, {
            key: "allXfaHtml",
            get: function get() {
              return this._transport._htmlForXfa;
            }
          }, {
            key: "getPage",
            value: function getPage(t) {
              return this._transport.getPage(t);
            }
          }, {
            key: "getPageIndex",
            value: function getPageIndex(t) {
              return this._transport.getPageIndex(t);
            }
          }, {
            key: "getDestinations",
            value: function getDestinations() {
              return this._transport.getDestinations();
            }
          }, {
            key: "getDestination",
            value: function getDestination(t) {
              return this._transport.getDestination(t);
            }
          }, {
            key: "getPageLabels",
            value: function getPageLabels() {
              return this._transport.getPageLabels();
            }
          }, {
            key: "getPageLayout",
            value: function getPageLayout() {
              return this._transport.getPageLayout();
            }
          }, {
            key: "getPageMode",
            value: function getPageMode() {
              return this._transport.getPageMode();
            }
          }, {
            key: "getViewerPreferences",
            value: function getViewerPreferences() {
              return this._transport.getViewerPreferences();
            }
          }, {
            key: "getOpenAction",
            value: function getOpenAction() {
              return this._transport.getOpenAction();
            }
          }, {
            key: "getAttachments",
            value: function getAttachments() {
              return this._transport.getAttachments();
            }
          }, {
            key: "getJavaScript",
            value: function getJavaScript() {
              return this._transport.getJavaScript();
            }
          }, {
            key: "getJSActions",
            value: function getJSActions() {
              return this._transport.getDocJSActions();
            }
          }, {
            key: "getOutline",
            value: function getOutline() {
              return this._transport.getOutline();
            }
          }, {
            key: "getOptionalContentConfig",
            value: function getOptionalContentConfig() {
              return this._transport.getOptionalContentConfig();
            }
          }, {
            key: "getPermissions",
            value: function getPermissions() {
              return this._transport.getPermissions();
            }
          }, {
            key: "getMetadata",
            value: function getMetadata() {
              return this._transport.getMetadata();
            }
          }, {
            key: "getMarkInfo",
            value: function getMarkInfo() {
              return this._transport.getMarkInfo();
            }
          }, {
            key: "getData",
            value: function getData() {
              return this._transport.getData();
            }
          }, {
            key: "saveDocument",
            value: function saveDocument() {
              return this._transport.saveDocument();
            }
          }, {
            key: "getDownloadInfo",
            value: function getDownloadInfo() {
              return this._transport.downloadInfoCapability.promise;
            }
          }, {
            key: "cleanup",
            value: function cleanup() {
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              return this._transport.startCleanup(t || this.isPureXfa);
            }
          }, {
            key: "destroy",
            value: function destroy() {
              return this.loadingTask.destroy();
            }
          }, {
            key: "loadingParams",
            get: function get() {
              return this._transport.loadingParams;
            }
          }, {
            key: "loadingTask",
            get: function get() {
              return this._transport.loadingTask;
            }
          }, {
            key: "getFieldObjects",
            value: function getFieldObjects() {
              return this._transport.getFieldObjects();
            }
          }, {
            key: "hasJSActions",
            value: function hasJSActions() {
              return this._transport.hasJSActions();
            }
          }, {
            key: "getCalculationOrderIds",
            value: function getCalculationOrderIds() {
              return this._transport.getCalculationOrderIds();
            }
          }]);
          return PDFDocumentProxy;
        }();
        exports.PDFDocumentProxy = PDFDocumentProxy;
        var PDFPageProxy = /*#__PURE__*/function () {
          function PDFPageProxy(t, e, s, n) {
            var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : !1;
            _classCallCheck(this, PDFPageProxy);
            this._pageIndex = t;
            this._pageInfo = e;
            this._ownerDocument = n;
            this._transport = s;
            this._stats = i ? new _display_utils.StatTimer() : null;
            this._pdfBug = i;
            this.commonObjs = s.commonObjs;
            this.objs = new PDFObjects();
            this._bitmaps = new Set();
            this.cleanupAfterRender = !1;
            this.pendingCleanup = !1;
            this._intentStates = new Map();
            this.destroyed = !1;
          }
          _createClass(PDFPageProxy, [{
            key: "pageNumber",
            get: function get() {
              return this._pageIndex + 1;
            }
          }, {
            key: "rotate",
            get: function get() {
              return this._pageInfo.rotate;
            }
          }, {
            key: "ref",
            get: function get() {
              return this._pageInfo.ref;
            }
          }, {
            key: "userUnit",
            get: function get() {
              return this._pageInfo.userUnit;
            }
          }, {
            key: "view",
            get: function get() {
              return this._pageInfo.view;
            }
          }, {
            key: "getViewport",
            value: function getViewport() {
              var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                t = _ref3.scale,
                _ref3$rotation = _ref3.rotation,
                e = _ref3$rotation === void 0 ? this.rotate : _ref3$rotation,
                _ref3$offsetX = _ref3.offsetX,
                s = _ref3$offsetX === void 0 ? 0 : _ref3$offsetX,
                _ref3$offsetY = _ref3.offsetY,
                n = _ref3$offsetY === void 0 ? 0 : _ref3$offsetY,
                _ref3$dontFlip = _ref3.dontFlip,
                i = _ref3$dontFlip === void 0 ? !1 : _ref3$dontFlip;
              return new _display_utils.PageViewport({
                viewBox: this.view,
                scale: t,
                rotation: e,
                offsetX: s,
                offsetY: n,
                dontFlip: i
              });
            }
          }, {
            key: "getAnnotations",
            value: function getAnnotations() {
              var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                _ref4$intent = _ref4.intent,
                t = _ref4$intent === void 0 ? "display" : _ref4$intent;
              var e = this._transport.getRenderingIntent(t);
              return this._transport.getAnnotations(this._pageIndex, e.renderingIntent);
            }
          }, {
            key: "getJSActions",
            value: function getJSActions() {
              return this._transport.getPageJSActions(this._pageIndex);
            }
          }, {
            key: "isPureXfa",
            get: function get() {
              return (0, _util.shadow)(this, "isPureXfa", !!this._transport._htmlForXfa);
            }
          }, {
            key: "getXfa",
            value: function () {
              var _getXfa = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
                var _this$_transport$_htm;
                return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                  while (1) switch (_context2.prev = _context2.next) {
                    case 0:
                      return _context2.abrupt("return", ((_this$_transport$_htm = this._transport._htmlForXfa) === null || _this$_transport$_htm === void 0 ? void 0 : _this$_transport$_htm.children[this._pageIndex]) || null);
                    case 1:
                    case "end":
                      return _context2.stop();
                  }
                }, _callee2, this);
              }));
              function getXfa() {
                return _getXfa.apply(this, arguments);
              }
              return getXfa;
            }()
          }, {
            key: "render",
            value: function render(_ref5) {
              var _this$_stats,
                _this7 = this,
                _u;
              var t = _ref5.canvasContext,
                e = _ref5.viewport,
                _ref5$intent = _ref5.intent,
                s = _ref5$intent === void 0 ? "display" : _ref5$intent,
                _ref5$annotationMode = _ref5.annotationMode,
                n = _ref5$annotationMode === void 0 ? _util.AnnotationMode.ENABLE : _ref5$annotationMode,
                _ref5$transform = _ref5.transform,
                i = _ref5$transform === void 0 ? null : _ref5$transform,
                _ref5$canvasFactory = _ref5.canvasFactory,
                a = _ref5$canvasFactory === void 0 ? null : _ref5$canvasFactory,
                _ref5$background = _ref5.background,
                r = _ref5$background === void 0 ? null : _ref5$background,
                _ref5$optionalContent = _ref5.optionalContentConfigPromise,
                o = _ref5$optionalContent === void 0 ? null : _ref5$optionalContent,
                _ref5$annotationCanva = _ref5.annotationCanvasMap,
                l = _ref5$annotationCanva === void 0 ? null : _ref5$annotationCanva,
                _ref5$pageColors = _ref5.pageColors,
                c = _ref5$pageColors === void 0 ? null : _ref5$pageColors,
                _ref5$printAnnotation = _ref5.printAnnotationStorage,
                h = _ref5$printAnnotation === void 0 ? null : _ref5$printAnnotation;
              (_this$_stats = this._stats) === null || _this$_stats === void 0 ? void 0 : _this$_stats.time("Overall");
              var d = this._transport.getRenderingIntent(s, n, h);
              this.pendingCleanup = !1;
              o || (o = this._transport.getOptionalContentConfig());
              var u = this._intentStates.get(d.cacheKey);
              if (!u) {
                u = Object.create(null);
                this._intentStates.set(d.cacheKey, u);
              }
              if (u.streamReaderCancelTimeout) {
                clearTimeout(u.streamReaderCancelTimeout);
                u.streamReaderCancelTimeout = null;
              }
              var p = a || new DefaultCanvasFactory({
                  ownerDocument: this._ownerDocument
                }),
                g = !!(d.renderingIntent & _util.RenderingIntentFlag.PRINT);
              if (!u.displayReadyCapability) {
                var _this$_stats2;
                u.displayReadyCapability = (0, _util.createPromiseCapability)();
                u.operatorList = {
                  fnArray: [],
                  argsArray: [],
                  lastChunk: !1,
                  separateAnnots: null
                };
                (_this$_stats2 = this._stats) === null || _this$_stats2 === void 0 ? void 0 : _this$_stats2.time("Page Request");
                this._pumpOperatorList(d);
              }
              var complete = function complete(t) {
                  var _this7$_stats, _this7$_stats2;
                  u.renderTasks["delete"](m);
                  (_this7.cleanupAfterRender || g) && (_this7.pendingCleanup = !0);
                  _this7._tryCleanup();
                  if (t) {
                    m.capability.reject(t);
                    _this7._abortOperatorList({
                      intentState: u,
                      reason: t instanceof Error ? t : new Error(t)
                    });
                  } else m.capability.resolve();
                  (_this7$_stats = _this7._stats) === null || _this7$_stats === void 0 ? void 0 : _this7$_stats.timeEnd("Rendering");
                  (_this7$_stats2 = _this7._stats) === null || _this7$_stats2 === void 0 ? void 0 : _this7$_stats2.timeEnd("Overall");
                },
                m = new InternalRenderTask({
                  callback: complete,
                  params: {
                    canvasContext: t,
                    viewport: e,
                    transform: i,
                    background: r
                  },
                  objs: this.objs,
                  commonObjs: this.commonObjs,
                  annotationCanvasMap: l,
                  operatorList: u.operatorList,
                  pageIndex: this._pageIndex,
                  canvasFactory: p,
                  useRequestAnimationFrame: !g,
                  pdfBug: this._pdfBug,
                  pageColors: c
                });
              ((_u = u).renderTasks || (_u.renderTasks = new Set())).add(m);
              var f = m.task;
              Promise.all([u.displayReadyCapability.promise, o]).then(function (_ref6) {
                var _ref7 = _slicedToArray(_ref6, 2),
                  t = _ref7[0],
                  e = _ref7[1];
                if (_this7.pendingCleanup) complete();else {
                  var _this7$_stats3;
                  (_this7$_stats3 = _this7._stats) === null || _this7$_stats3 === void 0 ? void 0 : _this7$_stats3.time("Rendering");
                  m.initializeGraphics({
                    transparency: t,
                    optionalContentConfig: e
                  });
                  m.operatorListChanged();
                }
              })["catch"](complete);
              return f;
            }
          }, {
            key: "getOperatorList",
            value: function getOperatorList() {
              var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                _ref8$intent = _ref8.intent,
                t = _ref8$intent === void 0 ? "display" : _ref8$intent,
                _ref8$annotationMode = _ref8.annotationMode,
                e = _ref8$annotationMode === void 0 ? _util.AnnotationMode.ENABLE : _ref8$annotationMode,
                _ref8$printAnnotation = _ref8.printAnnotationStorage,
                s = _ref8$printAnnotation === void 0 ? null : _ref8$printAnnotation;
              var n = this._transport.getRenderingIntent(t, e, s, !0);
              var i,
                a = this._intentStates.get(n.cacheKey);
              if (!a) {
                a = Object.create(null);
                this._intentStates.set(n.cacheKey, a);
              }
              if (!a.opListReadCapability) {
                var _a3, _this$_stats3;
                i = Object.create(null);
                i.operatorListChanged = function operatorListChanged() {
                  if (a.operatorList.lastChunk) {
                    a.opListReadCapability.resolve(a.operatorList);
                    a.renderTasks["delete"](i);
                  }
                };
                a.opListReadCapability = (0, _util.createPromiseCapability)();
                ((_a3 = a).renderTasks || (_a3.renderTasks = new Set())).add(i);
                a.operatorList = {
                  fnArray: [],
                  argsArray: [],
                  lastChunk: !1,
                  separateAnnots: null
                };
                (_this$_stats3 = this._stats) === null || _this$_stats3 === void 0 ? void 0 : _this$_stats3.time("Page Request");
                this._pumpOperatorList(n);
              }
              return a.opListReadCapability.promise;
            }
          }, {
            key: "streamTextContent",
            value: function streamTextContent() {
              var _ref9 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                _ref9$disableCombineT = _ref9.disableCombineTextItems,
                t = _ref9$disableCombineT === void 0 ? !1 : _ref9$disableCombineT,
                _ref9$includeMarkedCo = _ref9.includeMarkedContent,
                e = _ref9$includeMarkedCo === void 0 ? !1 : _ref9$includeMarkedCo;
              return this._transport.messageHandler.sendWithStream("GetTextContent", {
                pageIndex: this._pageIndex,
                combineTextItems: !0 !== t,
                includeMarkedContent: !0 === e
              }, {
                highWaterMark: 100,
                size: function size(t) {
                  return t.items.length;
                }
              });
            }
          }, {
            key: "getTextContent",
            value: function getTextContent() {
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
              if (this._transport._htmlForXfa) return this.getXfa().then(function (t) {
                return _xfa_text.XfaText.textContent(t);
              });
              var e = this.streamTextContent(t);
              return new Promise(function (t, s) {
                var n = e.getReader(),
                  i = {
                    items: [],
                    styles: Object.create(null)
                  };
                !function pump() {
                  n.read().then(function (_ref10) {
                    var e = _ref10.value,
                      s = _ref10.done;
                    if (s) t(i);else {
                      var _i$items;
                      Object.assign(i.styles, e.styles);
                      (_i$items = i.items).push.apply(_i$items, _toConsumableArray(e.items));
                      pump();
                    }
                  }, s);
                }();
              });
            }
          }, {
            key: "getStructTree",
            value: function getStructTree() {
              return this._transport.getStructTree(this._pageIndex);
            }
          }, {
            key: "_destroy",
            value: function _destroy() {
              this.destroyed = !0;
              var t = [];
              var _iterator6 = _createForOfIteratorHelper(this._intentStates.values()),
                _step6;
              try {
                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
                  var _e7 = _step6.value;
                  this._abortOperatorList({
                    intentState: _e7,
                    reason: new Error("Page was destroyed."),
                    force: !0
                  });
                  if (!_e7.opListReadCapability) {
                    var _iterator8 = _createForOfIteratorHelper(_e7.renderTasks),
                      _step8;
                    try {
                      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
                        var _s8 = _step8.value;
                        t.push(_s8.completed);
                        _s8.cancel();
                      }
                    } catch (err) {
                      _iterator8.e(err);
                    } finally {
                      _iterator8.f();
                    }
                  }
                }
              } catch (err) {
                _iterator6.e(err);
              } finally {
                _iterator6.f();
              }
              this.objs.clear();
              var _iterator7 = _createForOfIteratorHelper(this._bitmaps),
                _step7;
              try {
                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
                  var _t5 = _step7.value;
                  _t5.close();
                }
              } catch (err) {
                _iterator7.e(err);
              } finally {
                _iterator7.f();
              }
              this._bitmaps.clear();
              this.pendingCleanup = !1;
              return Promise.all(t);
            }
          }, {
            key: "cleanup",
            value: function cleanup() {
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              this.pendingCleanup = !0;
              return this._tryCleanup(t);
            }
          }, {
            key: "_tryCleanup",
            value: function _tryCleanup() {
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              if (!this.pendingCleanup) return !1;
              var _iterator9 = _createForOfIteratorHelper(this._intentStates.values()),
                _step9;
              try {
                for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
                  var _step9$value = _step9.value,
                    _t6 = _step9$value.renderTasks,
                    _e8 = _step9$value.operatorList;
                  if (_t6.size > 0 || !_e8.lastChunk) return !1;
                }
              } catch (err) {
                _iterator9.e(err);
              } finally {
                _iterator9.f();
              }
              this._intentStates.clear();
              this.objs.clear();
              t && this._stats && (this._stats = new _display_utils.StatTimer());
              var _iterator10 = _createForOfIteratorHelper(this._bitmaps),
                _step10;
              try {
                for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
                  var _t7 = _step10.value;
                  _t7.close();
                }
              } catch (err) {
                _iterator10.e(err);
              } finally {
                _iterator10.f();
              }
              this._bitmaps.clear();
              this.pendingCleanup = !1;
              return !0;
            }
          }, {
            key: "_startRenderPage",
            value: function _startRenderPage(t, e) {
              var s = this._intentStates.get(e);
              if (s) {
                var _this$_stats4, _s$displayReadyCapabi;
                (_this$_stats4 = this._stats) === null || _this$_stats4 === void 0 ? void 0 : _this$_stats4.timeEnd("Page Request");
                (_s$displayReadyCapabi = s.displayReadyCapability) === null || _s$displayReadyCapabi === void 0 ? void 0 : _s$displayReadyCapabi.resolve(t);
              }
            }
          }, {
            key: "_renderPageChunk",
            value: function _renderPageChunk(t, e) {
              for (var _s9 = 0, n = t.length; _s9 < n; _s9++) {
                e.operatorList.fnArray.push(t.fnArray[_s9]);
                e.operatorList.argsArray.push(t.argsArray[_s9]);
              }
              e.operatorList.lastChunk = t.lastChunk;
              e.operatorList.separateAnnots = t.separateAnnots;
              var _iterator11 = _createForOfIteratorHelper(e.renderTasks),
                _step11;
              try {
                for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
                  var _t8 = _step11.value;
                  _t8.operatorListChanged();
                }
              } catch (err) {
                _iterator11.e(err);
              } finally {
                _iterator11.f();
              }
              t.lastChunk && this._tryCleanup();
            }
          }, {
            key: "_pumpOperatorList",
            value: function _pumpOperatorList(_ref11) {
              var _this8 = this;
              var t = _ref11.renderingIntent,
                e = _ref11.cacheKey,
                s = _ref11.annotationStorageMap;
              var n = this._transport.messageHandler.sendWithStream("GetOperatorList", {
                  pageIndex: this._pageIndex,
                  intent: t,
                  cacheKey: e,
                  annotationStorage: s
                }).getReader(),
                i = this._intentStates.get(e);
              i.streamReader = n;
              var pump = function pump() {
                n.read().then(function (_ref12) {
                  var t = _ref12.value,
                    e = _ref12.done;
                  if (e) i.streamReader = null;else if (!_this8._transport.destroyed) {
                    _this8._renderPageChunk(t, i);
                    pump();
                  }
                }, function (t) {
                  i.streamReader = null;
                  if (!_this8._transport.destroyed) {
                    if (i.operatorList) {
                      i.operatorList.lastChunk = !0;
                      var _iterator12 = _createForOfIteratorHelper(i.renderTasks),
                        _step12;
                      try {
                        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
                          var _t9 = _step12.value;
                          _t9.operatorListChanged();
                        }
                      } catch (err) {
                        _iterator12.e(err);
                      } finally {
                        _iterator12.f();
                      }
                      _this8._tryCleanup();
                    }
                    if (i.displayReadyCapability) i.displayReadyCapability.reject(t);else {
                      if (!i.opListReadCapability) throw t;
                      i.opListReadCapability.reject(t);
                    }
                  }
                });
              };
              pump();
            }
          }, {
            key: "_abortOperatorList",
            value: function _abortOperatorList(_ref13) {
              var _this9 = this;
              var t = _ref13.intentState,
                e = _ref13.reason,
                _ref13$force = _ref13.force,
                s = _ref13$force === void 0 ? !1 : _ref13$force;
              if (t.streamReader) {
                if (t.streamReaderCancelTimeout) {
                  clearTimeout(t.streamReaderCancelTimeout);
                  t.streamReaderCancelTimeout = null;
                }
                if (!s) {
                  if (t.renderTasks.size > 0) return;
                  if (e instanceof _display_utils.RenderingCancelledException) {
                    var _s10 = RENDERING_CANCELLED_TIMEOUT;
                    e.extraDelay > 0 && e.extraDelay < 1e3 && (_s10 += e.extraDelay);
                    t.streamReaderCancelTimeout = setTimeout(function () {
                      t.streamReaderCancelTimeout = null;
                      _this9._abortOperatorList({
                        intentState: t,
                        reason: e,
                        force: !0
                      });
                    }, _s10);
                    return;
                  }
                }
                t.streamReader.cancel(new _util.AbortException(e.message))["catch"](function () {});
                t.streamReader = null;
                if (!this._transport.destroyed) {
                  var _iterator13 = _createForOfIteratorHelper(this._intentStates),
                    _step13;
                  try {
                    for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
                      var _step13$value = _slicedToArray(_step13.value, 2),
                        _e9 = _step13$value[0],
                        _s11 = _step13$value[1];
                      if (_s11 === t) {
                        this._intentStates["delete"](_e9);
                        break;
                      }
                    }
                  } catch (err) {
                    _iterator13.e(err);
                  } finally {
                    _iterator13.f();
                  }
                  this.cleanup();
                }
              }
            }
          }, {
            key: "stats",
            get: function get() {
              return this._stats;
            }
          }]);
          return PDFPageProxy;
        }();
        exports.PDFPageProxy = PDFPageProxy;
        var _s12 = /*#__PURE__*/new WeakMap();
        var _n9 = /*#__PURE__*/new WeakMap();
        var LoopbackPort = /*#__PURE__*/function () {
          function LoopbackPort() {
            _classCallCheck(this, LoopbackPort);
            _classPrivateFieldInitSpec(this, _s12, {
              writable: true,
              value: []
            });
            _classPrivateFieldInitSpec(this, _n9, {
              writable: true,
              value: Promise.resolve()
            });
          }
          _createClass(LoopbackPort, [{
            key: "postMessage",
            value: function postMessage(t, e) {
              var _this10 = this;
              var s = {
                data: structuredClone(t, e)
              };
              _classPrivateFieldGet(this, _n9).then(function () {
                var _iterator14 = _createForOfIteratorHelper(_classPrivateFieldGet(_this10, _s12)),
                  _step14;
                try {
                  for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
                    var _t10 = _step14.value;
                    _t10.call(_this10, s);
                  }
                } catch (err) {
                  _iterator14.e(err);
                } finally {
                  _iterator14.f();
                }
              });
            }
          }, {
            key: "addEventListener",
            value: function addEventListener(t, e) {
              _classPrivateFieldGet(this, _s12).push(e);
            }
          }, {
            key: "removeEventListener",
            value: function removeEventListener(t, e) {
              var s = _classPrivateFieldGet(this, _s12).indexOf(e);
              _classPrivateFieldGet(this, _s12).splice(s, 1);
            }
          }, {
            key: "terminate",
            value: function terminate() {
              _classPrivateFieldGet(this, _s12).length = 0;
            }
          }]);
          return LoopbackPort;
        }();
        exports.LoopbackPort = LoopbackPort;
        var PDFWorkerUtil = {
          isWorkerDisabled: !1,
          fallbackWorkerSrc: null,
          fakeWorkerId: 0
        };
        exports.PDFWorkerUtil = PDFWorkerUtil;
        if (_is_node.isNodeJS && "function" == typeof require) {
          PDFWorkerUtil.isWorkerDisabled = !0;
          PDFWorkerUtil.fallbackWorkerSrc = "./pdf.worker.js";
        } else if ("object" == (typeof document === "undefined" ? "undefined" : _typeof(document))) {
          var _document;
          var _t11 = (_document = document) === null || _document === void 0 || (_document = _document.currentScript) === null || _document === void 0 ? void 0 : _document.src;
          _t11 && (PDFWorkerUtil.fallbackWorkerSrc = _t11.replace(/(\.(?:min\.)?js)(\?.*)?$/i, ".worker$1$2"));
        }
        PDFWorkerUtil.isSameOrigin = function (t, e) {
          var s;
          try {
            s = new URL(t);
            if (!s.origin || "null" === s.origin) return !1;
          } catch (t) {
            return !1;
          }
          var n = new URL(e, s);
          return s.origin === n.origin;
        };
        PDFWorkerUtil.createCDNWrapper = function (t) {
          var e = "importScripts(\"".concat(t, "\");");
          return URL.createObjectURL(new Blob([e]));
        };
        var PDFWorker = /*#__PURE__*/function () {
          function PDFWorker() {
            var _ref14 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
              _ref14$name = _ref14.name,
              t = _ref14$name === void 0 ? null : _ref14$name,
              _ref14$port = _ref14.port,
              e = _ref14$port === void 0 ? null : _ref14$port,
              _ref14$verbosity = _ref14.verbosity,
              s = _ref14$verbosity === void 0 ? (0, _util.getVerbosityLevel)() : _ref14$verbosity;
            _classCallCheck(this, PDFWorker);
            if (e && _classStaticPrivateFieldSpecGet(PDFWorker, PDFWorker, _i9).has(e)) throw new Error("Cannot use more than one PDFWorker per port.");
            this.name = t;
            this.destroyed = !1;
            this.verbosity = s;
            this._readyCapability = (0, _util.createPromiseCapability)();
            this._port = null;
            this._webWorker = null;
            this._messageHandler = null;
            if (e) {
              _classStaticPrivateFieldSpecGet(PDFWorker, PDFWorker, _i9).set(e, this);
              this._initializeFromPort(e);
            } else this._initialize();
          }
          _createClass(PDFWorker, [{
            key: "promise",
            get: function get() {
              return this._readyCapability.promise;
            }
          }, {
            key: "port",
            get: function get() {
              return this._port;
            }
          }, {
            key: "messageHandler",
            get: function get() {
              return this._messageHandler;
            }
          }, {
            key: "_initializeFromPort",
            value: function _initializeFromPort(t) {
              this._port = t;
              this._messageHandler = new _message_handler.MessageHandler("main", "worker", t);
              this._messageHandler.on("ready", function () {});
              this._readyCapability.resolve();
              this._messageHandler.send("configure", {
                verbosity: this.verbosity
              });
            }
          }, {
            key: "_initialize",
            value: function _initialize() {
              var _this11 = this;
              if (!PDFWorkerUtil.isWorkerDisabled && !PDFWorker._mainThreadWorkerMessageHandler) {
                var _t12 = PDFWorker.workerSrc;
                try {
                  PDFWorkerUtil.isSameOrigin(window.location.href, _t12) || (_t12 = PDFWorkerUtil.createCDNWrapper(new URL(_t12, window.location).href));
                  var _e10 = new Worker(_t12),
                    _s13 = new _message_handler.MessageHandler("main", "worker", _e10),
                    terminateEarly = function terminateEarly() {
                      _e10.removeEventListener("error", onWorkerError);
                      _s13.destroy();
                      _e10.terminate();
                      _this11.destroyed ? _this11._readyCapability.reject(new Error("Worker was destroyed")) : _this11._setupFakeWorker();
                    },
                    onWorkerError = function onWorkerError() {
                      _this11._webWorker || terminateEarly();
                    };
                  _e10.addEventListener("error", onWorkerError);
                  _s13.on("test", function (t) {
                    _e10.removeEventListener("error", onWorkerError);
                    if (_this11.destroyed) terminateEarly();else if (t) {
                      _this11._messageHandler = _s13;
                      _this11._port = _e10;
                      _this11._webWorker = _e10;
                      _this11._readyCapability.resolve();
                      _s13.send("configure", {
                        verbosity: _this11.verbosity
                      });
                    } else {
                      _this11._setupFakeWorker();
                      _s13.destroy();
                      _e10.terminate();
                    }
                  });
                  _s13.on("ready", function (t) {
                    _e10.removeEventListener("error", onWorkerError);
                    if (_this11.destroyed) terminateEarly();else try {
                      sendTest();
                    } catch (t) {
                      _this11._setupFakeWorker();
                    }
                  });
                  var sendTest = function sendTest() {
                    var t = new Uint8Array();
                    _s13.send("test", t, [t.buffer]);
                  };
                  sendTest();
                  return;
                } catch (t) {
                  (0, _util.info)("The worker has been disabled.");
                }
              }
              this._setupFakeWorker();
            }
          }, {
            key: "_setupFakeWorker",
            value: function _setupFakeWorker() {
              var _this12 = this;
              if (!PDFWorkerUtil.isWorkerDisabled) {
                (0, _util.warn)("Setting up fake worker.");
                PDFWorkerUtil.isWorkerDisabled = !0;
              }
              PDFWorker._setupFakeWorkerGlobal.then(function (t) {
                if (_this12.destroyed) {
                  _this12._readyCapability.reject(new Error("Worker was destroyed"));
                  return;
                }
                var e = new LoopbackPort();
                _this12._port = e;
                var s = "fake" + PDFWorkerUtil.fakeWorkerId++,
                  n = new _message_handler.MessageHandler(s + "_worker", s, e);
                t.setup(n, e);
                var i = new _message_handler.MessageHandler(s, s + "_worker", e);
                _this12._messageHandler = i;
                _this12._readyCapability.resolve();
                i.send("configure", {
                  verbosity: _this12.verbosity
                });
              })["catch"](function (t) {
                _this12._readyCapability.reject(new Error("Setting up fake worker failed: \"".concat(t.message, "\".")));
              });
            }
          }, {
            key: "destroy",
            value: function destroy() {
              this.destroyed = !0;
              if (this._webWorker) {
                this._webWorker.terminate();
                this._webWorker = null;
              }
              _classStaticPrivateFieldSpecGet(PDFWorker, PDFWorker, _i9)["delete"](this._port);
              this._port = null;
              if (this._messageHandler) {
                this._messageHandler.destroy();
                this._messageHandler = null;
              }
            }
          }], [{
            key: "fromPort",
            value: function fromPort(t) {
              if (!(t !== null && t !== void 0 && t.port)) throw new Error("PDFWorker.fromPort - invalid method signature.");
              return _classStaticPrivateFieldSpecGet(this, PDFWorker, _i9).has(t.port) ? _classStaticPrivateFieldSpecGet(this, PDFWorker, _i9).get(t.port) : new PDFWorker(t);
            }
          }, {
            key: "workerSrc",
            get: function get() {
              if (_worker_options.GlobalWorkerOptions.workerSrc) return _worker_options.GlobalWorkerOptions.workerSrc;
              if (null !== PDFWorkerUtil.fallbackWorkerSrc) {
                _is_node.isNodeJS || (0, _display_utils.deprecated)('No "GlobalWorkerOptions.workerSrc" specified.');
                return PDFWorkerUtil.fallbackWorkerSrc;
              }
              throw new Error('No "GlobalWorkerOptions.workerSrc" specified.');
            }
          }, {
            key: "_mainThreadWorkerMessageHandler",
            get: function get() {
              try {
                var _globalThis$pdfjsWork;
                return ((_globalThis$pdfjsWork = globalThis.pdfjsWorker) === null || _globalThis$pdfjsWork === void 0 ? void 0 : _globalThis$pdfjsWork.WorkerMessageHandler) || null;
              } catch (t) {
                return null;
              }
            }
          }, {
            key: "_setupFakeWorkerGlobal",
            get: function get() {
              var _this13 = this;
              var loader = /*#__PURE__*/function () {
                var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
                  var mainWorkerMessageHandler, worker;
                  return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                    while (1) switch (_context3.prev = _context3.next) {
                      case 0:
                        mainWorkerMessageHandler = _this13._mainThreadWorkerMessageHandler;
                        if (!mainWorkerMessageHandler) {
                          _context3.next = 3;
                          break;
                        }
                        return _context3.abrupt("return", mainWorkerMessageHandler);
                      case 3:
                        if (!(_is_node.isNodeJS && "function" == typeof require)) {
                          _context3.next = 6;
                          break;
                        }
                        worker = eval("require")(_this13.workerSrc);
                        return _context3.abrupt("return", worker.WorkerMessageHandler);
                      case 6:
                        _context3.next = 8;
                        return (0, _display_utils.loadScript)(_this13.workerSrc);
                      case 8:
                        return _context3.abrupt("return", window.pdfjsWorker.WorkerMessageHandler);
                      case 9:
                      case "end":
                        return _context3.stop();
                    }
                  }, _callee3);
                }));
                return function loader() {
                  return _ref15.apply(this, arguments);
                };
              }();
              return (0, _util.shadow)(this, "_setupFakeWorkerGlobal", loader());
            }
          }]);
          return PDFWorker;
        }();
        var _i9 = {
          writable: true,
          value: new WeakMap()
        };
        exports.PDFWorker = PDFWorker;
        var _a4 = /*#__PURE__*/new WeakMap();
        var _r2 = /*#__PURE__*/new WeakMap();
        var _o = /*#__PURE__*/new WeakMap();
        var _l = /*#__PURE__*/new WeakMap();
        var WorkerTransport = /*#__PURE__*/function () {
          function WorkerTransport(t, e, s, n) {
            _classCallCheck(this, WorkerTransport);
            _classPrivateFieldInitSpec(this, _a4, {
              writable: true,
              value: null
            });
            _classPrivateFieldInitSpec(this, _r2, {
              writable: true,
              value: new Map()
            });
            _classPrivateFieldInitSpec(this, _o, {
              writable: true,
              value: new Map()
            });
            _classPrivateFieldInitSpec(this, _l, {
              writable: true,
              value: null
            });
            this.messageHandler = t;
            this.loadingTask = e;
            this.commonObjs = new PDFObjects();
            this.fontLoader = new _font_loader.FontLoader({
              onUnsupportedFeature: this._onUnsupportedFeature.bind(this),
              ownerDocument: n.ownerDocument,
              styleElement: n.styleElement
            });
            this._params = n;
            if (!n.useWorkerFetch) {
              this.CMapReaderFactory = new n.CMapReaderFactory({
                baseUrl: n.cMapUrl,
                isCompressed: n.cMapPacked
              });
              this.StandardFontDataFactory = new n.StandardFontDataFactory({
                baseUrl: n.standardFontDataUrl
              });
            }
            this.destroyed = !1;
            this.destroyCapability = null;
            this._passwordCapability = null;
            this._networkStream = s;
            this._fullReader = null;
            this._lastProgress = null;
            this.downloadInfoCapability = (0, _util.createPromiseCapability)();
            this.setupMessageHandler();
          }
          _createClass(WorkerTransport, [{
            key: "annotationStorage",
            get: function get() {
              return (0, _util.shadow)(this, "annotationStorage", new _annotation_storage.AnnotationStorage());
            }
          }, {
            key: "stats",
            get: function get() {
              return _classPrivateFieldGet(this, _a4);
            }
          }, {
            key: "getRenderingIntent",
            value: function getRenderingIntent(t) {
              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _util.AnnotationMode.ENABLE;
              var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
              var n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;
              var i = _util.RenderingIntentFlag.DISPLAY,
                a = null;
              switch (t) {
                case "any":
                  i = _util.RenderingIntentFlag.ANY;
                  break;
                case "display":
                  break;
                case "print":
                  i = _util.RenderingIntentFlag.PRINT;
                  break;
                default:
                  (0, _util.warn)("getRenderingIntent - invalid intent: ".concat(t));
              }
              switch (e) {
                case _util.AnnotationMode.DISABLE:
                  i += _util.RenderingIntentFlag.ANNOTATIONS_DISABLE;
                  break;
                case _util.AnnotationMode.ENABLE:
                  break;
                case _util.AnnotationMode.ENABLE_FORMS:
                  i += _util.RenderingIntentFlag.ANNOTATIONS_FORMS;
                  break;
                case _util.AnnotationMode.ENABLE_STORAGE:
                  i += _util.RenderingIntentFlag.ANNOTATIONS_STORAGE;
                  a = (i & _util.RenderingIntentFlag.PRINT && s instanceof _annotation_storage.PrintAnnotationStorage ? s : this.annotationStorage).serializable;
                  break;
                default:
                  (0, _util.warn)("getRenderingIntent - invalid annotationMode: ".concat(e));
              }
              n && (i += _util.RenderingIntentFlag.OPLIST);
              return {
                renderingIntent: i,
                cacheKey: "".concat(i, "_").concat(_annotation_storage.AnnotationStorage.getHash(a)),
                annotationStorageMap: a
              };
            }
          }, {
            key: "destroy",
            value: function destroy() {
              var _this14 = this;
              if (this.destroyCapability) return this.destroyCapability.promise;
              this.destroyed = !0;
              this.destroyCapability = (0, _util.createPromiseCapability)();
              this._passwordCapability && this._passwordCapability.reject(new Error("Worker was destroyed during onPassword callback"));
              var t = [];
              var _iterator15 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _r2).values()),
                _step15;
              try {
                for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
                  var _e11 = _step15.value;
                  t.push(_e11._destroy());
                }
              } catch (err) {
                _iterator15.e(err);
              } finally {
                _iterator15.f();
              }
              _classPrivateFieldGet(this, _r2).clear();
              _classPrivateFieldGet(this, _o).clear();
              this.hasOwnProperty("annotationStorage") && this.annotationStorage.resetModified();
              var e = this.messageHandler.sendWithPromise("Terminate", null);
              t.push(e);
              Promise.all(t).then(function () {
                _this14.commonObjs.clear();
                _this14.fontLoader.clear();
                _classPrivateFieldSet(_this14, _l, null);
                _this14._getFieldObjectsPromise = null;
                _this14._hasJSActionsPromise = null;
                _this14._networkStream && _this14._networkStream.cancelAllRequests(new _util.AbortException("Worker was terminated."));
                if (_this14.messageHandler) {
                  _this14.messageHandler.destroy();
                  _this14.messageHandler = null;
                }
                _this14.destroyCapability.resolve();
              }, this.destroyCapability.reject);
              return this.destroyCapability.promise;
            }
          }, {
            key: "setupMessageHandler",
            value: function setupMessageHandler() {
              var _this15 = this;
              var t = this.messageHandler,
                e = this.loadingTask;
              t.on("GetReader", function (t, e) {
                (0, _util.assert)(_this15._networkStream, "GetReader - no `IPDFStream` instance available.");
                _this15._fullReader = _this15._networkStream.getFullReader();
                _this15._fullReader.onProgress = function (t) {
                  _this15._lastProgress = {
                    loaded: t.loaded,
                    total: t.total
                  };
                };
                e.onPull = function () {
                  _this15._fullReader.read().then(function (_ref16) {
                    var t = _ref16.value,
                      s = _ref16.done;
                    if (s) e.close();else {
                      (0, _util.assert)((0, _util.isArrayBuffer)(t), "GetReader - expected an ArrayBuffer.");
                      e.enqueue(new Uint8Array(t), 1, [t]);
                    }
                  })["catch"](function (t) {
                    e.error(t);
                  });
                };
                e.onCancel = function (t) {
                  _this15._fullReader.cancel(t);
                  e.ready["catch"](function (t) {
                    if (!_this15.destroyed) throw t;
                  });
                };
              });
              t.on("ReaderHeadersReady", function (t) {
                var s = (0, _util.createPromiseCapability)(),
                  n = _this15._fullReader;
                n.headersReady.then(function () {
                  if (!n.isStreamingSupported || !n.isRangeSupported) {
                    var _e$onProgress;
                    _this15._lastProgress && ((_e$onProgress = e.onProgress) === null || _e$onProgress === void 0 ? void 0 : _e$onProgress.call(e, _this15._lastProgress));
                    n.onProgress = function (t) {
                      var _e$onProgress2;
                      (_e$onProgress2 = e.onProgress) === null || _e$onProgress2 === void 0 ? void 0 : _e$onProgress2.call(e, {
                        loaded: t.loaded,
                        total: t.total
                      });
                    };
                  }
                  s.resolve({
                    isStreamingSupported: n.isStreamingSupported,
                    isRangeSupported: n.isRangeSupported,
                    contentLength: n.contentLength
                  });
                }, s.reject);
                return s.promise;
              });
              t.on("GetRangeReader", function (t, e) {
                (0, _util.assert)(_this15._networkStream, "GetRangeReader - no `IPDFStream` instance available.");
                var s = _this15._networkStream.getRangeReader(t.begin, t.end);
                if (s) {
                  e.onPull = function () {
                    s.read().then(function (_ref17) {
                      var t = _ref17.value,
                        s = _ref17.done;
                      if (s) e.close();else {
                        (0, _util.assert)((0, _util.isArrayBuffer)(t), "GetRangeReader - expected an ArrayBuffer.");
                        e.enqueue(new Uint8Array(t), 1, [t]);
                      }
                    })["catch"](function (t) {
                      e.error(t);
                    });
                  };
                  e.onCancel = function (t) {
                    s.cancel(t);
                    e.ready["catch"](function (t) {
                      if (!_this15.destroyed) throw t;
                    });
                  };
                } else e.close();
              });
              t.on("GetDoc", function (_ref18) {
                var t = _ref18.pdfInfo;
                _this15._numPages = t.numPages;
                _this15._htmlForXfa = t.htmlForXfa;
                delete t.htmlForXfa;
                e._capability.resolve(new PDFDocumentProxy(t, _this15));
              });
              t.on("DocException", function (t) {
                var s;
                switch (t.name) {
                  case "PasswordException":
                    s = new _util.PasswordException(t.message, t.code);
                    break;
                  case "InvalidPDFException":
                    s = new _util.InvalidPDFException(t.message);
                    break;
                  case "MissingPDFException":
                    s = new _util.MissingPDFException(t.message);
                    break;
                  case "UnexpectedResponseException":
                    s = new _util.UnexpectedResponseException(t.message, t.status);
                    break;
                  case "UnknownErrorException":
                    s = new _util.UnknownErrorException(t.message, t.details);
                    break;
                  default:
                    (0, _util.unreachable)("DocException - expected a valid Error.");
                }
                e._capability.reject(s);
              });
              t.on("PasswordRequest", function (t) {
                _this15._passwordCapability = (0, _util.createPromiseCapability)();
                if (e.onPassword) {
                  var updatePassword = function updatePassword(t) {
                    t instanceof Error ? _this15._passwordCapability.reject(t) : _this15._passwordCapability.resolve({
                      password: t
                    });
                  };
                  try {
                    e.onPassword(updatePassword, t.code);
                  } catch (t) {
                    _this15._passwordCapability.reject(t);
                  }
                } else _this15._passwordCapability.reject(new _util.PasswordException(t.message, t.code));
                return _this15._passwordCapability.promise;
              });
              t.on("DataLoaded", function (t) {
                var _e$onProgress3;
                (_e$onProgress3 = e.onProgress) === null || _e$onProgress3 === void 0 ? void 0 : _e$onProgress3.call(e, {
                  loaded: t.length,
                  total: t.length
                });
                _this15.downloadInfoCapability.resolve(t);
              });
              t.on("StartRenderPage", function (t) {
                if (_this15.destroyed) return;
                _classPrivateFieldGet(_this15, _r2).get(t.pageIndex)._startRenderPage(t.transparency, t.cacheKey);
              });
              t.on("commonobj", function (_ref19) {
                var _globalThis$FontInspe;
                var _ref20 = _slicedToArray(_ref19, 3),
                  e = _ref20[0],
                  s = _ref20[1],
                  n = _ref20[2];
                if (!_this15.destroyed && !_this15.commonObjs.has(e)) switch (s) {
                  case "Font":
                    var i = _this15._params;
                    if ("error" in n) {
                      var _t13 = n.error;
                      (0, _util.warn)("Error during font loading: ".concat(_t13));
                      _this15.commonObjs.resolve(e, _t13);
                      break;
                    }
                    var a = null;
                    i.pdfBug && ((_globalThis$FontInspe = globalThis.FontInspector) === null || _globalThis$FontInspe === void 0 ? void 0 : _globalThis$FontInspe.enabled) && (a = {
                      registerFont: function registerFont(t, e) {
                        globalThis.FontInspector.fontAdded(t, e);
                      }
                    });
                    var r = new _font_loader.FontFaceObject(n, {
                      isEvalSupported: i.isEvalSupported,
                      disableFontFace: i.disableFontFace,
                      ignoreErrors: i.ignoreErrors,
                      onUnsupportedFeature: _this15._onUnsupportedFeature.bind(_this15),
                      fontRegistry: a
                    });
                    _this15.fontLoader.bind(r)["catch"](function (s) {
                      return t.sendWithPromise("FontFallback", {
                        id: e
                      });
                    })["finally"](function () {
                      !i.fontExtraProperties && r.data && (r.data = null);
                      _this15.commonObjs.resolve(e, r);
                    });
                    break;
                  case "FontPath":
                  case "Image":
                    _this15.commonObjs.resolve(e, n);
                    break;
                  default:
                    throw new Error("Got unknown common object type ".concat(s));
                }
              });
              t.on("obj", function (_ref21) {
                var _ref22 = _slicedToArray(_ref21, 4),
                  t = _ref22[0],
                  e = _ref22[1],
                  s = _ref22[2],
                  n = _ref22[3];
                if (_this15.destroyed) return;
                var i = _classPrivateFieldGet(_this15, _r2).get(e);
                if (!i.objs.has(t)) switch (s) {
                  case "Image":
                    i.objs.resolve(t, n);
                    var _e12 = 8e6;
                    if (n) {
                      var _n$data;
                      var _t14;
                      if (n.bitmap) {
                        var _e13 = n.bitmap,
                          _s14 = n.width,
                          a = n.height;
                        _t14 = _s14 * a * 4;
                        i._bitmaps.add(_e13);
                      } else _t14 = ((_n$data = n.data) === null || _n$data === void 0 ? void 0 : _n$data.length) || 0;
                      _t14 > _e12 && (i.cleanupAfterRender = !0);
                    }
                    break;
                  case "Pattern":
                    i.objs.resolve(t, n);
                    break;
                  default:
                    throw new Error("Got unknown object type ".concat(s));
                }
              });
              t.on("DocProgress", function (t) {
                var _e$onProgress4;
                _this15.destroyed || ((_e$onProgress4 = e.onProgress) === null || _e$onProgress4 === void 0 ? void 0 : _e$onProgress4.call(e, {
                  loaded: t.loaded,
                  total: t.total
                }));
              });
              t.on("DocStats", function (t) {
                _this15.destroyed || _classPrivateFieldSet(_this15, _a4, Object.freeze({
                  streamTypes: Object.freeze(t.streamTypes),
                  fontTypes: Object.freeze(t.fontTypes)
                }));
              });
              t.on("UnsupportedFeature", this._onUnsupportedFeature.bind(this));
              t.on("FetchBuiltInCMap", function (t) {
                return _this15.destroyed ? Promise.reject(new Error("Worker was destroyed.")) : _this15.CMapReaderFactory ? _this15.CMapReaderFactory.fetch(t) : Promise.reject(new Error("CMapReaderFactory not initialized, see the `useWorkerFetch` parameter."));
              });
              t.on("FetchStandardFontData", function (t) {
                return _this15.destroyed ? Promise.reject(new Error("Worker was destroyed.")) : _this15.StandardFontDataFactory ? _this15.StandardFontDataFactory.fetch(t) : Promise.reject(new Error("StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter."));
              });
            }
          }, {
            key: "_onUnsupportedFeature",
            value: function _onUnsupportedFeature(_ref23) {
              var _this$loadingTask$onU, _this$loadingTask;
              var t = _ref23.featureId;
              this.destroyed || ((_this$loadingTask$onU = (_this$loadingTask = this.loadingTask).onUnsupportedFeature) === null || _this$loadingTask$onU === void 0 ? void 0 : _this$loadingTask$onU.call(_this$loadingTask, t));
            }
          }, {
            key: "getData",
            value: function getData() {
              return this.messageHandler.sendWithPromise("GetData", null);
            }
          }, {
            key: "saveDocument",
            value: function saveDocument() {
              var _this$_fullReader$fil,
                _this$_fullReader,
                _this16 = this;
              this.annotationStorage.size <= 0 && (0, _util.warn)("saveDocument called while `annotationStorage` is empty, please use the getData-method instead.");
              return this.messageHandler.sendWithPromise("SaveDocument", {
                isPureXfa: !!this._htmlForXfa,
                numPages: this._numPages,
                annotationStorage: this.annotationStorage.serializable,
                filename: (_this$_fullReader$fil = (_this$_fullReader = this._fullReader) === null || _this$_fullReader === void 0 ? void 0 : _this$_fullReader.filename) !== null && _this$_fullReader$fil !== void 0 ? _this$_fullReader$fil : null
              })["finally"](function () {
                _this16.annotationStorage.resetModified();
              });
            }
          }, {
            key: "getPage",
            value: function getPage(t) {
              var _this17 = this;
              if (!Number.isInteger(t) || t <= 0 || t > this._numPages) return Promise.reject(new Error("Invalid page request."));
              var e = t - 1,
                s = _classPrivateFieldGet(this, _o).get(e);
              if (s) return s;
              var n = this.messageHandler.sendWithPromise("GetPage", {
                pageIndex: e
              }).then(function (t) {
                if (_this17.destroyed) throw new Error("Transport destroyed");
                var s = new PDFPageProxy(e, t, _this17, _this17._params.ownerDocument, _this17._params.pdfBug);
                _classPrivateFieldGet(_this17, _r2).set(e, s);
                return s;
              });
              _classPrivateFieldGet(this, _o).set(e, n);
              return n;
            }
          }, {
            key: "getPageIndex",
            value: function getPageIndex(t) {
              return "object" != _typeof(t) || null === t || !Number.isInteger(t.num) || t.num < 0 || !Number.isInteger(t.gen) || t.gen < 0 ? Promise.reject(new Error("Invalid pageIndex request.")) : this.messageHandler.sendWithPromise("GetPageIndex", {
                num: t.num,
                gen: t.gen
              });
            }
          }, {
            key: "getAnnotations",
            value: function getAnnotations(t, e) {
              return this.messageHandler.sendWithPromise("GetAnnotations", {
                pageIndex: t,
                intent: e
              });
            }
          }, {
            key: "getFieldObjects",
            value: function getFieldObjects() {
              return this._getFieldObjectsPromise || (this._getFieldObjectsPromise = this.messageHandler.sendWithPromise("GetFieldObjects", null));
            }
          }, {
            key: "hasJSActions",
            value: function hasJSActions() {
              return this._hasJSActionsPromise || (this._hasJSActionsPromise = this.messageHandler.sendWithPromise("HasJSActions", null));
            }
          }, {
            key: "getCalculationOrderIds",
            value: function getCalculationOrderIds() {
              return this.messageHandler.sendWithPromise("GetCalculationOrderIds", null);
            }
          }, {
            key: "getDestinations",
            value: function getDestinations() {
              return this.messageHandler.sendWithPromise("GetDestinations", null);
            }
          }, {
            key: "getDestination",
            value: function getDestination(t) {
              return "string" != typeof t ? Promise.reject(new Error("Invalid destination request.")) : this.messageHandler.sendWithPromise("GetDestination", {
                id: t
              });
            }
          }, {
            key: "getPageLabels",
            value: function getPageLabels() {
              return this.messageHandler.sendWithPromise("GetPageLabels", null);
            }
          }, {
            key: "getPageLayout",
            value: function getPageLayout() {
              return this.messageHandler.sendWithPromise("GetPageLayout", null);
            }
          }, {
            key: "getPageMode",
            value: function getPageMode() {
              return this.messageHandler.sendWithPromise("GetPageMode", null);
            }
          }, {
            key: "getViewerPreferences",
            value: function getViewerPreferences() {
              return this.messageHandler.sendWithPromise("GetViewerPreferences", null);
            }
          }, {
            key: "getOpenAction",
            value: function getOpenAction() {
              return this.messageHandler.sendWithPromise("GetOpenAction", null);
            }
          }, {
            key: "getAttachments",
            value: function getAttachments() {
              return this.messageHandler.sendWithPromise("GetAttachments", null);
            }
          }, {
            key: "getJavaScript",
            value: function getJavaScript() {
              return this.messageHandler.sendWithPromise("GetJavaScript", null);
            }
          }, {
            key: "getDocJSActions",
            value: function getDocJSActions() {
              return this.messageHandler.sendWithPromise("GetDocJSActions", null);
            }
          }, {
            key: "getPageJSActions",
            value: function getPageJSActions(t) {
              return this.messageHandler.sendWithPromise("GetPageJSActions", {
                pageIndex: t
              });
            }
          }, {
            key: "getStructTree",
            value: function getStructTree(t) {
              return this.messageHandler.sendWithPromise("GetStructTree", {
                pageIndex: t
              });
            }
          }, {
            key: "getOutline",
            value: function getOutline() {
              return this.messageHandler.sendWithPromise("GetOutline", null);
            }
          }, {
            key: "getOptionalContentConfig",
            value: function getOptionalContentConfig() {
              return this.messageHandler.sendWithPromise("GetOptionalContentConfig", null).then(function (t) {
                return new _optional_content_config.OptionalContentConfig(t);
              });
            }
          }, {
            key: "getPermissions",
            value: function getPermissions() {
              return this.messageHandler.sendWithPromise("GetPermissions", null);
            }
          }, {
            key: "getMetadata",
            value: function getMetadata() {
              var _this18 = this;
              return _classPrivateFieldGet(this, _l) || _classPrivateFieldSet(this, _l, this.messageHandler.sendWithPromise("GetMetadata", null).then(function (t) {
                var _this18$_fullReader$f, _this18$_fullReader, _this18$_fullReader$c, _this18$_fullReader2;
                return {
                  info: t[0],
                  metadata: t[1] ? new _metadata.Metadata(t[1]) : null,
                  contentDispositionFilename: (_this18$_fullReader$f = (_this18$_fullReader = _this18._fullReader) === null || _this18$_fullReader === void 0 ? void 0 : _this18$_fullReader.filename) !== null && _this18$_fullReader$f !== void 0 ? _this18$_fullReader$f : null,
                  contentLength: (_this18$_fullReader$c = (_this18$_fullReader2 = _this18._fullReader) === null || _this18$_fullReader2 === void 0 ? void 0 : _this18$_fullReader2.contentLength) !== null && _this18$_fullReader$c !== void 0 ? _this18$_fullReader$c : null
                };
              }));
            }
          }, {
            key: "getMarkInfo",
            value: function getMarkInfo() {
              return this.messageHandler.sendWithPromise("GetMarkInfo", null);
            }
          }, {
            key: "startCleanup",
            value: function () {
              var _startCleanup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
                var t,
                  _iterator16,
                  _step16,
                  _t15,
                  _args4 = arguments;
                return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                  while (1) switch (_context4.prev = _context4.next) {
                    case 0:
                      t = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : !1;
                      if (this.destroyed) {
                        _context4.next = 26;
                        break;
                      }
                      _context4.next = 4;
                      return this.messageHandler.sendWithPromise("Cleanup", null);
                    case 4:
                      _iterator16 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _r2).values());
                      _context4.prev = 5;
                      _iterator16.s();
                    case 7:
                      if ((_step16 = _iterator16.n()).done) {
                        _context4.next = 13;
                        break;
                      }
                      _t15 = _step16.value;
                      if (_t15.cleanup()) {
                        _context4.next = 11;
                        break;
                      }
                      throw new Error("startCleanup: Page ".concat(_t15.pageNumber, " is currently rendering."));
                    case 11:
                      _context4.next = 7;
                      break;
                    case 13:
                      _context4.next = 18;
                      break;
                    case 15:
                      _context4.prev = 15;
                      _context4.t0 = _context4["catch"](5);
                      _iterator16.e(_context4.t0);
                    case 18:
                      _context4.prev = 18;
                      _iterator16.f();
                      return _context4.finish(18);
                    case 21:
                      this.commonObjs.clear();
                      t || this.fontLoader.clear();
                      _classPrivateFieldSet(this, _l, null);
                      this._getFieldObjectsPromise = null;
                      this._hasJSActionsPromise = null;
                    case 26:
                    case "end":
                      return _context4.stop();
                  }
                }, _callee4, this, [[5, 15, 18, 21]]);
              }));
              function startCleanup() {
                return _startCleanup.apply(this, arguments);
              }
              return startCleanup;
            }()
          }, {
            key: "loadingParams",
            get: function get() {
              var t = this._params;
              return (0, _util.shadow)(this, "loadingParams", {
                disableAutoFetch: t.disableAutoFetch,
                enableXfa: t.enableXfa
              });
            }
          }]);
          return WorkerTransport;
        }();
        var _c2 = /*#__PURE__*/new WeakMap();
        var _h = /*#__PURE__*/new WeakSet();
        var PDFObjects = /*#__PURE__*/function () {
          function PDFObjects() {
            _classCallCheck(this, PDFObjects);
            _classPrivateMethodInitSpec(this, _h);
            _classPrivateFieldInitSpec(this, _c2, {
              writable: true,
              value: Object.create(null)
            });
          }
          _createClass(PDFObjects, [{
            key: "get",
            value: function get(t) {
              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
              if (e) {
                var _s15 = _classPrivateMethodGet(this, _h, _h2).call(this, t);
                _s15.capability.promise.then(function () {
                  return e(_s15.data);
                });
                return null;
              }
              var s = _classPrivateFieldGet(this, _c2)[t];
              if (!(s !== null && s !== void 0 && s.capability.settled)) throw new Error("Requesting object that isn't resolved yet ".concat(t, "."));
              return s.data;
            }
          }, {
            key: "has",
            value: function has(t) {
              var _classPrivateFieldGet2;
              return ((_classPrivateFieldGet2 = _classPrivateFieldGet(this, _c2)[t]) === null || _classPrivateFieldGet2 === void 0 ? void 0 : _classPrivateFieldGet2.capability.settled) || !1;
            }
          }, {
            key: "resolve",
            value: function resolve(t) {
              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
              var s = _classPrivateMethodGet(this, _h, _h2).call(this, t);
              s.data = e;
              s.capability.resolve();
            }
          }, {
            key: "clear",
            value: function clear() {
              _classPrivateFieldSet(this, _c2, Object.create(null));
            }
          }]);
          return PDFObjects;
        }();
        function _h2(t) {
          var e = _classPrivateFieldGet(this, _c2)[t];
          return e || (_classPrivateFieldGet(this, _c2)[t] = {
            capability: (0, _util.createPromiseCapability)(),
            data: null
          });
        }
        var _d2 = /*#__PURE__*/new WeakMap();
        var RenderTask = /*#__PURE__*/function () {
          function RenderTask(t) {
            _classCallCheck(this, RenderTask);
            _classPrivateFieldInitSpec(this, _d2, {
              writable: true,
              value: null
            });
            _classPrivateFieldSet(this, _d2, t);
            this.onContinue = null;
          }
          _createClass(RenderTask, [{
            key: "promise",
            get: function get() {
              return _classPrivateFieldGet(this, _d2).capability.promise;
            }
          }, {
            key: "cancel",
            value: function cancel() {
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
              _classPrivateFieldGet(this, _d2).cancel(null, t);
            }
          }, {
            key: "separateAnnots",
            get: function get() {
              var t = _classPrivateFieldGet(this, _d2).operatorList.separateAnnots;
              if (!t) return !1;
              var _classPrivateFieldGet3 = _classPrivateFieldGet(this, _d2),
                e = _classPrivateFieldGet3.annotationCanvasMap;
              return t.form || t.canvas && (e === null || e === void 0 ? void 0 : e.size) > 0;
            }
          }]);
          return RenderTask;
        }();
        exports.RenderTask = RenderTask;
        var InternalRenderTask = /*#__PURE__*/function () {
          function InternalRenderTask(_ref24) {
            var t = _ref24.callback,
              e = _ref24.params,
              s = _ref24.objs,
              n = _ref24.commonObjs,
              i = _ref24.annotationCanvasMap,
              a = _ref24.operatorList,
              r = _ref24.pageIndex,
              o = _ref24.canvasFactory,
              _ref24$useRequestAnim = _ref24.useRequestAnimationFrame,
              l = _ref24$useRequestAnim === void 0 ? !1 : _ref24$useRequestAnim,
              _ref24$pdfBug = _ref24.pdfBug,
              c = _ref24$pdfBug === void 0 ? !1 : _ref24$pdfBug,
              _ref24$pageColors = _ref24.pageColors,
              h = _ref24$pageColors === void 0 ? null : _ref24$pageColors;
            _classCallCheck(this, InternalRenderTask);
            this.callback = t;
            this.params = e;
            this.objs = s;
            this.commonObjs = n;
            this.annotationCanvasMap = i;
            this.operatorListIdx = null;
            this.operatorList = a;
            this._pageIndex = r;
            this.canvasFactory = o;
            this._pdfBug = c;
            this.pageColors = h;
            this.running = !1;
            this.graphicsReadyCallback = null;
            this.graphicsReady = !1;
            this._useRequestAnimationFrame = !0 === l && "undefined" != typeof window;
            this.cancelled = !1;
            this.capability = (0, _util.createPromiseCapability)();
            this.task = new RenderTask(this);
            this._cancelBound = this.cancel.bind(this);
            this._continueBound = this._continue.bind(this);
            this._scheduleNextBound = this._scheduleNext.bind(this);
            this._nextBound = this._next.bind(this);
            this._canvas = e.canvasContext.canvas;
          }
          _createClass(InternalRenderTask, [{
            key: "completed",
            get: function get() {
              return this.capability.promise["catch"](function () {});
            }
          }, {
            key: "initializeGraphics",
            value: function initializeGraphics(_ref25) {
              var _globalThis$StepperMa, _this$graphicsReadyCa;
              var _ref25$transparency = _ref25.transparency,
                t = _ref25$transparency === void 0 ? !1 : _ref25$transparency,
                e = _ref25.optionalContentConfig;
              if (this.cancelled) return;
              if (this._canvas) {
                if (_classStaticPrivateFieldSpecGet(InternalRenderTask, InternalRenderTask, _u2).has(this._canvas)) throw new Error("Cannot use the same canvas during multiple render() operations. Use different canvas or ensure previous operations were cancelled or completed.");
                _classStaticPrivateFieldSpecGet(InternalRenderTask, InternalRenderTask, _u2).add(this._canvas);
              }
              if (this._pdfBug && (_globalThis$StepperMa = globalThis.StepperManager) !== null && _globalThis$StepperMa !== void 0 && _globalThis$StepperMa.enabled) {
                this.stepper = globalThis.StepperManager.create(this._pageIndex);
                this.stepper.init(this.operatorList);
                this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();
              }
              var _this$params = this.params,
                s = _this$params.canvasContext,
                n = _this$params.viewport,
                i = _this$params.transform,
                a = _this$params.background;
              this.gfx = new _canvas.CanvasGraphics(s, this.commonObjs, this.objs, this.canvasFactory, {
                optionalContentConfig: e
              }, this.annotationCanvasMap, this.pageColors);
              this.gfx.beginDrawing({
                transform: i,
                viewport: n,
                transparency: t,
                background: a
              });
              this.operatorListIdx = 0;
              this.graphicsReady = !0;
              (_this$graphicsReadyCa = this.graphicsReadyCallback) === null || _this$graphicsReadyCa === void 0 ? void 0 : _this$graphicsReadyCa.call(this);
            }
          }, {
            key: "cancel",
            value: function cancel() {
              var _this$gfx;
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
              this.running = !1;
              this.cancelled = !0;
              (_this$gfx = this.gfx) === null || _this$gfx === void 0 ? void 0 : _this$gfx.endDrawing();
              this._canvas && _classStaticPrivateFieldSpecGet(InternalRenderTask, InternalRenderTask, _u2)["delete"](this._canvas);
              this.callback(t || new _display_utils.RenderingCancelledException("Rendering cancelled, page ".concat(this._pageIndex + 1), "canvas", e));
            }
          }, {
            key: "operatorListChanged",
            value: function operatorListChanged() {
              if (this.graphicsReady) {
                var _this$stepper;
                (_this$stepper = this.stepper) === null || _this$stepper === void 0 ? void 0 : _this$stepper.updateOperatorList(this.operatorList);
                this.running || this._continue();
              } else this.graphicsReadyCallback || (this.graphicsReadyCallback = this._continueBound);
            }
          }, {
            key: "_continue",
            value: function _continue() {
              this.running = !0;
              this.cancelled || (this.task.onContinue ? this.task.onContinue(this._scheduleNextBound) : this._scheduleNext());
            }
          }, {
            key: "_scheduleNext",
            value: function _scheduleNext() {
              var _this19 = this;
              this._useRequestAnimationFrame ? window.requestAnimationFrame(function () {
                _this19._nextBound()["catch"](_this19._cancelBound);
              }) : Promise.resolve().then(this._nextBound)["catch"](this._cancelBound);
            }
          }, {
            key: "_next",
            value: function () {
              var _next2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
                return _regeneratorRuntime().wrap(function _callee5$(_context5) {
                  while (1) switch (_context5.prev = _context5.next) {
                    case 0:
                      if (!this.cancelled) {
                        this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);
                        if (this.operatorListIdx === this.operatorList.argsArray.length) {
                          this.running = !1;
                          if (this.operatorList.lastChunk) {
                            this.gfx.endDrawing();
                            this._canvas && _classStaticPrivateFieldSpecGet(InternalRenderTask, InternalRenderTask, _u2)["delete"](this._canvas);
                            this.callback();
                          }
                        }
                      }
                    case 1:
                    case "end":
                      return _context5.stop();
                  }
                }, _callee5, this);
              }));
              function _next() {
                return _next2.apply(this, arguments);
              }
              return _next;
            }()
          }]);
          return InternalRenderTask;
        }();
        var _u2 = {
          writable: true,
          value: new WeakSet()
        };
        var version = "3.2.146";
        exports.version = version;
        var build = "3fd2a3548";
        exports.build = build;
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.PrintAnnotationStorage = e.AnnotationStorage = void 0;
        var n = s(1),
          i = s(4),
          a = s(8);
        var _p = /*#__PURE__*/new WeakMap();
        var _g = /*#__PURE__*/new WeakMap();
        var _m = /*#__PURE__*/new WeakSet();
        var AnnotationStorage = /*#__PURE__*/function () {
          function AnnotationStorage() {
            _classCallCheck(this, AnnotationStorage);
            _classPrivateMethodInitSpec(this, _m);
            _classPrivateFieldInitSpec(this, _p, {
              writable: true,
              value: !1
            });
            _classPrivateFieldInitSpec(this, _g, {
              writable: true,
              value: new Map()
            });
            this.onSetModified = null;
            this.onResetModified = null;
            this.onAnnotationEditor = null;
          }
          _createClass(AnnotationStorage, [{
            key: "getValue",
            value: function getValue(t, e) {
              var s = _classPrivateFieldGet(this, _g).get(t);
              return void 0 === s ? e : Object.assign(e, s);
            }
          }, {
            key: "getRawValue",
            value: function getRawValue(t) {
              return _classPrivateFieldGet(this, _g).get(t);
            }
          }, {
            key: "remove",
            value: function remove(t) {
              _classPrivateFieldGet(this, _g)["delete"](t);
              0 === _classPrivateFieldGet(this, _g).size && this.resetModified();
              if ("function" == typeof this.onAnnotationEditor) {
                var _iterator17 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _g).values()),
                  _step17;
                try {
                  for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {
                    var _t16 = _step17.value;
                    if (_t16 instanceof i.AnnotationEditor) return;
                  }
                } catch (err) {
                  _iterator17.e(err);
                } finally {
                  _iterator17.f();
                }
                this.onAnnotationEditor(null);
              }
            }
          }, {
            key: "setValue",
            value: function setValue(t, e) {
              var s = _classPrivateFieldGet(this, _g).get(t);
              var n = !1;
              if (void 0 !== s) {
                for (var _i10 = 0, _Object$entries = Object.entries(e); _i10 < _Object$entries.length; _i10++) {
                  var _Object$entries$_i = _slicedToArray(_Object$entries[_i10], 2),
                    _t17 = _Object$entries$_i[0],
                    _i11 = _Object$entries$_i[1];
                  if (s[_t17] !== _i11) {
                    n = !0;
                    s[_t17] = _i11;
                  }
                }
              } else {
                n = !0;
                _classPrivateFieldGet(this, _g).set(t, e);
              }
              n && _classPrivateMethodGet(this, _m, _m2).call(this);
              e instanceof i.AnnotationEditor && "function" == typeof this.onAnnotationEditor && this.onAnnotationEditor(e.constructor._type);
            }
          }, {
            key: "has",
            value: function has(t) {
              return _classPrivateFieldGet(this, _g).has(t);
            }
          }, {
            key: "getAll",
            value: function getAll() {
              return _classPrivateFieldGet(this, _g).size > 0 ? (0, n.objectFromMap)(_classPrivateFieldGet(this, _g)) : null;
            }
          }, {
            key: "size",
            get: function get() {
              return _classPrivateFieldGet(this, _g).size;
            }
          }, {
            key: "resetModified",
            value: function resetModified() {
              if (_classPrivateFieldGet(this, _p)) {
                _classPrivateFieldSet(this, _p, !1);
                "function" == typeof this.onResetModified && this.onResetModified();
              }
            }
          }, {
            key: "print",
            get: function get() {
              return new PrintAnnotationStorage(this);
            }
          }, {
            key: "serializable",
            get: function get() {
              if (0 === _classPrivateFieldGet(this, _g).size) return null;
              var t = new Map();
              var _iterator18 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _g)),
                _step18;
              try {
                for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {
                  var _step18$value = _slicedToArray(_step18.value, 2),
                    _e14 = _step18$value[0],
                    _s16 = _step18$value[1];
                  var _n10 = _s16 instanceof i.AnnotationEditor ? _s16.serialize() : _s16;
                  _n10 && t.set(_e14, _n10);
                }
              } catch (err) {
                _iterator18.e(err);
              } finally {
                _iterator18.f();
              }
              return t;
            }
          }], [{
            key: "getHash",
            value: function getHash(t) {
              if (!t) return "";
              var e = new a.MurmurHash3_64();
              var _iterator19 = _createForOfIteratorHelper(t),
                _step19;
              try {
                for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {
                  var _step19$value = _slicedToArray(_step19.value, 2),
                    _s17 = _step19$value[0],
                    _n11 = _step19$value[1];
                  e.update("".concat(_s17, ":").concat(JSON.stringify(_n11)));
                }
              } catch (err) {
                _iterator19.e(err);
              } finally {
                _iterator19.f();
              }
              return e.hexdigest();
            }
          }]);
          return AnnotationStorage;
        }();
        function _m2() {
          if (!_classPrivateFieldGet(this, _p)) {
            _classPrivateFieldSet(this, _p, !0);
            "function" == typeof this.onSetModified && this.onSetModified();
          }
        }
        e.AnnotationStorage = AnnotationStorage;
        var _f = /*#__PURE__*/new WeakMap();
        var PrintAnnotationStorage = /*#__PURE__*/function (_AnnotationStorage) {
          _inherits(PrintAnnotationStorage, _AnnotationStorage);
          var _super8 = _createSuper(PrintAnnotationStorage);
          function PrintAnnotationStorage(t) {
            var _this20;
            _classCallCheck(this, PrintAnnotationStorage);
            _this20 = _super8.call(this);
            _classPrivateFieldInitSpec(_assertThisInitialized(_this20), _f, {
              writable: true,
              value: null
            });
            _classPrivateFieldSet(_assertThisInitialized(_this20), _f, structuredClone(t.serializable));
            return _this20;
          }
          _createClass(PrintAnnotationStorage, [{
            key: "print",
            get: function get() {
              (0, n.unreachable)("Should not call PrintAnnotationStorage.print");
            }
          }, {
            key: "serializable",
            get: function get() {
              return _classPrivateFieldGet(this, _f);
            }
          }]);
          return PrintAnnotationStorage;
        }(AnnotationStorage);
        e.PrintAnnotationStorage = PrintAnnotationStorage;
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.AnnotationEditor = void 0;
        var n = s(5),
          i = s(1);
        var _b = /*#__PURE__*/new WeakMap();
        var _A = /*#__PURE__*/new WeakMap();
        var _2 = /*#__PURE__*/new WeakMap();
        var _y = /*#__PURE__*/new WeakMap();
        var _v = /*#__PURE__*/new WeakMap();
        var _S = /*#__PURE__*/new WeakMap();
        var AnnotationEditor = /*#__PURE__*/function () {
          function AnnotationEditor(t) {
            _classCallCheck(this, AnnotationEditor);
            _classPrivateFieldInitSpec(this, _b, {
              writable: true,
              value: this.focusin.bind(this)
            });
            _classPrivateFieldInitSpec(this, _A, {
              writable: true,
              value: this.focusout.bind(this)
            });
            _classPrivateFieldInitSpec(this, _2, {
              writable: true,
              value: !1
            });
            _classPrivateFieldInitSpec(this, _y, {
              writable: true,
              value: !1
            });
            _classPrivateFieldInitSpec(this, _v, {
              writable: true,
              value: !1
            });
            _defineProperty(this, "_uiManager", null);
            _classPrivateFieldInitSpec(this, _S, {
              writable: true,
              value: AnnotationEditor._zIndex++
            });
            this.constructor === AnnotationEditor && (0, i.unreachable)("Cannot initialize AnnotationEditor.");
            this.parent = t.parent;
            this.id = t.id;
            this.width = this.height = null;
            this.pageIndex = t.parent.pageIndex;
            this.name = t.name;
            this.div = null;
            this._uiManager = t.uiManager;
            var _this$parent$viewport = this.parent.viewport,
              e = _this$parent$viewport.rotation,
              _this$parent$viewport2 = _this$parent$viewport.rawDims,
              s = _this$parent$viewport2.pageWidth,
              n = _this$parent$viewport2.pageHeight,
              a = _this$parent$viewport2.pageX,
              r = _this$parent$viewport2.pageY;
            this.rotation = e;
            this.pageDimensions = [s, n];
            this.pageTranslation = [a, r];
            var _this$parentDimension = _slicedToArray(this.parentDimensions, 2),
              o = _this$parentDimension[0],
              l = _this$parentDimension[1];
            this.x = t.x / o;
            this.y = t.y / l;
            this.isAttachedToDOM = !1;
          }
          _createClass(AnnotationEditor, [{
            key: "addCommands",
            value: function addCommands(t) {
              this._uiManager.addCommands(t);
            }
          }, {
            key: "currentLayer",
            get: function get() {
              return this._uiManager.currentLayer;
            }
          }, {
            key: "setInBackground",
            value: function setInBackground() {
              this.div.style.zIndex = 0;
            }
          }, {
            key: "setInForeground",
            value: function setInForeground() {
              this.div.style.zIndex = _classPrivateFieldGet(this, _S);
            }
          }, {
            key: "setParent",
            value: function setParent(t) {
              if (null !== t) {
                this.pageIndex = t.pageIndex;
                this.pageDimensions = t.pageDimensions;
              }
              this.parent = t;
            }
          }, {
            key: "focusin",
            value: function focusin(t) {
              _classPrivateFieldGet(this, _2) ? _classPrivateFieldSet(this, _2, !1) : this.parent.setSelected(this);
            }
          }, {
            key: "focusout",
            value: function focusout(t) {
              var _t$relatedTarget;
              if (!this.isAttachedToDOM) return;
              if (!((_t$relatedTarget = t.relatedTarget) !== null && _t$relatedTarget !== void 0 && _t$relatedTarget.closest("#".concat(this.id)))) {
                var _this$parent;
                t.preventDefault();
                ((_this$parent = this.parent) === null || _this$parent === void 0 ? void 0 : _this$parent.isMultipleSelection) || this.commitOrRemove();
              }
            }
          }, {
            key: "commitOrRemove",
            value: function commitOrRemove() {
              this.isEmpty() ? this.remove() : this.commit();
            }
          }, {
            key: "commit",
            value: function commit() {
              this.addToAnnotationStorage();
            }
          }, {
            key: "addToAnnotationStorage",
            value: function addToAnnotationStorage() {
              this._uiManager.addToAnnotationStorage(this);
            }
          }, {
            key: "dragstart",
            value: function dragstart(t) {
              var e = this.parent.div.getBoundingClientRect();
              this.startX = t.clientX - e.x;
              this.startY = t.clientY - e.y;
              t.dataTransfer.setData("text/plain", this.id);
              t.dataTransfer.effectAllowed = "move";
            }
          }, {
            key: "setAt",
            value: function setAt(t, e, s, n) {
              var _this$parentDimension2 = _slicedToArray(this.parentDimensions, 2),
                i = _this$parentDimension2[0],
                a = _this$parentDimension2[1];
              var _this$screenToPageTra = this.screenToPageTranslation(s, n);
              var _this$screenToPageTra2 = _slicedToArray(_this$screenToPageTra, 2);
              s = _this$screenToPageTra2[0];
              n = _this$screenToPageTra2[1];
              this.x = (t + s) / i;
              this.y = (e + n) / a;
              this.div.style.left = 100 * this.x + "%";
              this.div.style.top = 100 * this.y + "%";
            }
          }, {
            key: "translate",
            value: function translate(t, e) {
              var _this$parentDimension3 = _slicedToArray(this.parentDimensions, 2),
                s = _this$parentDimension3[0],
                n = _this$parentDimension3[1];
              var _this$screenToPageTra3 = this.screenToPageTranslation(t, e);
              var _this$screenToPageTra4 = _slicedToArray(_this$screenToPageTra3, 2);
              t = _this$screenToPageTra4[0];
              e = _this$screenToPageTra4[1];
              this.x += t / s;
              this.y += e / n;
              this.div.style.left = 100 * this.x + "%";
              this.div.style.top = 100 * this.y + "%";
            }
          }, {
            key: "screenToPageTranslation",
            value: function screenToPageTranslation(t, e) {
              switch (this.parentRotation) {
                case 90:
                  return [e, -t];
                case 180:
                  return [-t, -e];
                case 270:
                  return [-e, t];
                default:
                  return [t, e];
              }
            }
          }, {
            key: "parentScale",
            get: function get() {
              return this._uiManager.viewParameters.realScale;
            }
          }, {
            key: "parentRotation",
            get: function get() {
              return this._uiManager.viewParameters.rotation;
            }
          }, {
            key: "parentDimensions",
            get: function get() {
              var t = this._uiManager.viewParameters.realScale,
                _this$pageDimensions = _slicedToArray(this.pageDimensions, 2),
                e = _this$pageDimensions[0],
                s = _this$pageDimensions[1];
              return [e * t, s * t];
            }
          }, {
            key: "setDims",
            value: function setDims(t, e) {
              var _this$parentDimension4 = _slicedToArray(this.parentDimensions, 2),
                s = _this$parentDimension4[0],
                n = _this$parentDimension4[1];
              this.div.style.width = 100 * t / s + "%";
              this.div.style.height = 100 * e / n + "%";
            }
          }, {
            key: "fixDims",
            value: function fixDims() {
              var t = this.div.style,
                e = t.height,
                s = t.width,
                n = s.endsWith("%"),
                i = e.endsWith("%");
              if (n && i) return;
              var _this$parentDimension5 = _slicedToArray(this.parentDimensions, 2),
                a = _this$parentDimension5[0],
                r = _this$parentDimension5[1];
              n || (t.width = 100 * parseFloat(s) / a + "%");
              i || (t.height = 100 * parseFloat(e) / r + "%");
            }
          }, {
            key: "getInitialTranslation",
            value: function getInitialTranslation() {
              return [0, 0];
            }
          }, {
            key: "render",
            value: function render() {
              this.div = document.createElement("div");
              this.div.setAttribute("data-editor-rotation", (360 - this.rotation) % 360);
              this.div.className = this.name;
              this.div.setAttribute("id", this.id);
              this.div.setAttribute("tabIndex", 0);
              this.setInForeground();
              this.div.addEventListener("focusin", _classPrivateFieldGet(this, _b));
              this.div.addEventListener("focusout", _classPrivateFieldGet(this, _A));
              var _this$getInitialTrans = this.getInitialTranslation(),
                _this$getInitialTrans2 = _slicedToArray(_this$getInitialTrans, 2),
                t = _this$getInitialTrans2[0],
                e = _this$getInitialTrans2[1];
              this.translate(t, e);
              (0, n.bindEvents)(this, this.div, ["dragstart", "pointerdown"]);
              return this.div;
            }
          }, {
            key: "pointerdown",
            value: function pointerdown(t) {
              var e = i.FeatureTest.platform.isMac;
              if (0 !== t.button || t.ctrlKey && e) t.preventDefault();else {
                t.ctrlKey && !e || t.shiftKey || t.metaKey && e ? this.parent.toggleSelected(this) : this.parent.setSelected(this);
                _classPrivateFieldSet(this, _2, !0);
              }
            }
          }, {
            key: "getRect",
            value: function getRect(t, e) {
              var s = this.parentScale,
                _this$pageDimensions2 = _slicedToArray(this.pageDimensions, 2),
                n = _this$pageDimensions2[0],
                i = _this$pageDimensions2[1],
                _this$pageTranslation = _slicedToArray(this.pageTranslation, 2),
                a = _this$pageTranslation[0],
                r = _this$pageTranslation[1],
                o = t / s,
                l = e / s,
                c = this.x * n,
                h = this.y * i,
                d = this.width * n,
                u = this.height * i;
              switch (this.rotation) {
                case 0:
                  return [c + o + a, i - h - l - u + r, c + o + d + a, i - h - l + r];
                case 90:
                  return [c + l + a, i - h + o + r, c + l + u + a, i - h + o + d + r];
                case 180:
                  return [c - o - d + a, i - h + l + r, c - o + a, i - h + l + u + r];
                case 270:
                  return [c - l - u + a, i - h - o - d + r, c - l + a, i - h - o + r];
                default:
                  throw new Error("Invalid rotation");
              }
            }
          }, {
            key: "getRectInCurrentCoords",
            value: function getRectInCurrentCoords(t, e) {
              var _t18 = _slicedToArray(t, 4),
                s = _t18[0],
                n = _t18[1],
                i = _t18[2],
                a = _t18[3],
                r = i - s,
                o = a - n;
              switch (this.rotation) {
                case 0:
                  return [s, e - a, r, o];
                case 90:
                  return [s, e - n, o, r];
                case 180:
                  return [i, e - n, r, o];
                case 270:
                  return [i, e - a, o, r];
                default:
                  throw new Error("Invalid rotation");
              }
            }
          }, {
            key: "onceAdded",
            value: function onceAdded() {}
          }, {
            key: "isEmpty",
            value: function isEmpty() {
              return !1;
            }
          }, {
            key: "enableEditMode",
            value: function enableEditMode() {
              _classPrivateFieldSet(this, _v, !0);
            }
          }, {
            key: "disableEditMode",
            value: function disableEditMode() {
              _classPrivateFieldSet(this, _v, !1);
            }
          }, {
            key: "isInEditMode",
            value: function isInEditMode() {
              return _classPrivateFieldGet(this, _v);
            }
          }, {
            key: "shouldGetKeyboardEvents",
            value: function shouldGetKeyboardEvents() {
              return !1;
            }
          }, {
            key: "needsToBeRebuilt",
            value: function needsToBeRebuilt() {
              return this.div && !this.isAttachedToDOM;
            }
          }, {
            key: "rebuild",
            value: function rebuild() {
              var _this$div;
              (_this$div = this.div) === null || _this$div === void 0 ? void 0 : _this$div.addEventListener("focusin", _classPrivateFieldGet(this, _b));
            }
          }, {
            key: "serialize",
            value: function serialize() {
              (0, i.unreachable)("An editor must be serializable");
            }
          }, {
            key: "remove",
            value: function remove() {
              this.div.removeEventListener("focusin", _classPrivateFieldGet(this, _b));
              this.div.removeEventListener("focusout", _classPrivateFieldGet(this, _A));
              this.isEmpty() || this.commit();
              this.parent.remove(this);
            }
          }, {
            key: "select",
            value: function select() {
              var _this$div2;
              (_this$div2 = this.div) === null || _this$div2 === void 0 ? void 0 : _this$div2.classList.add("selectedEditor");
            }
          }, {
            key: "unselect",
            value: function unselect() {
              var _this$div3;
              (_this$div3 = this.div) === null || _this$div3 === void 0 ? void 0 : _this$div3.classList.remove("selectedEditor");
            }
          }, {
            key: "updateParams",
            value: function updateParams(t, e) {}
          }, {
            key: "disableEditing",
            value: function disableEditing() {}
          }, {
            key: "enableEditing",
            value: function enableEditing() {}
          }, {
            key: "propertiesToUpdate",
            get: function get() {
              return {};
            }
          }, {
            key: "contentDiv",
            get: function get() {
              return this.div;
            }
          }, {
            key: "isEditing",
            get: function get() {
              return _classPrivateFieldGet(this, _y);
            },
            set: function set(t) {
              _classPrivateFieldSet(this, _y, t);
              if (t) {
                this.parent.setSelected(this);
                this.parent.setActiveEditor(this);
              } else this.parent.setActiveEditor(null);
            }
          }], [{
            key: "_defaultLineColor",
            get: function get() {
              return (0, i.shadow)(this, "_defaultLineColor", this._colorManager.getHexCode("CanvasText"));
            }
          }, {
            key: "deserialize",
            value: function deserialize(t, e, s) {
              var n = new this.prototype.constructor({
                parent: e,
                id: e.getNextId(),
                uiManager: s
              });
              n.rotation = t.rotation;
              var _n$pageDimensions = _slicedToArray(n.pageDimensions, 2),
                i = _n$pageDimensions[0],
                a = _n$pageDimensions[1],
                _n$getRectInCurrentCo = n.getRectInCurrentCoords(t.rect, a),
                _n$getRectInCurrentCo2 = _slicedToArray(_n$getRectInCurrentCo, 4),
                r = _n$getRectInCurrentCo2[0],
                o = _n$getRectInCurrentCo2[1],
                l = _n$getRectInCurrentCo2[2],
                c = _n$getRectInCurrentCo2[3];
              n.x = r / i;
              n.y = o / a;
              n.width = l / i;
              n.height = c / a;
              return n;
            }
          }]);
          return AnnotationEditor;
        }();
        _defineProperty(AnnotationEditor, "_colorManager", new n.ColorManager());
        _defineProperty(AnnotationEditor, "_zIndex", 1);
        e.AnnotationEditor = AnnotationEditor;
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.KeyboardManager = e.CommandManager = e.ColorManager = e.AnnotationEditorUIManager = void 0;
        e.bindEvents = function bindEvents(t, e, s) {
          var _iterator20 = _createForOfIteratorHelper(s),
            _step20;
          try {
            for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {
              var _n12 = _step20.value;
              e.addEventListener(_n12, t[_n12].bind(t));
            }
          } catch (err) {
            _iterator20.e(err);
          } finally {
            _iterator20.f();
          }
        };
        e.opacityToHex = function opacityToHex(t) {
          return Math.round(Math.min(255, Math.max(1, 255 * t))).toString(16).padStart(2, "0");
        };
        var n = s(1),
          i = s(6);
        var _x6 = /*#__PURE__*/new WeakMap();
        var IdManager = /*#__PURE__*/function () {
          function IdManager() {
            _classCallCheck(this, IdManager);
            _classPrivateFieldInitSpec(this, _x6, {
              writable: true,
              value: 0
            });
          }
          _createClass(IdManager, [{
            key: "getId",
            value: function getId() {
              var _this$x, _this$x2;
              return "".concat(n.AnnotationEditorPrefix).concat((_classPrivateFieldSet(this, _x6, (_this$x = _classPrivateFieldGet(this, _x6), _this$x2 = _this$x++, _this$x)), _this$x2));
            }
          }]);
          return IdManager;
        }();
        var _E = /*#__PURE__*/new WeakMap();
        var _C = /*#__PURE__*/new WeakMap();
        var _P = /*#__PURE__*/new WeakMap();
        var _T = /*#__PURE__*/new WeakMap();
        var CommandManager = /*#__PURE__*/function () {
          function CommandManager() {
            var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;
            _classCallCheck(this, CommandManager);
            _classPrivateFieldInitSpec(this, _E, {
              writable: true,
              value: []
            });
            _classPrivateFieldInitSpec(this, _C, {
              writable: true,
              value: !1
            });
            _classPrivateFieldInitSpec(this, _P, {
              writable: true,
              value: void 0
            });
            _classPrivateFieldInitSpec(this, _T, {
              writable: true,
              value: -1
            });
            _classPrivateFieldSet(this, _P, t);
          }
          _createClass(CommandManager, [{
            key: "add",
            value: function add(_ref26) {
              var t = _ref26.cmd,
                e = _ref26.undo,
                s = _ref26.mustExec,
                _ref26$type = _ref26.type,
                n = _ref26$type === void 0 ? NaN : _ref26$type,
                _ref26$overwriteIfSam = _ref26.overwriteIfSameType,
                i = _ref26$overwriteIfSam === void 0 ? !1 : _ref26$overwriteIfSam,
                _ref26$keepUndo = _ref26.keepUndo,
                a = _ref26$keepUndo === void 0 ? !1 : _ref26$keepUndo;
              s && t();
              if (_classPrivateFieldGet(this, _C)) return;
              var r = {
                cmd: t,
                undo: e,
                type: n
              };
              if (-1 === _classPrivateFieldGet(this, _T)) {
                _classPrivateFieldGet(this, _E).length > 0 && (_classPrivateFieldGet(this, _E).length = 0);
                _classPrivateFieldSet(this, _T, 0);
                _classPrivateFieldGet(this, _E).push(r);
                return;
              }
              if (i && _classPrivateFieldGet(this, _E)[_classPrivateFieldGet(this, _T)].type === n) {
                a && (r.undo = _classPrivateFieldGet(this, _E)[_classPrivateFieldGet(this, _T)].undo);
                _classPrivateFieldGet(this, _E)[_classPrivateFieldGet(this, _T)] = r;
                return;
              }
              var o = _classPrivateFieldGet(this, _T) + 1;
              if (o === _classPrivateFieldGet(this, _P)) _classPrivateFieldGet(this, _E).splice(0, 1);else {
                _classPrivateFieldSet(this, _T, o);
                o < _classPrivateFieldGet(this, _E).length && _classPrivateFieldGet(this, _E).splice(o);
              }
              _classPrivateFieldGet(this, _E).push(r);
            }
          }, {
            key: "undo",
            value: function undo() {
              if (-1 !== _classPrivateFieldGet(this, _T)) {
                _classPrivateFieldSet(this, _C, !0);
                _classPrivateFieldGet(this, _E)[_classPrivateFieldGet(this, _T)].undo();
                _classPrivateFieldSet(this, _C, !1);
                _classPrivateFieldSet(this, _T, _classPrivateFieldGet(this, _T) - 1);
              }
            }
          }, {
            key: "redo",
            value: function redo() {
              if (_classPrivateFieldGet(this, _T) < _classPrivateFieldGet(this, _E).length - 1) {
                _classPrivateFieldSet(this, _T, _classPrivateFieldGet(this, _T) + 1);
                _classPrivateFieldSet(this, _C, !0);
                _classPrivateFieldGet(this, _E)[_classPrivateFieldGet(this, _T)].cmd();
                _classPrivateFieldSet(this, _C, !1);
              }
            }
          }, {
            key: "hasSomethingToUndo",
            value: function hasSomethingToUndo() {
              return -1 !== _classPrivateFieldGet(this, _T);
            }
          }, {
            key: "hasSomethingToRedo",
            value: function hasSomethingToRedo() {
              return _classPrivateFieldGet(this, _T) < _classPrivateFieldGet(this, _E).length - 1;
            }
          }, {
            key: "destroy",
            value: function destroy() {
              _classPrivateFieldSet(this, _E, null);
            }
          }]);
          return CommandManager;
        }();
        e.CommandManager = CommandManager;
        var _w = /*#__PURE__*/new WeakSet();
        var KeyboardManager = /*#__PURE__*/function () {
          function KeyboardManager(_t19) {
            _classCallCheck(this, KeyboardManager);
            _classPrivateMethodInitSpec(this, _w);
            this.buffer = [];
            this.callbacks = new Map();
            this.allKeys = new Set();
            var _e15 = n.FeatureTest.platform.isMac;
            var _iterator21 = _createForOfIteratorHelper(_t19),
              _step21;
            try {
              for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {
                var _step21$value = _slicedToArray(_step21.value, 2),
                  _s18 = _step21$value[0],
                  _n13 = _step21$value[1];
                var _iterator22 = _createForOfIteratorHelper(_s18),
                  _step22;
                try {
                  for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {
                    var _t20 = _step22.value;
                    var _s19 = _t20.startsWith("mac+");
                    if (_e15 && _s19) {
                      this.callbacks.set(_t20.slice(4), _n13);
                      this.allKeys.add(_t20.split("+").at(-1));
                    } else if (!_e15 && !_s19) {
                      this.callbacks.set(_t20, _n13);
                      this.allKeys.add(_t20.split("+").at(-1));
                    }
                  }
                } catch (err) {
                  _iterator22.e(err);
                } finally {
                  _iterator22.f();
                }
              }
            } catch (err) {
              _iterator21.e(err);
            } finally {
              _iterator21.f();
            }
          }
          _createClass(KeyboardManager, [{
            key: "exec",
            value: function exec(t, e) {
              if (!this.allKeys.has(e.key)) return;
              var s = this.callbacks.get(_classPrivateMethodGet(this, _w, _w2).call(this, e));
              if (s) {
                s.bind(t)();
                e.stopPropagation();
                e.preventDefault();
              }
            }
          }]);
          return KeyboardManager;
        }();
        function _w2(t) {
          t.altKey && this.buffer.push("alt");
          t.ctrlKey && this.buffer.push("ctrl");
          t.metaKey && this.buffer.push("meta");
          t.shiftKey && this.buffer.push("shift");
          this.buffer.push(t.key);
          var e = this.buffer.join("+");
          this.buffer.length = 0;
          return e;
        }
        e.KeyboardManager = KeyboardManager;
        var ColorManager = /*#__PURE__*/function () {
          function ColorManager() {
            _classCallCheck(this, ColorManager);
          }
          _createClass(ColorManager, [{
            key: "_colors",
            get: function get() {
              var t = new Map([["CanvasText", null], ["Canvas", null]]);
              (0, i.getColorValues)(t);
              return (0, n.shadow)(this, "_colors", t);
            }
          }, {
            key: "convert",
            value: function convert(t) {
              var e = (0, i.getRGB)(t);
              if (!window.matchMedia("(forced-colors: active)").matches) return e;
              var _iterator23 = _createForOfIteratorHelper(this._colors),
                _step23;
              try {
                for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {
                  var _step23$value = _slicedToArray(_step23.value, 2),
                    _t21 = _step23$value[0],
                    _s20 = _step23$value[1];
                  if (_s20.every(function (t, s) {
                    return t === e[s];
                  })) return ColorManager._colorsMapping.get(_t21);
                }
              } catch (err) {
                _iterator23.e(err);
              } finally {
                _iterator23.f();
              }
              return e;
            }
          }, {
            key: "getHexCode",
            value: function getHexCode(t) {
              var _n$Util;
              var e = this._colors.get(t);
              return e ? (_n$Util = n.Util).makeHexColor.apply(_n$Util, _toConsumableArray(e)) : t;
            }
          }]);
          return ColorManager;
        }();
        _defineProperty(ColorManager, "_colorsMapping", new Map([["CanvasText", [0, 0, 0]], ["Canvas", [255, 255, 255]]]));
        e.ColorManager = ColorManager;
        var _k = /*#__PURE__*/new WeakMap();
        var _F = /*#__PURE__*/new WeakMap();
        var _R = /*#__PURE__*/new WeakMap();
        var _M = /*#__PURE__*/new WeakMap();
        var _D = /*#__PURE__*/new WeakMap();
        var _I = /*#__PURE__*/new WeakMap();
        var _O = /*#__PURE__*/new WeakMap();
        var _L = /*#__PURE__*/new WeakMap();
        var _N = /*#__PURE__*/new WeakMap();
        var _j = /*#__PURE__*/new WeakMap();
        var _U = /*#__PURE__*/new WeakMap();
        var _B = /*#__PURE__*/new WeakMap();
        var _q = /*#__PURE__*/new WeakMap();
        var _W = /*#__PURE__*/new WeakMap();
        var _H = /*#__PURE__*/new WeakMap();
        var _G = /*#__PURE__*/new WeakMap();
        var _z = /*#__PURE__*/new WeakMap();
        var _V = /*#__PURE__*/new WeakMap();
        var _X = /*#__PURE__*/new WeakMap();
        var _$ = /*#__PURE__*/new WeakMap();
        var _Y = /*#__PURE__*/new WeakMap();
        var _K = /*#__PURE__*/new WeakMap();
        var _J = /*#__PURE__*/new WeakMap();
        var _Z = /*#__PURE__*/new WeakSet();
        var _Q = /*#__PURE__*/new WeakSet();
        var _tt = /*#__PURE__*/new WeakSet();
        var _et = /*#__PURE__*/new WeakSet();
        var _it = /*#__PURE__*/new WeakSet();
        var _at = /*#__PURE__*/new WeakSet();
        var _lt = /*#__PURE__*/new WeakSet();
        var _ot = /*#__PURE__*/new WeakSet();
        var _st = /*#__PURE__*/new WeakSet();
        var _rt = /*#__PURE__*/new WeakSet();
        var _nt = /*#__PURE__*/new WeakSet();
        var AnnotationEditorUIManager = /*#__PURE__*/function () {
          function AnnotationEditorUIManager(_t22, _e16, s) {
            _classCallCheck(this, AnnotationEditorUIManager);
            _classPrivateMethodInitSpec(this, _nt);
            _classPrivateMethodInitSpec(this, _rt);
            _classPrivateMethodInitSpec(this, _st);
            _classPrivateMethodInitSpec(this, _ot);
            _classPrivateMethodInitSpec(this, _lt);
            _classPrivateMethodInitSpec(this, _at);
            _classPrivateMethodInitSpec(this, _it);
            _classPrivateMethodInitSpec(this, _et);
            _classPrivateMethodInitSpec(this, _tt);
            _classPrivateMethodInitSpec(this, _Q);
            _classPrivateMethodInitSpec(this, _Z);
            _classPrivateFieldInitSpec(this, _k, {
              writable: true,
              value: null
            });
            _classPrivateFieldInitSpec(this, _F, {
              writable: true,
              value: new Map()
            });
            _classPrivateFieldInitSpec(this, _R, {
              writable: true,
              value: new Map()
            });
            _classPrivateFieldInitSpec(this, _M, {
              writable: true,
              value: null
            });
            _classPrivateFieldInitSpec(this, _D, {
              writable: true,
              value: new CommandManager()
            });
            _classPrivateFieldInitSpec(this, _I, {
              writable: true,
              value: 0
            });
            _classPrivateFieldInitSpec(this, _O, {
              writable: true,
              value: null
            });
            _classPrivateFieldInitSpec(this, _L, {
              writable: true,
              value: new Set()
            });
            _classPrivateFieldInitSpec(this, _N, {
              writable: true,
              value: null
            });
            _classPrivateFieldInitSpec(this, _j, {
              writable: true,
              value: new IdManager()
            });
            _classPrivateFieldInitSpec(this, _U, {
              writable: true,
              value: !1
            });
            _classPrivateFieldInitSpec(this, _B, {
              writable: true,
              value: n.AnnotationEditorType.NONE
            });
            _classPrivateFieldInitSpec(this, _q, {
              writable: true,
              value: new Set()
            });
            _classPrivateFieldInitSpec(this, _W, {
              writable: true,
              value: this.copy.bind(this)
            });
            _classPrivateFieldInitSpec(this, _H, {
              writable: true,
              value: this.cut.bind(this)
            });
            _classPrivateFieldInitSpec(this, _G, {
              writable: true,
              value: this.paste.bind(this)
            });
            _classPrivateFieldInitSpec(this, _z, {
              writable: true,
              value: this.keydown.bind(this)
            });
            _classPrivateFieldInitSpec(this, _V, {
              writable: true,
              value: this.onEditingAction.bind(this)
            });
            _classPrivateFieldInitSpec(this, _X, {
              writable: true,
              value: this.onPageChanging.bind(this)
            });
            _classPrivateFieldInitSpec(this, _$, {
              writable: true,
              value: this.onScaleChanging.bind(this)
            });
            _classPrivateFieldInitSpec(this, _Y, {
              writable: true,
              value: this.onRotationChanging.bind(this)
            });
            _classPrivateFieldInitSpec(this, _K, {
              writable: true,
              value: {
                isEditing: !1,
                isEmpty: !0,
                hasSomethingToUndo: !1,
                hasSomethingToRedo: !1,
                hasSelectedEditor: !1
              }
            });
            _classPrivateFieldInitSpec(this, _J, {
              writable: true,
              value: null
            });
            _classPrivateFieldSet(this, _J, _t22);
            _classPrivateFieldSet(this, _N, _e16);
            _classPrivateFieldGet(this, _N)._on("editingaction", _classPrivateFieldGet(this, _V));
            _classPrivateFieldGet(this, _N)._on("pagechanging", _classPrivateFieldGet(this, _X));
            _classPrivateFieldGet(this, _N)._on("scalechanging", _classPrivateFieldGet(this, _$));
            _classPrivateFieldGet(this, _N)._on("rotationchanging", _classPrivateFieldGet(this, _Y));
            _classPrivateFieldSet(this, _M, s);
            this.viewParameters = {
              realScale: i.PixelsPerInch.PDF_TO_CSS_UNITS,
              rotation: 0
            };
          }
          _createClass(AnnotationEditorUIManager, [{
            key: "destroy",
            value: function destroy() {
              _classPrivateMethodGet(this, _Q, _Q2).call(this);
              _classPrivateFieldGet(this, _N)._off("editingaction", _classPrivateFieldGet(this, _V));
              _classPrivateFieldGet(this, _N)._off("pagechanging", _classPrivateFieldGet(this, _X));
              _classPrivateFieldGet(this, _N)._off("scalechanging", _classPrivateFieldGet(this, _$));
              _classPrivateFieldGet(this, _N)._off("rotationchanging", _classPrivateFieldGet(this, _Y));
              var _iterator24 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _R).values()),
                _step24;
              try {
                for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {
                  var _t23 = _step24.value;
                  _t23.destroy();
                }
              } catch (err) {
                _iterator24.e(err);
              } finally {
                _iterator24.f();
              }
              _classPrivateFieldGet(this, _R).clear();
              _classPrivateFieldGet(this, _F).clear();
              _classPrivateFieldGet(this, _L).clear();
              _classPrivateFieldSet(this, _k, null);
              _classPrivateFieldGet(this, _q).clear();
              _classPrivateFieldGet(this, _D).destroy();
            }
          }, {
            key: "onPageChanging",
            value: function onPageChanging(_ref27) {
              var t = _ref27.pageNumber;
              _classPrivateFieldSet(this, _I, t - 1);
            }
          }, {
            key: "focusMainContainer",
            value: function focusMainContainer() {
              _classPrivateFieldGet(this, _J).focus();
            }
          }, {
            key: "addShouldRescale",
            value: function addShouldRescale(t) {
              _classPrivateFieldGet(this, _L).add(t);
            }
          }, {
            key: "removeShouldRescale",
            value: function removeShouldRescale(t) {
              _classPrivateFieldGet(this, _L)["delete"](t);
            }
          }, {
            key: "onScaleChanging",
            value: function onScaleChanging(_ref28) {
              var t = _ref28.scale;
              this.commitOrRemove();
              this.viewParameters.realScale = t * i.PixelsPerInch.PDF_TO_CSS_UNITS;
              var _iterator25 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _L)),
                _step25;
              try {
                for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {
                  var _t24 = _step25.value;
                  _t24.onScaleChanging();
                }
              } catch (err) {
                _iterator25.e(err);
              } finally {
                _iterator25.f();
              }
            }
          }, {
            key: "onRotationChanging",
            value: function onRotationChanging(_ref29) {
              var t = _ref29.pagesRotation;
              this.commitOrRemove();
              this.viewParameters.rotation = t;
            }
          }, {
            key: "addToAnnotationStorage",
            value: function addToAnnotationStorage(t) {
              t.isEmpty() || !_classPrivateFieldGet(this, _M) || _classPrivateFieldGet(this, _M).has(t.id) || _classPrivateFieldGet(this, _M).setValue(t.id, t);
            }
          }, {
            key: "copy",
            value: function copy(t) {
              t.preventDefault();
              _classPrivateFieldGet(this, _k) && _classPrivateFieldGet(this, _k).commitOrRemove();
              if (!this.hasSelection) return;
              var e = [];
              var _iterator26 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _q)),
                _step26;
              try {
                for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {
                  var _t25 = _step26.value;
                  _t25.isEmpty() || e.push(_t25.serialize());
                }
              } catch (err) {
                _iterator26.e(err);
              } finally {
                _iterator26.f();
              }
              0 !== e.length && t.clipboardData.setData("application/pdfjs", JSON.stringify(e));
            }
          }, {
            key: "cut",
            value: function cut(t) {
              this.copy(t);
              this["delete"]();
            }
          }, {
            key: "paste",
            value: function paste(t) {
              var _this21 = this;
              t.preventDefault();
              var e = t.clipboardData.getData("application/pdfjs");
              if (!e) return;
              try {
                e = JSON.parse(e);
              } catch (t) {
                (0, n.warn)("paste: \"".concat(t.message, "\"."));
                return;
              }
              if (!Array.isArray(e)) return;
              this.unselectAll();
              var s = _classPrivateFieldGet(this, _R).get(_classPrivateFieldGet(this, _I));
              try {
                var _t26 = [];
                var _iterator27 = _createForOfIteratorHelper(e),
                  _step27;
                try {
                  for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {
                    var _n14 = _step27.value;
                    var _e19 = s.deserialize(_n14);
                    if (!_e19) return;
                    _t26.push(_e19);
                  }
                } catch (err) {
                  _iterator27.e(err);
                } finally {
                  _iterator27.f();
                }
                var cmd = function cmd() {
                    for (var _i12 = 0, _t27 = _t26; _i12 < _t27.length; _i12++) {
                      var _e17 = _t27[_i12];
                      _classPrivateMethodGet(_this21, _st, _st2).call(_this21, _e17);
                    }
                    _classPrivateMethodGet(_this21, _nt, _nt2).call(_this21, _t26);
                  },
                  undo = function undo() {
                    for (var _i13 = 0, _t28 = _t26; _i13 < _t28.length; _i13++) {
                      var _e18 = _t28[_i13];
                      _e18.remove();
                    }
                  };
                this.addCommands({
                  cmd: cmd,
                  undo: undo,
                  mustExec: !0
                });
              } catch (t) {
                (0, n.warn)("paste: \"".concat(t.message, "\"."));
              }
            }
          }, {
            key: "keydown",
            value: function keydown(t) {
              var _this$getActive;
              ((_this$getActive = this.getActive()) === null || _this$getActive === void 0 ? void 0 : _this$getActive.shouldGetKeyboardEvents()) || AnnotationEditorUIManager._keyboardManager.exec(this, t);
            }
          }, {
            key: "onEditingAction",
            value: function onEditingAction(t) {
              ["undo", "redo", "delete", "selectAll"].includes(t.name) && this[t.name]();
            }
          }, {
            key: "setEditingState",
            value: function setEditingState(t) {
              if (t) {
                _classPrivateMethodGet(this, _Z, _Z2).call(this);
                _classPrivateMethodGet(this, _tt, _tt2).call(this);
                _classPrivateMethodGet(this, _it, _it2).call(this, {
                  isEditing: _classPrivateFieldGet(this, _B) !== n.AnnotationEditorType.NONE,
                  isEmpty: _classPrivateMethodGet(this, _rt, _rt2).call(this),
                  hasSomethingToUndo: _classPrivateFieldGet(this, _D).hasSomethingToUndo(),
                  hasSomethingToRedo: _classPrivateFieldGet(this, _D).hasSomethingToRedo(),
                  hasSelectedEditor: !1
                });
              } else {
                _classPrivateMethodGet(this, _Q, _Q2).call(this);
                _classPrivateMethodGet(this, _et, _et2).call(this);
                _classPrivateMethodGet(this, _it, _it2).call(this, {
                  isEditing: !1
                });
              }
            }
          }, {
            key: "registerEditorTypes",
            value: function registerEditorTypes(t) {
              if (!_classPrivateFieldGet(this, _O)) {
                _classPrivateFieldSet(this, _O, t);
                var _iterator28 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _O)),
                  _step28;
                try {
                  for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {
                    var _t29 = _step28.value;
                    _classPrivateMethodGet(this, _at, _at2).call(this, _t29.defaultPropertiesToUpdate);
                  }
                } catch (err) {
                  _iterator28.e(err);
                } finally {
                  _iterator28.f();
                }
              }
            }
          }, {
            key: "getId",
            value: function getId() {
              return _classPrivateFieldGet(this, _j).getId();
            }
          }, {
            key: "currentLayer",
            get: function get() {
              return _classPrivateFieldGet(this, _R).get(_classPrivateFieldGet(this, _I));
            }
          }, {
            key: "currentPageIndex",
            get: function get() {
              return _classPrivateFieldGet(this, _I);
            }
          }, {
            key: "addLayer",
            value: function addLayer(t) {
              _classPrivateFieldGet(this, _R).set(t.pageIndex, t);
              _classPrivateFieldGet(this, _U) ? t.enable() : t.disable();
            }
          }, {
            key: "removeLayer",
            value: function removeLayer(t) {
              _classPrivateFieldGet(this, _R)["delete"](t.pageIndex);
            }
          }, {
            key: "updateMode",
            value: function updateMode(t) {
              _classPrivateFieldSet(this, _B, t);
              if (t === n.AnnotationEditorType.NONE) {
                this.setEditingState(!1);
                _classPrivateMethodGet(this, _ot, _ot2).call(this);
              } else {
                this.setEditingState(!0);
                _classPrivateMethodGet(this, _lt, _lt2).call(this);
                var _iterator29 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _R).values()),
                  _step29;
                try {
                  for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {
                    var _e20 = _step29.value;
                    _e20.updateMode(t);
                  }
                } catch (err) {
                  _iterator29.e(err);
                } finally {
                  _iterator29.f();
                }
              }
            }
          }, {
            key: "updateToolbar",
            value: function updateToolbar(t) {
              t !== _classPrivateFieldGet(this, _B) && _classPrivateFieldGet(this, _N).dispatch("switchannotationeditormode", {
                source: this,
                mode: t
              });
            }
          }, {
            key: "updateParams",
            value: function updateParams(t, e) {
              if (_classPrivateFieldGet(this, _O)) {
                var _iterator30 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _q)),
                  _step30;
                try {
                  for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {
                    var _s21 = _step30.value;
                    _s21.updateParams(t, e);
                  }
                } catch (err) {
                  _iterator30.e(err);
                } finally {
                  _iterator30.f();
                }
                var _iterator31 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _O)),
                  _step31;
                try {
                  for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {
                    var _s22 = _step31.value;
                    _s22.updateDefaultParams(t, e);
                  }
                } catch (err) {
                  _iterator31.e(err);
                } finally {
                  _iterator31.f();
                }
              }
            }
          }, {
            key: "getEditors",
            value: function getEditors(t) {
              var e = [];
              var _iterator32 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _F).values()),
                _step32;
              try {
                for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {
                  var _s23 = _step32.value;
                  _s23.pageIndex === t && e.push(_s23);
                }
              } catch (err) {
                _iterator32.e(err);
              } finally {
                _iterator32.f();
              }
              return e;
            }
          }, {
            key: "getEditor",
            value: function getEditor(t) {
              return _classPrivateFieldGet(this, _F).get(t);
            }
          }, {
            key: "addEditor",
            value: function addEditor(t) {
              _classPrivateFieldGet(this, _F).set(t.id, t);
            }
          }, {
            key: "removeEditor",
            value: function removeEditor(t) {
              var _classPrivateFieldGet4;
              _classPrivateFieldGet(this, _F)["delete"](t.id);
              this.unselect(t);
              (_classPrivateFieldGet4 = _classPrivateFieldGet(this, _M)) === null || _classPrivateFieldGet4 === void 0 ? void 0 : _classPrivateFieldGet4.remove(t.id);
            }
          }, {
            key: "setActiveEditor",
            value: function setActiveEditor(t) {
              if (_classPrivateFieldGet(this, _k) !== t) {
                _classPrivateFieldSet(this, _k, t);
                t && _classPrivateMethodGet(this, _at, _at2).call(this, t.propertiesToUpdate);
              }
            }
          }, {
            key: "toggleSelected",
            value: function toggleSelected(t) {
              if (_classPrivateFieldGet(this, _q).has(t)) {
                _classPrivateFieldGet(this, _q)["delete"](t);
                t.unselect();
                _classPrivateMethodGet(this, _it, _it2).call(this, {
                  hasSelectedEditor: this.hasSelection
                });
              } else {
                _classPrivateFieldGet(this, _q).add(t);
                t.select();
                _classPrivateMethodGet(this, _at, _at2).call(this, t.propertiesToUpdate);
                _classPrivateMethodGet(this, _it, _it2).call(this, {
                  hasSelectedEditor: !0
                });
              }
            }
          }, {
            key: "setSelected",
            value: function setSelected(t) {
              var _iterator33 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _q)),
                _step33;
              try {
                for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {
                  var _e21 = _step33.value;
                  _e21 !== t && _e21.unselect();
                }
              } catch (err) {
                _iterator33.e(err);
              } finally {
                _iterator33.f();
              }
              _classPrivateFieldGet(this, _q).clear();
              _classPrivateFieldGet(this, _q).add(t);
              t.select();
              _classPrivateMethodGet(this, _at, _at2).call(this, t.propertiesToUpdate);
              _classPrivateMethodGet(this, _it, _it2).call(this, {
                hasSelectedEditor: !0
              });
            }
          }, {
            key: "isSelected",
            value: function isSelected(t) {
              return _classPrivateFieldGet(this, _q).has(t);
            }
          }, {
            key: "unselect",
            value: function unselect(t) {
              t.unselect();
              _classPrivateFieldGet(this, _q)["delete"](t);
              _classPrivateMethodGet(this, _it, _it2).call(this, {
                hasSelectedEditor: this.hasSelection
              });
            }
          }, {
            key: "hasSelection",
            get: function get() {
              return 0 !== _classPrivateFieldGet(this, _q).size;
            }
          }, {
            key: "undo",
            value: function undo() {
              _classPrivateFieldGet(this, _D).undo();
              _classPrivateMethodGet(this, _it, _it2).call(this, {
                hasSomethingToUndo: _classPrivateFieldGet(this, _D).hasSomethingToUndo(),
                hasSomethingToRedo: !0,
                isEmpty: _classPrivateMethodGet(this, _rt, _rt2).call(this)
              });
            }
          }, {
            key: "redo",
            value: function redo() {
              _classPrivateFieldGet(this, _D).redo();
              _classPrivateMethodGet(this, _it, _it2).call(this, {
                hasSomethingToUndo: !0,
                hasSomethingToRedo: _classPrivateFieldGet(this, _D).hasSomethingToRedo(),
                isEmpty: _classPrivateMethodGet(this, _rt, _rt2).call(this)
              });
            }
          }, {
            key: "addCommands",
            value: function addCommands(t) {
              _classPrivateFieldGet(this, _D).add(t);
              _classPrivateMethodGet(this, _it, _it2).call(this, {
                hasSomethingToUndo: !0,
                hasSomethingToRedo: !1,
                isEmpty: _classPrivateMethodGet(this, _rt, _rt2).call(this)
              });
            }
          }, {
            key: "delete",
            value: function _delete() {
              var _this22 = this;
              this.commitOrRemove();
              if (!this.hasSelection) return;
              var t = _toConsumableArray(_classPrivateFieldGet(this, _q));
              this.addCommands({
                cmd: function cmd() {
                  var _iterator34 = _createForOfIteratorHelper(t),
                    _step34;
                  try {
                    for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {
                      var _e22 = _step34.value;
                      _e22.remove();
                    }
                  } catch (err) {
                    _iterator34.e(err);
                  } finally {
                    _iterator34.f();
                  }
                },
                undo: function undo() {
                  var _iterator35 = _createForOfIteratorHelper(t),
                    _step35;
                  try {
                    for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {
                      var _e23 = _step35.value;
                      _classPrivateMethodGet(_this22, _st, _st2).call(_this22, _e23);
                    }
                  } catch (err) {
                    _iterator35.e(err);
                  } finally {
                    _iterator35.f();
                  }
                },
                mustExec: !0
              });
            }
          }, {
            key: "commitOrRemove",
            value: function commitOrRemove() {
              var _classPrivateFieldGet5;
              (_classPrivateFieldGet5 = _classPrivateFieldGet(this, _k)) === null || _classPrivateFieldGet5 === void 0 ? void 0 : _classPrivateFieldGet5.commitOrRemove();
            }
          }, {
            key: "selectAll",
            value: function selectAll() {
              var _iterator36 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _q)),
                _step36;
              try {
                for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {
                  var _t30 = _step36.value;
                  _t30.commit();
                }
              } catch (err) {
                _iterator36.e(err);
              } finally {
                _iterator36.f();
              }
              _classPrivateMethodGet(this, _nt, _nt2).call(this, _classPrivateFieldGet(this, _F).values());
            }
          }, {
            key: "unselectAll",
            value: function unselectAll() {
              if (_classPrivateFieldGet(this, _k)) _classPrivateFieldGet(this, _k).commitOrRemove();else if (0 !== _classPrivateFieldGet(this, _q).size) {
                var _iterator37 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _q)),
                  _step37;
                try {
                  for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {
                    var _t31 = _step37.value;
                    _t31.unselect();
                  }
                } catch (err) {
                  _iterator37.e(err);
                } finally {
                  _iterator37.f();
                }
                _classPrivateFieldGet(this, _q).clear();
                _classPrivateMethodGet(this, _it, _it2).call(this, {
                  hasSelectedEditor: !1
                });
              }
            }
          }, {
            key: "isActive",
            value: function isActive(t) {
              return _classPrivateFieldGet(this, _k) === t;
            }
          }, {
            key: "getActive",
            value: function getActive() {
              return _classPrivateFieldGet(this, _k);
            }
          }, {
            key: "getMode",
            value: function getMode() {
              return _classPrivateFieldGet(this, _B);
            }
          }]);
          return AnnotationEditorUIManager;
        }();
        function _Z2() {
          _classPrivateFieldGet(this, _J).addEventListener("keydown", _classPrivateFieldGet(this, _z));
        }
        function _Q2() {
          _classPrivateFieldGet(this, _J).removeEventListener("keydown", _classPrivateFieldGet(this, _z));
        }
        function _tt2() {
          document.addEventListener("copy", _classPrivateFieldGet(this, _W));
          document.addEventListener("cut", _classPrivateFieldGet(this, _H));
          document.addEventListener("paste", _classPrivateFieldGet(this, _G));
        }
        function _et2() {
          document.removeEventListener("copy", _classPrivateFieldGet(this, _W));
          document.removeEventListener("cut", _classPrivateFieldGet(this, _H));
          document.removeEventListener("paste", _classPrivateFieldGet(this, _G));
        }
        function _it2(t) {
          var _this23 = this;
          Object.entries(t).some(function (_ref30) {
            var _ref31 = _slicedToArray(_ref30, 2),
              t = _ref31[0],
              e = _ref31[1];
            return _classPrivateFieldGet(_this23, _K)[t] !== e;
          }) && _classPrivateFieldGet(this, _N).dispatch("annotationeditorstateschanged", {
            source: this,
            details: Object.assign(_classPrivateFieldGet(this, _K), t)
          });
        }
        function _at2(t) {
          _classPrivateFieldGet(this, _N).dispatch("annotationeditorparamschanged", {
            source: this,
            details: t
          });
        }
        function _lt2() {
          if (!_classPrivateFieldGet(this, _U)) {
            _classPrivateFieldSet(this, _U, !0);
            var _iterator38 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _R).values()),
              _step38;
            try {
              for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {
                var _t32 = _step38.value;
                _t32.enable();
              }
            } catch (err) {
              _iterator38.e(err);
            } finally {
              _iterator38.f();
            }
          }
        }
        function _ot2() {
          this.unselectAll();
          if (_classPrivateFieldGet(this, _U)) {
            _classPrivateFieldSet(this, _U, !1);
            var _iterator39 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _R).values()),
              _step39;
            try {
              for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {
                var _t33 = _step39.value;
                _t33.disable();
              }
            } catch (err) {
              _iterator39.e(err);
            } finally {
              _iterator39.f();
            }
          }
        }
        function _st2(t) {
          var e = _classPrivateFieldGet(this, _R).get(t.pageIndex);
          e ? e.addOrRebuild(t) : this.addEditor(t);
        }
        function _rt2() {
          if (0 === _classPrivateFieldGet(this, _F).size) return !0;
          if (1 === _classPrivateFieldGet(this, _F).size) {
            var _iterator40 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _F).values()),
              _step40;
            try {
              for (_iterator40.s(); !(_step40 = _iterator40.n()).done;) {
                var _t34 = _step40.value;
                return _t34.isEmpty();
              }
            } catch (err) {
              _iterator40.e(err);
            } finally {
              _iterator40.f();
            }
          }
          return !1;
        }
        function _nt2(t) {
          _classPrivateFieldGet(this, _q).clear();
          var _iterator41 = _createForOfIteratorHelper(t),
            _step41;
          try {
            for (_iterator41.s(); !(_step41 = _iterator41.n()).done;) {
              var _e24 = _step41.value;
              if (!_e24.isEmpty()) {
                _classPrivateFieldGet(this, _q).add(_e24);
                _e24.select();
              }
            }
          } catch (err) {
            _iterator41.e(err);
          } finally {
            _iterator41.f();
          }
          _classPrivateMethodGet(this, _it, _it2).call(this, {
            hasSelectedEditor: !0
          });
        }
        _defineProperty(AnnotationEditorUIManager, "_keyboardManager", new KeyboardManager([[["ctrl+a", "mac+meta+a"], AnnotationEditorUIManager.prototype.selectAll], [["ctrl+z", "mac+meta+z"], AnnotationEditorUIManager.prototype.undo], [["ctrl+y", "ctrl+shift+Z", "mac+meta+shift+Z"], AnnotationEditorUIManager.prototype.redo], [["Backspace", "alt+Backspace", "ctrl+Backspace", "shift+Backspace", "mac+Backspace", "mac+alt+Backspace", "mac+ctrl+Backspace", "Delete", "ctrl+Delete", "shift+Delete"], AnnotationEditorUIManager.prototype["delete"]], [["Escape", "mac+Escape"], AnnotationEditorUIManager.prototype.unselectAll]]));
        e.AnnotationEditorUIManager = AnnotationEditorUIManager;
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.StatTimer = e.RenderingCancelledException = e.PixelsPerInch = e.PageViewport = e.PDFDateString = e.DOMStandardFontDataFactory = e.DOMSVGFactory = e.DOMCanvasFactory = e.DOMCMapReaderFactory = e.AnnotationPrefix = void 0;
        e.deprecated = function deprecated(t) {
          console.log("Deprecated API usage: " + t);
        };
        e.getColorValues = function getColorValues(t) {
          var e = document.createElement("span");
          e.style.visibility = "hidden";
          document.body.append(e);
          var _iterator42 = _createForOfIteratorHelper(t.keys()),
            _step42;
          try {
            for (_iterator42.s(); !(_step42 = _iterator42.n()).done;) {
              var _s24 = _step42.value;
              e.style.color = _s24;
              var _n15 = window.getComputedStyle(e).color;
              t.set(_s24, getRGB(_n15));
            }
          } catch (err) {
            _iterator42.e(err);
          } finally {
            _iterator42.f();
          }
          e.remove();
        };
        e.getCurrentTransform = function getCurrentTransform(t) {
          var _t$getTransform = t.getTransform(),
            e = _t$getTransform.a,
            s = _t$getTransform.b,
            n = _t$getTransform.c,
            i = _t$getTransform.d,
            a = _t$getTransform.e,
            r = _t$getTransform.f;
          return [e, s, n, i, a, r];
        };
        e.getCurrentTransformInverse = function getCurrentTransformInverse(t) {
          var _t$getTransform$inver = t.getTransform().invertSelf(),
            e = _t$getTransform$inver.a,
            s = _t$getTransform$inver.b,
            n = _t$getTransform$inver.c,
            i = _t$getTransform$inver.d,
            a = _t$getTransform$inver.e,
            r = _t$getTransform$inver.f;
          return [e, s, n, i, a, r];
        };
        e.getFilenameFromUrl = function getFilenameFromUrl(t) {
          var _t$split, _t$split2;
          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
          e || (_t$split = t.split(/[#?]/, 1), _t$split2 = _slicedToArray(_t$split, 1), t = _t$split2[0], _t$split);
          return t.substring(t.lastIndexOf("/") + 1);
        };
        e.getPdfFilenameFromUrl = function getPdfFilenameFromUrl(t) {
          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "document.pdf";
          if ("string" != typeof t) return e;
          if (isDataScheme(t)) {
            (0, i.warn)('getPdfFilenameFromUrl: ignore "data:"-URL for performance reasons.');
            return e;
          }
          var s = /[^/?#=]+\.pdf\b(?!.*\.pdf\b)/i,
            n = /^(?:(?:[^:]+:)?\/\/[^/]+)?([^?#]*)(\?[^#]*)?(#.*)?$/.exec(t);
          var a = s.exec(n[1]) || s.exec(n[2]) || s.exec(n[3]);
          if (a) {
            a = a[0];
            if (a.includes("%")) try {
              a = s.exec(decodeURIComponent(a))[0];
            } catch (t) {}
          }
          return a || e;
        };
        e.getRGB = getRGB;
        e.getXfaPageViewport = function getXfaPageViewport(t, _ref32) {
          var _ref32$scale = _ref32.scale,
            e = _ref32$scale === void 0 ? 1 : _ref32$scale,
            _ref32$rotation = _ref32.rotation,
            s = _ref32$rotation === void 0 ? 0 : _ref32$rotation;
          var _t$attributes$style = t.attributes.style,
            n = _t$attributes$style.width,
            i = _t$attributes$style.height,
            a = [0, 0, parseInt(n), parseInt(i)];
          return new PageViewport({
            viewBox: a,
            scale: e,
            rotation: s
          });
        };
        e.isDataScheme = isDataScheme;
        e.isPdfFile = function isPdfFile(t) {
          return "string" == typeof t && /\.pdf$/i.test(t);
        };
        e.isValidFetchUrl = isValidFetchUrl;
        e.loadScript = function loadScript(t) {
          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
          return new Promise(function (s, n) {
            var i = document.createElement("script");
            i.src = t;
            i.onload = function (t) {
              e && i.remove();
              s(t);
            };
            i.onerror = function () {
              n(new Error("Cannot load script at: ".concat(i.src)));
            };
            (document.head || document.documentElement).append(i);
          });
        };
        e.setLayerDimensions = function setLayerDimensions(t, e) {
          var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
          var n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !0;
          if (e instanceof PageViewport) {
            var _e$rawDims = e.rawDims,
              _n16 = _e$rawDims.pageWidth,
              _i14 = _e$rawDims.pageHeight,
              _a5 = t.style,
              r = "calc(var(--scale-factor) * ".concat(_n16, "px)"),
              o = "calc(var(--scale-factor) * ".concat(_i14, "px)");
            if (s && e.rotation % 180 != 0) {
              _a5.width = o;
              _a5.height = r;
            } else {
              _a5.width = r;
              _a5.height = o;
            }
          }
          n && t.setAttribute("data-main-rotation", e.rotation);
        };
        var n = s(7),
          i = s(1);
        e.AnnotationPrefix = "pdfjs_internal_id_";
        var PixelsPerInch = /*#__PURE__*/_createClass(function PixelsPerInch() {
          _classCallCheck(this, PixelsPerInch);
        });
        _defineProperty(PixelsPerInch, "CSS", 96);
        _defineProperty(PixelsPerInch, "PDF", 72);
        _defineProperty(PixelsPerInch, "PDF_TO_CSS_UNITS", PixelsPerInch.CSS / PixelsPerInch.PDF);
        e.PixelsPerInch = PixelsPerInch;
        var DOMCanvasFactory = /*#__PURE__*/function (_n$BaseCanvasFactory) {
          _inherits(DOMCanvasFactory, _n$BaseCanvasFactory);
          var _super9 = _createSuper(DOMCanvasFactory);
          function DOMCanvasFactory() {
            var _this24;
            var _ref33 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
              _ref33$ownerDocument = _ref33.ownerDocument,
              t = _ref33$ownerDocument === void 0 ? globalThis.document : _ref33$ownerDocument;
            _classCallCheck(this, DOMCanvasFactory);
            _this24 = _super9.call(this);
            _this24._document = t;
            return _this24;
          }
          _createClass(DOMCanvasFactory, [{
            key: "_createCanvas",
            value: function _createCanvas(t, e) {
              var s = this._document.createElement("canvas");
              s.width = t;
              s.height = e;
              return s;
            }
          }]);
          return DOMCanvasFactory;
        }(n.BaseCanvasFactory);
        e.DOMCanvasFactory = DOMCanvasFactory;
        function fetchData(_x7) {
          return _fetchData.apply(this, arguments);
        }
        function _fetchData() {
          _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(t) {
            var e,
              _s27,
              _args7 = arguments;
            return _regeneratorRuntime().wrap(function _callee7$(_context7) {
              while (1) switch (_context7.prev = _context7.next) {
                case 0:
                  e = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : !1;
                  if (!isValidFetchUrl(t, document.baseURI)) {
                    _context7.next = 21;
                    break;
                  }
                  _context7.next = 4;
                  return fetch(t);
                case 4:
                  _s27 = _context7.sent;
                  if (_s27.ok) {
                    _context7.next = 7;
                    break;
                  }
                  throw new Error(_s27.statusText);
                case 7:
                  if (!e) {
                    _context7.next = 15;
                    break;
                  }
                  _context7.t1 = Uint8Array;
                  _context7.next = 11;
                  return _s27.arrayBuffer();
                case 11:
                  _context7.t2 = _context7.sent;
                  _context7.t0 = new _context7.t1(_context7.t2);
                  _context7.next = 20;
                  break;
                case 15:
                  _context7.t3 = (0, i.stringToBytes);
                  _context7.next = 18;
                  return _s27.text();
                case 18:
                  _context7.t4 = _context7.sent;
                  _context7.t0 = (0, _context7.t3)(_context7.t4);
                case 20:
                  return _context7.abrupt("return", _context7.t0);
                case 21:
                  return _context7.abrupt("return", new Promise(function (s, n) {
                    var a = new XMLHttpRequest();
                    a.open("GET", t, !0);
                    e && (a.responseType = "arraybuffer");
                    a.onreadystatechange = function () {
                      if (a.readyState === XMLHttpRequest.DONE) {
                        if (200 === a.status || 0 === a.status) {
                          var _t36;
                          e && a.response ? _t36 = new Uint8Array(a.response) : !e && a.responseText && (_t36 = (0, i.stringToBytes)(a.responseText));
                          if (_t36) {
                            s(_t36);
                            return;
                          }
                        }
                        n(new Error(a.statusText));
                      }
                    };
                    a.send(null);
                  }));
                case 22:
                case "end":
                  return _context7.stop();
              }
            }, _callee7);
          }));
          return _fetchData.apply(this, arguments);
        }
        var DOMCMapReaderFactory = /*#__PURE__*/function (_n$BaseCMapReaderFact) {
          _inherits(DOMCMapReaderFactory, _n$BaseCMapReaderFact);
          var _super10 = _createSuper(DOMCMapReaderFactory);
          function DOMCMapReaderFactory() {
            _classCallCheck(this, DOMCMapReaderFactory);
            return _super10.apply(this, arguments);
          }
          _createClass(DOMCMapReaderFactory, [{
            key: "_fetchData",
            value: function _fetchData(t, e) {
              return fetchData(t, this.isCompressed).then(function (t) {
                return {
                  cMapData: t,
                  compressionType: e
                };
              });
            }
          }]);
          return DOMCMapReaderFactory;
        }(n.BaseCMapReaderFactory);
        e.DOMCMapReaderFactory = DOMCMapReaderFactory;
        var DOMStandardFontDataFactory = /*#__PURE__*/function (_n$BaseStandardFontDa) {
          _inherits(DOMStandardFontDataFactory, _n$BaseStandardFontDa);
          var _super11 = _createSuper(DOMStandardFontDataFactory);
          function DOMStandardFontDataFactory() {
            _classCallCheck(this, DOMStandardFontDataFactory);
            return _super11.apply(this, arguments);
          }
          _createClass(DOMStandardFontDataFactory, [{
            key: "_fetchData",
            value: function _fetchData(t) {
              return fetchData(t, !0);
            }
          }]);
          return DOMStandardFontDataFactory;
        }(n.BaseStandardFontDataFactory);
        e.DOMStandardFontDataFactory = DOMStandardFontDataFactory;
        var DOMSVGFactory = /*#__PURE__*/function (_n$BaseSVGFactory) {
          _inherits(DOMSVGFactory, _n$BaseSVGFactory);
          var _super12 = _createSuper(DOMSVGFactory);
          function DOMSVGFactory() {
            _classCallCheck(this, DOMSVGFactory);
            return _super12.apply(this, arguments);
          }
          _createClass(DOMSVGFactory, [{
            key: "_createSVG",
            value: function _createSVG(t) {
              return document.createElementNS("http://www.w3.org/2000/svg", t);
            }
          }]);
          return DOMSVGFactory;
        }(n.BaseSVGFactory);
        e.DOMSVGFactory = DOMSVGFactory;
        var PageViewport = /*#__PURE__*/function () {
          function PageViewport(_ref34) {
            var t = _ref34.viewBox,
              e = _ref34.scale,
              s = _ref34.rotation,
              _ref34$offsetX = _ref34.offsetX,
              n = _ref34$offsetX === void 0 ? 0 : _ref34$offsetX,
              _ref34$offsetY = _ref34.offsetY,
              i = _ref34$offsetY === void 0 ? 0 : _ref34$offsetY,
              _ref34$dontFlip = _ref34.dontFlip,
              a = _ref34$dontFlip === void 0 ? !1 : _ref34$dontFlip;
            _classCallCheck(this, PageViewport);
            this.viewBox = t;
            this.scale = e;
            this.rotation = s;
            this.offsetX = n;
            this.offsetY = i;
            var r = (t[2] + t[0]) / 2,
              o = (t[3] + t[1]) / 2;
            var l, c, h, d, u, p, g, m;
            (s %= 360) < 0 && (s += 360);
            switch (s) {
              case 180:
                l = -1;
                c = 0;
                h = 0;
                d = 1;
                break;
              case 90:
                l = 0;
                c = 1;
                h = 1;
                d = 0;
                break;
              case 270:
                l = 0;
                c = -1;
                h = -1;
                d = 0;
                break;
              case 0:
                l = 1;
                c = 0;
                h = 0;
                d = -1;
                break;
              default:
                throw new Error("PageViewport: Invalid rotation, must be a multiple of 90 degrees.");
            }
            if (a) {
              h = -h;
              d = -d;
            }
            if (0 === l) {
              u = Math.abs(o - t[1]) * e + n;
              p = Math.abs(r - t[0]) * e + i;
              g = (t[3] - t[1]) * e;
              m = (t[2] - t[0]) * e;
            } else {
              u = Math.abs(r - t[0]) * e + n;
              p = Math.abs(o - t[1]) * e + i;
              g = (t[2] - t[0]) * e;
              m = (t[3] - t[1]) * e;
            }
            this.transform = [l * e, c * e, h * e, d * e, u - l * e * r - h * e * o, p - c * e * r - d * e * o];
            this.width = g;
            this.height = m;
          }
          _createClass(PageViewport, [{
            key: "rawDims",
            get: function get() {
              var t = this.viewBox;
              return (0, i.shadow)(this, "rawDims", {
                pageWidth: t[2] - t[0],
                pageHeight: t[3] - t[1],
                pageX: t[0],
                pageY: t[1]
              });
            }
          }, {
            key: "clone",
            value: function clone() {
              var _ref35 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                _ref35$scale = _ref35.scale,
                t = _ref35$scale === void 0 ? this.scale : _ref35$scale,
                _ref35$rotation = _ref35.rotation,
                e = _ref35$rotation === void 0 ? this.rotation : _ref35$rotation,
                _ref35$offsetX = _ref35.offsetX,
                s = _ref35$offsetX === void 0 ? this.offsetX : _ref35$offsetX,
                _ref35$offsetY = _ref35.offsetY,
                n = _ref35$offsetY === void 0 ? this.offsetY : _ref35$offsetY,
                _ref35$dontFlip = _ref35.dontFlip,
                i = _ref35$dontFlip === void 0 ? !1 : _ref35$dontFlip;
              return new PageViewport({
                viewBox: this.viewBox.slice(),
                scale: t,
                rotation: e,
                offsetX: s,
                offsetY: n,
                dontFlip: i
              });
            }
          }, {
            key: "convertToViewportPoint",
            value: function convertToViewportPoint(t, e) {
              return i.Util.applyTransform([t, e], this.transform);
            }
          }, {
            key: "convertToViewportRectangle",
            value: function convertToViewportRectangle(t) {
              var e = i.Util.applyTransform([t[0], t[1]], this.transform),
                s = i.Util.applyTransform([t[2], t[3]], this.transform);
              return [e[0], e[1], s[0], s[1]];
            }
          }, {
            key: "convertToPdfPoint",
            value: function convertToPdfPoint(t, e) {
              return i.Util.applyInverseTransform([t, e], this.transform);
            }
          }]);
          return PageViewport;
        }();
        e.PageViewport = PageViewport;
        var RenderingCancelledException = /*#__PURE__*/function (_i$BaseException) {
          _inherits(RenderingCancelledException, _i$BaseException);
          var _super13 = _createSuper(RenderingCancelledException);
          function RenderingCancelledException(t, e) {
            var _this25;
            var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
            _classCallCheck(this, RenderingCancelledException);
            _this25 = _super13.call(this, t, "RenderingCancelledException");
            _this25.type = e;
            _this25.extraDelay = s;
            return _this25;
          }
          return _createClass(RenderingCancelledException);
        }(i.BaseException);
        e.RenderingCancelledException = RenderingCancelledException;
        function isDataScheme(t) {
          var e = t.length;
          var s = 0;
          for (; s < e && "" === t[s].trim();) s++;
          return "data:" === t.substring(s, s + 5).toLowerCase();
        }
        e.StatTimer = /*#__PURE__*/function () {
          function StatTimer() {
            _classCallCheck(this, StatTimer);
            _defineProperty(this, "started", Object.create(null));
            _defineProperty(this, "times", []);
          }
          _createClass(StatTimer, [{
            key: "time",
            value: function time(t) {
              t in this.started && (0, i.warn)("Timer is already running for ".concat(t));
              this.started[t] = Date.now();
            }
          }, {
            key: "timeEnd",
            value: function timeEnd(t) {
              t in this.started || (0, i.warn)("Timer has not been started for ".concat(t));
              this.times.push({
                name: t,
                start: this.started[t],
                end: Date.now()
              });
              delete this.started[t];
            }
          }, {
            key: "toString",
            value: function toString() {
              var t = [];
              var e = 0;
              var _iterator43 = _createForOfIteratorHelper(this.times),
                _step43;
              try {
                for (_iterator43.s(); !(_step43 = _iterator43.n()).done;) {
                  var _t35 = _step43.value.name;
                  e = Math.max(_t35.length, e);
                }
              } catch (err) {
                _iterator43.e(err);
              } finally {
                _iterator43.f();
              }
              var _iterator44 = _createForOfIteratorHelper(this.times),
                _step44;
              try {
                for (_iterator44.s(); !(_step44 = _iterator44.n()).done;) {
                  var _step44$value = _step44.value,
                    _s25 = _step44$value.name,
                    _n17 = _step44$value.start,
                    _i15 = _step44$value.end;
                  t.push("".concat(_s25.padEnd(e), " ").concat(_i15 - _n17, "ms\n"));
                }
              } catch (err) {
                _iterator44.e(err);
              } finally {
                _iterator44.f();
              }
              return t.join("");
            }
          }]);
          return StatTimer;
        }();
        function isValidFetchUrl(t, e) {
          try {
            var _ref36 = e ? new URL(t, e) : new URL(t),
              _s26 = _ref36.protocol;
            return "http:" === _s26 || "https:" === _s26;
          } catch (t) {
            return !1;
          }
        }
        var a;
        e.PDFDateString = /*#__PURE__*/function () {
          function PDFDateString() {
            _classCallCheck(this, PDFDateString);
          }
          _createClass(PDFDateString, null, [{
            key: "toDateObject",
            value: function toDateObject(t) {
              if (!t || "string" != typeof t) return null;
              a || (a = new RegExp("^D:(\\d{4})(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?([Z|+|-])?(\\d{2})?'?(\\d{2})?'?"));
              var e = a.exec(t);
              if (!e) return null;
              var s = parseInt(e[1], 10);
              var n = parseInt(e[2], 10);
              n = n >= 1 && n <= 12 ? n - 1 : 0;
              var i = parseInt(e[3], 10);
              i = i >= 1 && i <= 31 ? i : 1;
              var r = parseInt(e[4], 10);
              r = r >= 0 && r <= 23 ? r : 0;
              var o = parseInt(e[5], 10);
              o = o >= 0 && o <= 59 ? o : 0;
              var l = parseInt(e[6], 10);
              l = l >= 0 && l <= 59 ? l : 0;
              var c = e[7] || "Z";
              var h = parseInt(e[8], 10);
              h = h >= 0 && h <= 23 ? h : 0;
              var d = parseInt(e[9], 10) || 0;
              d = d >= 0 && d <= 59 ? d : 0;
              if ("-" === c) {
                r += h;
                o += d;
              } else if ("+" === c) {
                r -= h;
                o -= d;
              }
              return new Date(Date.UTC(s, n, i, r, o, l));
            }
          }]);
          return PDFDateString;
        }();
        function getRGB(t) {
          if (t.startsWith("#")) {
            var _e25 = parseInt(t.slice(1), 16);
            return [(16711680 & _e25) >> 16, (65280 & _e25) >> 8, 255 & _e25];
          }
          if (t.startsWith("rgb(")) return t.slice(4, -1).split(",").map(function (t) {
            return parseInt(t);
          });
          if (t.startsWith("rgba(")) return t.slice(5, -1).split(",").map(function (t) {
            return parseInt(t);
          }).slice(0, 3);
          (0, i.warn)("Not a valid color format: \"".concat(t, "\""));
          return [0, 0, 0];
        }
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.BaseStandardFontDataFactory = e.BaseSVGFactory = e.BaseCanvasFactory = e.BaseCMapReaderFactory = void 0;
        var n = s(1);
        var BaseCanvasFactory = /*#__PURE__*/function () {
          function BaseCanvasFactory() {
            _classCallCheck(this, BaseCanvasFactory);
            this.constructor === BaseCanvasFactory && (0, n.unreachable)("Cannot initialize BaseCanvasFactory.");
          }
          _createClass(BaseCanvasFactory, [{
            key: "create",
            value: function create(t, e) {
              if (t <= 0 || e <= 0) throw new Error("Invalid canvas size");
              var s = this._createCanvas(t, e);
              return {
                canvas: s,
                context: s.getContext("2d")
              };
            }
          }, {
            key: "reset",
            value: function reset(t, e, s) {
              if (!t.canvas) throw new Error("Canvas is not specified");
              if (e <= 0 || s <= 0) throw new Error("Invalid canvas size");
              t.canvas.width = e;
              t.canvas.height = s;
            }
          }, {
            key: "destroy",
            value: function destroy(t) {
              if (!t.canvas) throw new Error("Canvas is not specified");
              t.canvas.width = 0;
              t.canvas.height = 0;
              t.canvas = null;
              t.context = null;
            }
          }, {
            key: "_createCanvas",
            value: function _createCanvas(t, e) {
              (0, n.unreachable)("Abstract method `_createCanvas` called.");
            }
          }]);
          return BaseCanvasFactory;
        }();
        e.BaseCanvasFactory = BaseCanvasFactory;
        var BaseCMapReaderFactory = /*#__PURE__*/function () {
          function BaseCMapReaderFactory(_ref37) {
            var _ref37$baseUrl = _ref37.baseUrl,
              t = _ref37$baseUrl === void 0 ? null : _ref37$baseUrl,
              _ref37$isCompressed = _ref37.isCompressed,
              e = _ref37$isCompressed === void 0 ? !1 : _ref37$isCompressed;
            _classCallCheck(this, BaseCMapReaderFactory);
            this.constructor === BaseCMapReaderFactory && (0, n.unreachable)("Cannot initialize BaseCMapReaderFactory.");
            this.baseUrl = t;
            this.isCompressed = e;
          }
          _createClass(BaseCMapReaderFactory, [{
            key: "fetch",
            value: function () {
              var _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(_ref38) {
                var _this26 = this;
                var t, e, s;
                return _regeneratorRuntime().wrap(function _callee8$(_context8) {
                  while (1) switch (_context8.prev = _context8.next) {
                    case 0:
                      t = _ref38.name;
                      if (this.baseUrl) {
                        _context8.next = 3;
                        break;
                      }
                      throw new Error('The CMap "baseUrl" parameter must be specified, ensure that the "cMapUrl" and "cMapPacked" API parameters are provided.');
                    case 3:
                      if (t) {
                        _context8.next = 5;
                        break;
                      }
                      throw new Error("CMap name must be specified.");
                    case 5:
                      e = this.baseUrl + t + (this.isCompressed ? ".bcmap" : ""), s = this.isCompressed ? n.CMapCompressionType.BINARY : n.CMapCompressionType.NONE;
                      return _context8.abrupt("return", this._fetchData(e, s)["catch"](function (t) {
                        throw new Error("Unable to load ".concat(_this26.isCompressed ? "binary " : "", "CMap at: ").concat(e));
                      }));
                    case 7:
                    case "end":
                      return _context8.stop();
                  }
                }, _callee8, this);
              }));
              function fetch(_x8) {
                return _fetch.apply(this, arguments);
              }
              return fetch;
            }()
          }, {
            key: "_fetchData",
            value: function _fetchData(t, e) {
              (0, n.unreachable)("Abstract method `_fetchData` called.");
            }
          }]);
          return BaseCMapReaderFactory;
        }();
        e.BaseCMapReaderFactory = BaseCMapReaderFactory;
        var BaseStandardFontDataFactory = /*#__PURE__*/function () {
          function BaseStandardFontDataFactory(_ref39) {
            var _ref39$baseUrl = _ref39.baseUrl,
              t = _ref39$baseUrl === void 0 ? null : _ref39$baseUrl;
            _classCallCheck(this, BaseStandardFontDataFactory);
            this.constructor === BaseStandardFontDataFactory && (0, n.unreachable)("Cannot initialize BaseStandardFontDataFactory.");
            this.baseUrl = t;
          }
          _createClass(BaseStandardFontDataFactory, [{
            key: "fetch",
            value: function () {
              var _fetch2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(_ref40) {
                var t, e;
                return _regeneratorRuntime().wrap(function _callee9$(_context9) {
                  while (1) switch (_context9.prev = _context9.next) {
                    case 0:
                      t = _ref40.filename;
                      if (this.baseUrl) {
                        _context9.next = 3;
                        break;
                      }
                      throw new Error('The standard font "baseUrl" parameter must be specified, ensure that the "standardFontDataUrl" API parameter is provided.');
                    case 3:
                      if (t) {
                        _context9.next = 5;
                        break;
                      }
                      throw new Error("Font filename must be specified.");
                    case 5:
                      e = "".concat(this.baseUrl).concat(t);
                      return _context9.abrupt("return", this._fetchData(e)["catch"](function (t) {
                        throw new Error("Unable to load font data at: ".concat(e));
                      }));
                    case 7:
                    case "end":
                      return _context9.stop();
                  }
                }, _callee9, this);
              }));
              function fetch(_x9) {
                return _fetch2.apply(this, arguments);
              }
              return fetch;
            }()
          }, {
            key: "_fetchData",
            value: function _fetchData(t) {
              (0, n.unreachable)("Abstract method `_fetchData` called.");
            }
          }]);
          return BaseStandardFontDataFactory;
        }();
        e.BaseStandardFontDataFactory = BaseStandardFontDataFactory;
        var BaseSVGFactory = /*#__PURE__*/function () {
          function BaseSVGFactory() {
            _classCallCheck(this, BaseSVGFactory);
            this.constructor === BaseSVGFactory && (0, n.unreachable)("Cannot initialize BaseSVGFactory.");
          }
          _createClass(BaseSVGFactory, [{
            key: "create",
            value: function create(t, e) {
              var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
              if (t <= 0 || e <= 0) throw new Error("Invalid SVG dimensions");
              var n = this._createSVG("svg:svg");
              n.setAttribute("version", "1.1");
              if (!s) {
                n.setAttribute("width", "".concat(t, "px"));
                n.setAttribute("height", "".concat(e, "px"));
              }
              n.setAttribute("preserveAspectRatio", "none");
              n.setAttribute("viewBox", "0 0 ".concat(t, " ").concat(e));
              return n;
            }
          }, {
            key: "createElement",
            value: function createElement(t) {
              if ("string" != typeof t) throw new Error("Invalid SVG element type");
              return this._createSVG(t);
            }
          }, {
            key: "_createSVG",
            value: function _createSVG(t) {
              (0, n.unreachable)("Abstract method `_createSVG` called.");
            }
          }]);
          return BaseSVGFactory;
        }();
        e.BaseSVGFactory = BaseSVGFactory;
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.MurmurHash3_64 = void 0;
        var n = s(1);
        var i = 3285377520,
          a = 4294901760,
          r = 65535;
        e.MurmurHash3_64 = /*#__PURE__*/function () {
          function MurmurHash3_64(t) {
            _classCallCheck(this, MurmurHash3_64);
            this.h1 = t ? 4294967295 & t : i;
            this.h2 = t ? 4294967295 & t : i;
          }
          _createClass(MurmurHash3_64, [{
            key: "update",
            value: function update(t) {
              var e, s;
              if ("string" == typeof t) {
                e = new Uint8Array(2 * t.length);
                s = 0;
                for (var _n18 = 0, _i16 = t.length; _n18 < _i16; _n18++) {
                  var _i17 = t.charCodeAt(_n18);
                  if (_i17 <= 255) e[s++] = _i17;else {
                    e[s++] = _i17 >>> 8;
                    e[s++] = 255 & _i17;
                  }
                }
              } else {
                if (!(0, n.isArrayBuffer)(t)) throw new Error("Wrong data format in MurmurHash3_64_update. Input must be a string or array.");
                e = t.slice();
                s = e.byteLength;
              }
              var i = s >> 2,
                o = s - 4 * i,
                l = new Uint32Array(e.buffer, 0, i);
              var c = 0,
                h = 0,
                d = this.h1,
                u = this.h2;
              var p = 3432918353,
                g = 461845907,
                m = 11601,
                f = 13715;
              for (var _t37 = 0; _t37 < i; _t37++) if (1 & _t37) {
                c = l[_t37];
                c = c * p & a | c * m & r;
                c = c << 15 | c >>> 17;
                c = c * g & a | c * f & r;
                d ^= c;
                d = d << 13 | d >>> 19;
                d = 5 * d + 3864292196;
              } else {
                h = l[_t37];
                h = h * p & a | h * m & r;
                h = h << 15 | h >>> 17;
                h = h * g & a | h * f & r;
                u ^= h;
                u = u << 13 | u >>> 19;
                u = 5 * u + 3864292196;
              }
              c = 0;
              switch (o) {
                case 3:
                  c ^= e[4 * i + 2] << 16;
                case 2:
                  c ^= e[4 * i + 1] << 8;
                case 1:
                  c ^= e[4 * i];
                  c = c * p & a | c * m & r;
                  c = c << 15 | c >>> 17;
                  c = c * g & a | c * f & r;
                  1 & i ? d ^= c : u ^= c;
              }
              this.h1 = d;
              this.h2 = u;
            }
          }, {
            key: "hexdigest",
            value: function hexdigest() {
              var t = this.h1,
                e = this.h2;
              t ^= e >>> 1;
              t = 3981806797 * t & a | 36045 * t & r;
              e = 4283543511 * e & a | (2950163797 * (e << 16 | t >>> 16) & a) >>> 16;
              t ^= e >>> 1;
              t = 444984403 * t & a | 60499 * t & r;
              e = 3301882366 * e & a | (3120437893 * (e << 16 | t >>> 16) & a) >>> 16;
              t ^= e >>> 1;
              return (t >>> 0).toString(16).padStart(8, "0") + (e >>> 0).toString(16).padStart(8, "0");
            }
          }]);
          return MurmurHash3_64;
        }();
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.FontLoader = e.FontFaceObject = void 0;
        var n = s(1),
          i = s(10);
        e.FontLoader = /*#__PURE__*/function () {
          function FontLoader(_ref41) {
            var t = _ref41.onUnsupportedFeature,
              _ref41$ownerDocument = _ref41.ownerDocument,
              e = _ref41$ownerDocument === void 0 ? globalThis.document : _ref41$ownerDocument,
              _ref41$styleElement = _ref41.styleElement,
              s = _ref41$styleElement === void 0 ? null : _ref41$styleElement;
            _classCallCheck(this, FontLoader);
            this._onUnsupportedFeature = t;
            this._document = e;
            this.nativeFontFaces = [];
            this.styleElement = null;
            this.loadingRequests = [];
            this.loadTestFontId = 0;
          }
          _createClass(FontLoader, [{
            key: "addNativeFontFace",
            value: function addNativeFontFace(t) {
              this.nativeFontFaces.push(t);
              this._document.fonts.add(t);
            }
          }, {
            key: "insertRule",
            value: function insertRule(t) {
              if (!this.styleElement) {
                this.styleElement = this._document.createElement("style");
                this._document.documentElement.getElementsByTagName("head")[0].append(this.styleElement);
              }
              var e = this.styleElement.sheet;
              e.insertRule(t, e.cssRules.length);
            }
          }, {
            key: "clear",
            value: function clear() {
              var _iterator45 = _createForOfIteratorHelper(this.nativeFontFaces),
                _step45;
              try {
                for (_iterator45.s(); !(_step45 = _iterator45.n()).done;) {
                  var _t38 = _step45.value;
                  this._document.fonts["delete"](_t38);
                }
              } catch (err) {
                _iterator45.e(err);
              } finally {
                _iterator45.f();
              }
              this.nativeFontFaces.length = 0;
              if (this.styleElement) {
                this.styleElement.remove();
                this.styleElement = null;
              }
            }
          }, {
            key: "bind",
            value: function () {
              var _bind = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(t) {
                var _this27 = this;
                var _e26, e;
                return _regeneratorRuntime().wrap(function _callee10$(_context10) {
                  while (1) switch (_context10.prev = _context10.next) {
                    case 0:
                      if (!(t.attached || t.missingFile)) {
                        _context10.next = 2;
                        break;
                      }
                      return _context10.abrupt("return");
                    case 2:
                      t.attached = !0;
                      if (!this.isFontLoadingAPISupported) {
                        _context10.next = 19;
                        break;
                      }
                      _e26 = t.createNativeFontFace();
                      if (!_e26) {
                        _context10.next = 18;
                        break;
                      }
                      this.addNativeFontFace(_e26);
                      _context10.prev = 7;
                      _context10.next = 10;
                      return _e26.loaded;
                    case 10:
                      _context10.next = 18;
                      break;
                    case 12:
                      _context10.prev = 12;
                      _context10.t0 = _context10["catch"](7);
                      this._onUnsupportedFeature({
                        featureId: n.UNSUPPORTED_FEATURES.errorFontLoadNative
                      });
                      (0, n.warn)("Failed to load font '".concat(_e26.family, "': '").concat(_context10.t0, "'."));
                      t.disableFontFace = !0;
                      throw _context10.t0;
                    case 18:
                      return _context10.abrupt("return");
                    case 19:
                      e = t.createFontFaceRule();
                      if (!e) {
                        _context10.next = 26;
                        break;
                      }
                      this.insertRule(e);
                      if (!this.isSyncFontLoadingSupported) {
                        _context10.next = 24;
                        break;
                      }
                      return _context10.abrupt("return");
                    case 24:
                      _context10.next = 26;
                      return new Promise(function (e) {
                        var s = _this27._queueLoadingCallback(e);
                        _this27._prepareFontLoadEvent(t, s);
                      });
                    case 26:
                    case "end":
                      return _context10.stop();
                  }
                }, _callee10, this, [[7, 12]]);
              }));
              function bind(_x10) {
                return _bind.apply(this, arguments);
              }
              return bind;
            }()
          }, {
            key: "isFontLoadingAPISupported",
            get: function get() {
              var _this$_document;
              var t = !!((_this$_document = this._document) !== null && _this$_document !== void 0 && _this$_document.fonts);
              return (0, n.shadow)(this, "isFontLoadingAPISupported", t);
            }
          }, {
            key: "isSyncFontLoadingSupported",
            get: function get() {
              var t = !1;
              (i.isNodeJS || "undefined" != typeof navigator && /Mozilla\/5.0.*?rv:\d+.*? Gecko/.test(navigator.userAgent)) && (t = !0);
              return (0, n.shadow)(this, "isSyncFontLoadingSupported", t);
            }
          }, {
            key: "_queueLoadingCallback",
            value: function _queueLoadingCallback(t) {
              var e = this.loadingRequests,
                s = {
                  done: !1,
                  complete: function completeRequest() {
                    (0, n.assert)(!s.done, "completeRequest() cannot be called twice.");
                    s.done = !0;
                    for (; e.length > 0 && e[0].done;) {
                      var _t39 = e.shift();
                      setTimeout(_t39.callback, 0);
                    }
                  },
                  callback: t
                };
              e.push(s);
              return s;
            }
          }, {
            key: "_loadTestFont",
            get: function get() {
              var t = atob("T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==");
              return (0, n.shadow)(this, "_loadTestFont", t);
            }
          }, {
            key: "_prepareFontLoadEvent",
            value: function _prepareFontLoadEvent(t, e) {
              function int32(t, e) {
                return t.charCodeAt(e) << 24 | t.charCodeAt(e + 1) << 16 | t.charCodeAt(e + 2) << 8 | 255 & t.charCodeAt(e + 3);
              }
              function spliceString(t, e, s, n) {
                return t.substring(0, e) + n + t.substring(e + s);
              }
              var s, i;
              var a = this._document.createElement("canvas");
              a.width = 1;
              a.height = 1;
              var r = a.getContext("2d");
              var o = 0;
              var l = "lt".concat(Date.now()).concat(this.loadTestFontId++);
              var c = this._loadTestFont;
              c = spliceString(c, 976, l.length, l);
              var h = 1482184792;
              var d = int32(c, 16);
              for (s = 0, i = l.length - 3; s < i; s += 4) d = d - h + int32(l, s) | 0;
              s < l.length && (d = d - h + int32(l + "XXX", s) | 0);
              c = spliceString(c, 16, 4, (0, n.string32)(d));
              var u = "@font-face {font-family:\"".concat(l, "\";src:", "url(data:font/opentype;base64,".concat(btoa(c), ");"), "}");
              this.insertRule(u);
              var p = this._document.createElement("div");
              p.style.visibility = "hidden";
              p.style.width = p.style.height = "10px";
              p.style.position = "absolute";
              p.style.top = p.style.left = "0px";
              for (var _i18 = 0, _arr2 = [t.loadedName, l]; _i18 < _arr2.length; _i18++) {
                var _e27 = _arr2[_i18];
                var _t40 = this._document.createElement("span");
                _t40.textContent = "Hi";
                _t40.style.fontFamily = _e27;
                p.append(_t40);
              }
              this._document.body.append(p);
              !function isFontReady(t, e) {
                if (++o > 30) {
                  (0, n.warn)("Load test font never loaded.");
                  e();
                  return;
                }
                r.font = "30px " + t;
                r.fillText(".", 0, 20);
                r.getImageData(0, 0, 1, 1).data[3] > 0 ? e() : setTimeout(isFontReady.bind(null, t, e));
              }(l, function () {
                p.remove();
                e.complete();
              });
            }
          }]);
          return FontLoader;
        }();
        e.FontFaceObject = /*#__PURE__*/function () {
          function FontFaceObject(t, _ref42) {
            var _ref42$isEvalSupporte = _ref42.isEvalSupported,
              e = _ref42$isEvalSupporte === void 0 ? !0 : _ref42$isEvalSupporte,
              _ref42$disableFontFac = _ref42.disableFontFace,
              s = _ref42$disableFontFac === void 0 ? !1 : _ref42$disableFontFac,
              _ref42$ignoreErrors = _ref42.ignoreErrors,
              n = _ref42$ignoreErrors === void 0 ? !1 : _ref42$ignoreErrors,
              i = _ref42.onUnsupportedFeature,
              _ref42$fontRegistry = _ref42.fontRegistry,
              a = _ref42$fontRegistry === void 0 ? null : _ref42$fontRegistry;
            _classCallCheck(this, FontFaceObject);
            this.compiledGlyphs = Object.create(null);
            for (var _e28 in t) this[_e28] = t[_e28];
            this.isEvalSupported = !1 !== e;
            this.disableFontFace = !0 === s;
            this.ignoreErrors = !0 === n;
            this._onUnsupportedFeature = i;
            this.fontRegistry = a;
          }
          _createClass(FontFaceObject, [{
            key: "createNativeFontFace",
            value: function createNativeFontFace() {
              var _this$fontRegistry;
              if (!this.data || this.disableFontFace) return null;
              var t;
              if (this.cssFontInfo) {
                var _e29 = {
                  weight: this.cssFontInfo.fontWeight
                };
                this.cssFontInfo.italicAngle && (_e29.style = "oblique ".concat(this.cssFontInfo.italicAngle, "deg"));
                t = new FontFace(this.cssFontInfo.fontFamily, this.data, _e29);
              } else t = new FontFace(this.loadedName, this.data, {});
              (_this$fontRegistry = this.fontRegistry) === null || _this$fontRegistry === void 0 ? void 0 : _this$fontRegistry.registerFont(this);
              return t;
            }
          }, {
            key: "createFontFaceRule",
            value: function createFontFaceRule() {
              var _this$fontRegistry2;
              if (!this.data || this.disableFontFace) return null;
              var t = (0, n.bytesToString)(this.data),
                e = "url(data:".concat(this.mimetype, ";base64,").concat(btoa(t), ");");
              var s;
              if (this.cssFontInfo) {
                var _t41 = "font-weight: ".concat(this.cssFontInfo.fontWeight, ";");
                this.cssFontInfo.italicAngle && (_t41 += "font-style: oblique ".concat(this.cssFontInfo.italicAngle, "deg;"));
                s = "@font-face {font-family:\"".concat(this.cssFontInfo.fontFamily, "\";").concat(_t41, "src:").concat(e, "}");
              } else s = "@font-face {font-family:\"".concat(this.loadedName, "\";src:").concat(e, "}");
              (_this$fontRegistry2 = this.fontRegistry) === null || _this$fontRegistry2 === void 0 ? void 0 : _this$fontRegistry2.registerFont(this, e);
              return s;
            }
          }, {
            key: "getPathGenerator",
            value: function getPathGenerator(t, e) {
              if (void 0 !== this.compiledGlyphs[e]) return this.compiledGlyphs[e];
              var s;
              try {
                s = t.get(this.loadedName + "_path_" + e);
              } catch (t) {
                if (!this.ignoreErrors) throw t;
                this._onUnsupportedFeature({
                  featureId: n.UNSUPPORTED_FEATURES.errorFontGetPath
                });
                (0, n.warn)("getPathGenerator - ignoring character: \"".concat(t, "\"."));
                return this.compiledGlyphs[e] = function (t, e) {};
              }
              if (this.isEvalSupported && n.FeatureTest.isEvalSupported) {
                var _t42 = [];
                var _iterator46 = _createForOfIteratorHelper(s),
                  _step46;
                try {
                  for (_iterator46.s(); !(_step46 = _iterator46.n()).done;) {
                    var _e30 = _step46.value;
                    var _s28 = void 0 !== _e30.args ? _e30.args.join(",") : "";
                    _t42.push("c.", _e30.cmd, "(", _s28, ");\n");
                  }
                } catch (err) {
                  _iterator46.e(err);
                } finally {
                  _iterator46.f();
                }
                return this.compiledGlyphs[e] = new Function("c", "size", _t42.join(""));
              }
              return this.compiledGlyphs[e] = function (t, e) {
                var _iterator47 = _createForOfIteratorHelper(s),
                  _step47;
                try {
                  for (_iterator47.s(); !(_step47 = _iterator47.n()).done;) {
                    var _n19 = _step47.value;
                    "scale" === _n19.cmd && (_n19.args = [e, -e]);
                    t[_n19.cmd].apply(t, _n19.args);
                  }
                } catch (err) {
                  _iterator47.e(err);
                } finally {
                  _iterator47.f();
                }
              };
            }
          }]);
          return FontFaceObject;
        }();
      }, function (t, e) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.isNodeJS = void 0;
        var s = !("object" != (typeof process === "undefined" ? "undefined" : _typeof(process)) || process + "" != "[object process]" || process.versions.nw || process.versions.electron && process.type && "browser" !== process.type);
        e.isNodeJS = s;
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.CanvasGraphics = void 0;
        var n = s(1),
          i = s(6),
          a = s(12),
          r = s(13),
          o = s(10);
        var l = 4096,
          c = o.isNodeJS && "undefined" == typeof Path2D ? -1 : 1e3,
          h = 16;
        var CachedCanvases = /*#__PURE__*/function () {
          function CachedCanvases(t) {
            _classCallCheck(this, CachedCanvases);
            this.canvasFactory = t;
            this.cache = Object.create(null);
          }
          _createClass(CachedCanvases, [{
            key: "getCanvas",
            value: function getCanvas(t, e, s) {
              var n;
              if (void 0 !== this.cache[t]) {
                n = this.cache[t];
                this.canvasFactory.reset(n, e, s);
              } else {
                n = this.canvasFactory.create(e, s);
                this.cache[t] = n;
              }
              return n;
            }
          }, {
            key: "delete",
            value: function _delete(t) {
              delete this.cache[t];
            }
          }, {
            key: "clear",
            value: function clear() {
              for (var _t43 in this.cache) {
                var _e31 = this.cache[_t43];
                this.canvasFactory.destroy(_e31);
                delete this.cache[_t43];
              }
            }
          }]);
          return CachedCanvases;
        }();
        function drawImageAtIntegerCoords(t, e, s, n, a, r, o, l, c, h) {
          var _ref43 = (0, i.getCurrentTransform)(t),
            _ref44 = _slicedToArray(_ref43, 6),
            d = _ref44[0],
            u = _ref44[1],
            p = _ref44[2],
            g = _ref44[3],
            m = _ref44[4],
            f = _ref44[5];
          if (0 === u && 0 === p) {
            var _i19 = o * d + m,
              b = Math.round(_i19),
              A = l * g + f,
              _ = Math.round(A),
              y = (o + c) * d + m,
              v = Math.abs(Math.round(y) - b) || 1,
              S = (l + h) * g + f,
              x = Math.abs(Math.round(S) - _) || 1;
            t.setTransform(Math.sign(d), 0, 0, Math.sign(g), b, _);
            t.drawImage(e, s, n, a, r, 0, 0, v, x);
            t.setTransform(d, u, p, g, m, f);
            return [v, x];
          }
          if (0 === d && 0 === g) {
            var _i20 = l * p + m,
              _b2 = Math.round(_i20),
              _A2 = o * u + f,
              _3 = Math.round(_A2),
              _y2 = (l + h) * p + m,
              _v2 = Math.abs(Math.round(_y2) - _b2) || 1,
              _S2 = (o + c) * u + f,
              _x11 = Math.abs(Math.round(_S2) - _3) || 1;
            t.setTransform(0, Math.sign(u), Math.sign(p), 0, _b2, _3);
            t.drawImage(e, s, n, a, r, 0, 0, _x11, _v2);
            t.setTransform(d, u, p, g, m, f);
            return [_x11, _v2];
          }
          t.drawImage(e, s, n, a, r, o, l, c, h);
          return [Math.hypot(d, u) * c, Math.hypot(p, g) * h];
        }
        var CanvasExtraState = /*#__PURE__*/function () {
          function CanvasExtraState(t, e) {
            _classCallCheck(this, CanvasExtraState);
            this.alphaIsShape = !1;
            this.fontSize = 0;
            this.fontSizeScale = 1;
            this.textMatrix = n.IDENTITY_MATRIX;
            this.textMatrixScale = 1;
            this.fontMatrix = n.FONT_IDENTITY_MATRIX;
            this.leading = 0;
            this.x = 0;
            this.y = 0;
            this.lineX = 0;
            this.lineY = 0;
            this.charSpacing = 0;
            this.wordSpacing = 0;
            this.textHScale = 1;
            this.textRenderingMode = n.TextRenderingMode.FILL;
            this.textRise = 0;
            this.fillColor = "#000000";
            this.strokeColor = "#000000";
            this.patternFill = !1;
            this.fillAlpha = 1;
            this.strokeAlpha = 1;
            this.lineWidth = 1;
            this.activeSMask = null;
            this.transferMaps = null;
            this.startNewPathAndClipBox([0, 0, t, e]);
          }
          _createClass(CanvasExtraState, [{
            key: "clone",
            value: function clone() {
              var t = Object.create(this);
              t.clipBox = this.clipBox.slice();
              return t;
            }
          }, {
            key: "setCurrentPoint",
            value: function setCurrentPoint(t, e) {
              this.x = t;
              this.y = e;
            }
          }, {
            key: "updatePathMinMax",
            value: function updatePathMinMax(t, e, s) {
              var _n$Util$applyTransfor = n.Util.applyTransform([e, s], t);
              var _n$Util$applyTransfor2 = _slicedToArray(_n$Util$applyTransfor, 2);
              e = _n$Util$applyTransfor2[0];
              s = _n$Util$applyTransfor2[1];
              this.minX = Math.min(this.minX, e);
              this.minY = Math.min(this.minY, s);
              this.maxX = Math.max(this.maxX, e);
              this.maxY = Math.max(this.maxY, s);
            }
          }, {
            key: "updateRectMinMax",
            value: function updateRectMinMax(t, e) {
              var s = n.Util.applyTransform(e, t),
                i = n.Util.applyTransform(e.slice(2), t);
              this.minX = Math.min(this.minX, s[0], i[0]);
              this.minY = Math.min(this.minY, s[1], i[1]);
              this.maxX = Math.max(this.maxX, s[0], i[0]);
              this.maxY = Math.max(this.maxY, s[1], i[1]);
            }
          }, {
            key: "updateScalingPathMinMax",
            value: function updateScalingPathMinMax(t, e) {
              n.Util.scaleMinMax(t, e);
              this.minX = Math.min(this.minX, e[0]);
              this.maxX = Math.max(this.maxX, e[1]);
              this.minY = Math.min(this.minY, e[2]);
              this.maxY = Math.max(this.maxY, e[3]);
            }
          }, {
            key: "updateCurvePathMinMax",
            value: function updateCurvePathMinMax(t, e, s, i, a, r, o, l, c, h) {
              var d = n.Util.bezierBoundingBox(e, s, i, a, r, o, l, c);
              if (h) {
                h[0] = Math.min(h[0], d[0], d[2]);
                h[1] = Math.max(h[1], d[0], d[2]);
                h[2] = Math.min(h[2], d[1], d[3]);
                h[3] = Math.max(h[3], d[1], d[3]);
              } else this.updateRectMinMax(t, d);
            }
          }, {
            key: "getPathBoundingBox",
            value: function getPathBoundingBox() {
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : a.PathType.FILL;
              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
              var s = [this.minX, this.minY, this.maxX, this.maxY];
              if (t === a.PathType.STROKE) {
                e || (0, n.unreachable)("Stroke bounding box must include transform.");
                var _t44 = n.Util.singularValueDecompose2dScale(e),
                  _i21 = _t44[0] * this.lineWidth / 2,
                  _a6 = _t44[1] * this.lineWidth / 2;
                s[0] -= _i21;
                s[1] -= _a6;
                s[2] += _i21;
                s[3] += _a6;
              }
              return s;
            }
          }, {
            key: "updateClipFromPath",
            value: function updateClipFromPath() {
              var t = n.Util.intersect(this.clipBox, this.getPathBoundingBox());
              this.startNewPathAndClipBox(t || [0, 0, 0, 0]);
            }
          }, {
            key: "isEmptyClip",
            value: function isEmptyClip() {
              return this.minX === 1 / 0;
            }
          }, {
            key: "startNewPathAndClipBox",
            value: function startNewPathAndClipBox(t) {
              this.clipBox = t;
              this.minX = 1 / 0;
              this.minY = 1 / 0;
              this.maxX = 0;
              this.maxY = 0;
            }
          }, {
            key: "getClippedPathBoundingBox",
            value: function getClippedPathBoundingBox() {
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : a.PathType.FILL;
              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
              return n.Util.intersect(this.clipBox, this.getPathBoundingBox(t, e));
            }
          }]);
          return CanvasExtraState;
        }();
        function putBinaryImageData(t, e) {
          var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
          if ("undefined" != typeof ImageData && e instanceof ImageData) {
            t.putImageData(e, 0, 0);
            return;
          }
          var i = e.height,
            a = e.width,
            r = i % h,
            o = (i - r) / h,
            l = 0 === r ? o : o + 1,
            c = t.createImageData(a, h);
          var d,
            u = 0;
          var p = e.data,
            g = c.data;
          var m, f, b, A, _, y, v, S;
          if (s) switch (s.length) {
            case 1:
              _ = s[0];
              y = s[0];
              v = s[0];
              S = s[0];
              break;
            case 4:
              _ = s[0];
              y = s[1];
              v = s[2];
              S = s[3];
          }
          if (e.kind === n.ImageKind.GRAYSCALE_1BPP) {
            var _ref45;
            var _e32 = p.byteLength,
              _s29 = new Uint32Array(g.buffer, 0, g.byteLength >> 2),
              _i22 = _s29.length,
              _A3 = a + 7 >> 3;
            var _4 = 4294967295,
              _y3 = n.FeatureTest.isLittleEndian ? 4278190080 : 255;
            S && 255 === S[0] && 0 === S[255] && (_ref45 = [_y3, _4], _4 = _ref45[0], _y3 = _ref45[1], _ref45);
            for (m = 0; m < l; m++) {
              b = m < o ? h : r;
              d = 0;
              for (f = 0; f < b; f++) {
                var _t45 = _e32 - u;
                var _n20 = 0;
                var _i23 = _t45 > _A3 ? a : 8 * _t45 - 7,
                  _r3 = -8 & _i23;
                var _o2 = 0,
                  _l2 = 0;
                for (; _n20 < _r3; _n20 += 8) {
                  _l2 = p[u++];
                  _s29[d++] = 128 & _l2 ? _4 : _y3;
                  _s29[d++] = 64 & _l2 ? _4 : _y3;
                  _s29[d++] = 32 & _l2 ? _4 : _y3;
                  _s29[d++] = 16 & _l2 ? _4 : _y3;
                  _s29[d++] = 8 & _l2 ? _4 : _y3;
                  _s29[d++] = 4 & _l2 ? _4 : _y3;
                  _s29[d++] = 2 & _l2 ? _4 : _y3;
                  _s29[d++] = 1 & _l2 ? _4 : _y3;
                }
                for (; _n20 < _i23; _n20++) {
                  if (0 === _o2) {
                    _l2 = p[u++];
                    _o2 = 128;
                  }
                  _s29[d++] = _l2 & _o2 ? _4 : _y3;
                  _o2 >>= 1;
                }
              }
              for (; d < _i22;) _s29[d++] = 0;
              t.putImageData(c, 0, m * h);
            }
          } else if (e.kind === n.ImageKind.RGBA_32BPP) {
            var _e33 = !!(_ || y || v);
            f = 0;
            A = a * h * 4;
            for (m = 0; m < o; m++) {
              g.set(p.subarray(u, u + A));
              u += A;
              if (_e33) for (var _t46 = 0; _t46 < A; _t46 += 4) {
                _ && (g[_t46 + 0] = _[g[_t46 + 0]]);
                y && (g[_t46 + 1] = y[g[_t46 + 1]]);
                v && (g[_t46 + 2] = v[g[_t46 + 2]]);
              }
              t.putImageData(c, 0, f);
              f += h;
            }
            if (m < l) {
              A = a * r * 4;
              g.set(p.subarray(u, u + A));
              if (_e33) for (var _t47 = 0; _t47 < A; _t47 += 4) {
                _ && (g[_t47 + 0] = _[g[_t47 + 0]]);
                y && (g[_t47 + 1] = y[g[_t47 + 1]]);
                v && (g[_t47 + 2] = v[g[_t47 + 2]]);
              }
              t.putImageData(c, 0, f);
            }
          } else {
            if (e.kind !== n.ImageKind.RGB_24BPP) throw new Error("bad image kind: ".concat(e.kind));
            {
              var _e34 = !!(_ || y || v);
              b = h;
              A = a * b;
              for (m = 0; m < l; m++) {
                if (m >= o) {
                  b = r;
                  A = a * b;
                }
                d = 0;
                for (f = A; f--;) {
                  g[d++] = p[u++];
                  g[d++] = p[u++];
                  g[d++] = p[u++];
                  g[d++] = 255;
                }
                if (_e34) for (var _t48 = 0; _t48 < d; _t48 += 4) {
                  _ && (g[_t48 + 0] = _[g[_t48 + 0]]);
                  y && (g[_t48 + 1] = y[g[_t48 + 1]]);
                  v && (g[_t48 + 2] = v[g[_t48 + 2]]);
                }
                t.putImageData(c, 0, m * h);
              }
            }
          }
        }
        function putBinaryImageMask(t, e) {
          if (e.bitmap) {
            t.drawImage(e.bitmap, 0, 0);
            return;
          }
          var s = e.height,
            n = e.width,
            i = s % h,
            a = (s - i) / h,
            o = 0 === i ? a : a + 1,
            l = t.createImageData(n, h);
          var c = 0;
          var d = e.data,
            u = l.data;
          for (var _e35 = 0; _e35 < o; _e35++) {
            var _s30 = _e35 < a ? h : i;
            var _ref46 = (0, r.applyMaskImageData)({
              src: d,
              srcPos: c,
              dest: u,
              width: n,
              height: _s30
            });
            c = _ref46.srcPos;
            t.putImageData(l, 0, _e35 * h);
          }
        }
        function copyCtxState(t, e) {
          var s = ["strokeStyle", "fillStyle", "fillRule", "globalAlpha", "lineWidth", "lineCap", "lineJoin", "miterLimit", "globalCompositeOperation", "font"];
          for (var _i24 = 0, _s31 = s; _i24 < _s31.length; _i24++) {
            var _n21 = _s31[_i24];
            void 0 !== t[_n21] && (e[_n21] = t[_n21]);
          }
          if (void 0 !== t.setLineDash) {
            e.setLineDash(t.getLineDash());
            e.lineDashOffset = t.lineDashOffset;
          }
        }
        function resetCtxToDefault(t, e) {
          t.strokeStyle = t.fillStyle = e || "#000000";
          t.fillRule = "nonzero";
          t.globalAlpha = 1;
          t.lineWidth = 1;
          t.lineCap = "butt";
          t.lineJoin = "miter";
          t.miterLimit = 10;
          t.globalCompositeOperation = "source-over";
          t.font = "10px sans-serif";
          if (void 0 !== t.setLineDash) {
            t.setLineDash([]);
            t.lineDashOffset = 0;
          }
        }
        function composeSMaskBackdrop(t, e, s, n) {
          var i = t.length;
          for (var _a7 = 3; _a7 < i; _a7 += 4) {
            var _i25 = t[_a7];
            if (0 === _i25) {
              t[_a7 - 3] = e;
              t[_a7 - 2] = s;
              t[_a7 - 1] = n;
            } else if (_i25 < 255) {
              var _r4 = 255 - _i25;
              t[_a7 - 3] = t[_a7 - 3] * _i25 + e * _r4 >> 8;
              t[_a7 - 2] = t[_a7 - 2] * _i25 + s * _r4 >> 8;
              t[_a7 - 1] = t[_a7 - 1] * _i25 + n * _r4 >> 8;
            }
          }
        }
        function composeSMaskAlpha(t, e, s) {
          var n = t.length;
          for (var _i26 = 3; _i26 < n; _i26 += 4) {
            var _n22 = s ? s[t[_i26]] : t[_i26];
            e[_i26] = e[_i26] * _n22 * .00392156862745098 | 0;
          }
        }
        function composeSMaskLuminosity(t, e, s) {
          var n = t.length;
          for (var _i27 = 3; _i27 < n; _i27 += 4) {
            var _n23 = 77 * t[_i27 - 3] + 152 * t[_i27 - 2] + 28 * t[_i27 - 1];
            e[_i27] = s ? e[_i27] * s[_n23 >> 8] >> 8 : e[_i27] * _n23 >> 16;
          }
        }
        function composeSMask(t, e, s, n) {
          var i = n[0],
            a = n[1],
            r = n[2] - i,
            o = n[3] - a;
          if (0 !== r && 0 !== o) {
            !function genericComposeSMask(t, e, s, n, i, a, r, o, l, c, h) {
              var d = !!a,
                u = d ? a[0] : 0,
                p = d ? a[1] : 0,
                g = d ? a[2] : 0;
              var m;
              m = "Luminosity" === i ? composeSMaskLuminosity : composeSMaskAlpha;
              var f = Math.min(n, Math.ceil(1048576 / s));
              for (var _i28 = 0; _i28 < n; _i28 += f) {
                var _a8 = Math.min(f, n - _i28),
                  b = t.getImageData(o - c, _i28 + (l - h), s, _a8),
                  A = e.getImageData(o, _i28 + l, s, _a8);
                d && composeSMaskBackdrop(b.data, u, p, g);
                m(b.data, A.data, r);
                e.putImageData(A, o, _i28 + l);
              }
            }(e.context, s, r, o, e.subtype, e.backdrop, e.transferMap, i, a, e.offsetX, e.offsetY);
            t.save();
            t.globalAlpha = 1;
            t.globalCompositeOperation = "source-over";
            t.setTransform(1, 0, 0, 1, 0, 0);
            t.drawImage(s.canvas, 0, 0);
            t.restore();
          }
        }
        function getImageSmoothingEnabled(t, e) {
          var s = n.Util.singularValueDecompose2dScale(t);
          s[0] = Math.fround(s[0]);
          s[1] = Math.fround(s[1]);
          var a = Math.fround((globalThis.devicePixelRatio || 1) * i.PixelsPerInch.PDF_TO_CSS_UNITS);
          return void 0 !== e ? e : s[0] <= a || s[1] <= a;
        }
        var d = ["butt", "round", "square"],
          u = ["miter", "round", "bevel"],
          p = {},
          g = {};
        var _ct = /*#__PURE__*/new WeakSet();
        var CanvasGraphics = /*#__PURE__*/function () {
          function CanvasGraphics(t, e, s, n, _ref47, r, o) {
            var i = _ref47.optionalContentConfig,
              _ref47$markedContentS = _ref47.markedContentStack,
              a = _ref47$markedContentS === void 0 ? null : _ref47$markedContentS;
            _classCallCheck(this, CanvasGraphics);
            _classPrivateMethodInitSpec(this, _ct);
            this.ctx = t;
            this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);
            this.stateStack = [];
            this.pendingClip = null;
            this.pendingEOFill = !1;
            this.res = null;
            this.xobjs = null;
            this.commonObjs = e;
            this.objs = s;
            this.canvasFactory = n;
            this.groupStack = [];
            this.processingType3 = null;
            this.baseTransform = null;
            this.baseTransformStack = [];
            this.groupLevel = 0;
            this.smaskStack = [];
            this.smaskCounter = 0;
            this.tempSMask = null;
            this.suspendedCtx = null;
            this.contentVisible = !0;
            this.markedContentStack = a || [];
            this.optionalContentConfig = i;
            this.cachedCanvases = new CachedCanvases(this.canvasFactory);
            this.cachedPatterns = new Map();
            this.annotationCanvasMap = r;
            this.viewportScale = 1;
            this.outputScaleX = 1;
            this.outputScaleY = 1;
            this.backgroundColor = (o === null || o === void 0 ? void 0 : o.background) || null;
            this.foregroundColor = (o === null || o === void 0 ? void 0 : o.foreground) || null;
            this._cachedScaleForStroking = null;
            this._cachedGetSinglePixelWidth = null;
            this._cachedBitmapsMap = new Map();
          }
          _createClass(CanvasGraphics, [{
            key: "getObject",
            value: function getObject(t) {
              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
              return "string" == typeof t ? t.startsWith("g_") ? this.commonObjs.get(t) : this.objs.get(t) : e;
            }
          }, {
            key: "beginDrawing",
            value: function beginDrawing(_ref48) {
              var _this$ctx3;
              var t = _ref48.transform,
                e = _ref48.viewport,
                _ref48$transparency = _ref48.transparency,
                s = _ref48$transparency === void 0 ? !1 : _ref48$transparency,
                _ref48$background = _ref48.background,
                n = _ref48$background === void 0 ? null : _ref48$background;
              var a = this.ctx.canvas.width,
                r = this.ctx.canvas.height,
                o = n || "#ffffff";
              this.ctx.save();
              if (this.foregroundColor && this.backgroundColor) {
                this.ctx.fillStyle = this.foregroundColor;
                var _t49 = this.foregroundColor = this.ctx.fillStyle;
                this.ctx.fillStyle = this.backgroundColor;
                var _e36 = this.backgroundColor = this.ctx.fillStyle;
                var _s32 = !0,
                  _n24 = o;
                this.ctx.fillStyle = o;
                _n24 = this.ctx.fillStyle;
                _s32 = "string" == typeof _n24 && /^#[0-9A-Fa-f]{6}$/.test(_n24);
                if ("#000000" === _t49 && "#ffffff" === _e36 || _t49 === _e36 || !_s32) this.foregroundColor = this.backgroundColor = null;else {
                  var _ref49 = (0, i.getRGB)(_n24),
                    _ref50 = _slicedToArray(_ref49, 3),
                    _s33 = _ref50[0],
                    _a9 = _ref50[1],
                    _r5 = _ref50[2],
                    newComp = function newComp(t) {
                      return (t /= 255) <= .03928 ? t / 12.92 : Math.pow((t + .055) / 1.055, 2.4);
                    },
                    _o3 = Math.round(.2126 * newComp(_s33) + .7152 * newComp(_a9) + .0722 * newComp(_r5));
                  this.selectColor = function (s, n, i) {
                    var a = .2126 * newComp(s) + .7152 * newComp(n) + .0722 * newComp(i);
                    return Math.round(a) === _o3 ? _e36 : _t49;
                  };
                }
              }
              this.ctx.fillStyle = this.backgroundColor || o;
              this.ctx.fillRect(0, 0, a, r);
              this.ctx.restore();
              if (s) {
                var _this$ctx;
                var _t50 = this.cachedCanvases.getCanvas("transparent", a, r);
                this.compositeCtx = this.ctx;
                this.transparentCanvas = _t50.canvas;
                this.ctx = _t50.context;
                this.ctx.save();
                (_this$ctx = this.ctx).transform.apply(_this$ctx, _toConsumableArray((0, i.getCurrentTransform)(this.compositeCtx)));
              }
              this.ctx.save();
              resetCtxToDefault(this.ctx, this.foregroundColor);
              if (t) {
                var _this$ctx2;
                (_this$ctx2 = this.ctx).transform.apply(_this$ctx2, _toConsumableArray(t));
                this.outputScaleX = t[0];
                this.outputScaleY = t[0];
              }
              (_this$ctx3 = this.ctx).transform.apply(_this$ctx3, _toConsumableArray(e.transform));
              this.viewportScale = e.scale;
              this.baseTransform = (0, i.getCurrentTransform)(this.ctx);
            }
          }, {
            key: "executeOperatorList",
            value: function executeOperatorList(t, e, s, i) {
              var a = t.argsArray,
                r = t.fnArray;
              var o = e || 0;
              var l = a.length;
              if (l === o) return o;
              var c = l - o > 10 && "function" == typeof s,
                h = c ? Date.now() + 15 : 0;
              var d = 0;
              var u = this.commonObjs,
                p = this.objs;
              var g;
              for (;;) {
                if (void 0 !== i && o === i.nextBreakPoint) {
                  i.breakIt(o, s);
                  return o;
                }
                g = r[o];
                if (g !== n.OPS.dependency) this[g].apply(this, a[o]);else {
                  var _iterator48 = _createForOfIteratorHelper(a[o]),
                    _step48;
                  try {
                    for (_iterator48.s(); !(_step48 = _iterator48.n()).done;) {
                      var _t51 = _step48.value;
                      var _e37 = _t51.startsWith("g_") ? u : p;
                      if (!_e37.has(_t51)) {
                        _e37.get(_t51, s);
                        return o;
                      }
                    }
                  } catch (err) {
                    _iterator48.e(err);
                  } finally {
                    _iterator48.f();
                  }
                }
                o++;
                if (o === l) return o;
                if (c && ++d > 10) {
                  if (Date.now() > h) {
                    s();
                    return o;
                  }
                  d = 0;
                }
              }
            }
          }, {
            key: "endDrawing",
            value: function endDrawing() {
              _classPrivateMethodGet(this, _ct, _ct2).call(this);
              this.cachedCanvases.clear();
              this.cachedPatterns.clear();
              var _iterator49 = _createForOfIteratorHelper(this._cachedBitmapsMap.values()),
                _step49;
              try {
                for (_iterator49.s(); !(_step49 = _iterator49.n()).done;) {
                  var _t52 = _step49.value;
                  var _iterator50 = _createForOfIteratorHelper(_t52.values()),
                    _step50;
                  try {
                    for (_iterator50.s(); !(_step50 = _iterator50.n()).done;) {
                      var _e38 = _step50.value;
                      "undefined" != typeof HTMLCanvasElement && _e38 instanceof HTMLCanvasElement && (_e38.width = _e38.height = 0);
                    }
                  } catch (err) {
                    _iterator50.e(err);
                  } finally {
                    _iterator50.f();
                  }
                  _t52.clear();
                }
              } catch (err) {
                _iterator49.e(err);
              } finally {
                _iterator49.f();
              }
              this._cachedBitmapsMap.clear();
            }
          }, {
            key: "_scaleImage",
            value: function _scaleImage(t, e) {
              var s = t.width,
                n = t.height;
              var i,
                a,
                r = Math.max(Math.hypot(e[0], e[1]), 1),
                o = Math.max(Math.hypot(e[2], e[3]), 1),
                l = s,
                c = n,
                h = "prescale1";
              for (; r > 2 && l > 1 || o > 2 && c > 1;) {
                var _e39 = l,
                  _s34 = c;
                if (r > 2 && l > 1) {
                  _e39 = Math.ceil(l / 2);
                  r /= l / _e39;
                }
                if (o > 2 && c > 1) {
                  _s34 = Math.ceil(c / 2);
                  o /= c / _s34;
                }
                i = this.cachedCanvases.getCanvas(h, _e39, _s34);
                a = i.context;
                a.clearRect(0, 0, _e39, _s34);
                a.drawImage(t, 0, 0, l, c, 0, 0, _e39, _s34);
                t = i.canvas;
                l = _e39;
                c = _s34;
                h = "prescale1" === h ? "prescale2" : "prescale1";
              }
              return {
                img: t,
                paintWidth: l,
                paintHeight: c
              };
            }
          }, {
            key: "_createMaskCanvas",
            value: function _createMaskCanvas(t) {
              var e = this.ctx,
                s = t.width,
                r = t.height,
                o = this.current.fillColor,
                l = this.current.patternFill,
                c = (0, i.getCurrentTransform)(e);
              var h, d, u, p;
              if ((t.bitmap || t.data) && t.count > 1) {
                var _e40 = t.bitmap || t.data.buffer;
                d = JSON.stringify(l ? c : [c.slice(0, 4), o]);
                h = this._cachedBitmapsMap.get(_e40);
                if (!h) {
                  h = new Map();
                  this._cachedBitmapsMap.set(_e40, h);
                }
                var _s35 = h.get(d);
                if (_s35 && !l) {
                  return {
                    canvas: _s35,
                    offsetX: Math.round(Math.min(c[0], c[2]) + c[4]),
                    offsetY: Math.round(Math.min(c[1], c[3]) + c[5])
                  };
                }
                u = _s35;
              }
              if (!u) {
                p = this.cachedCanvases.getCanvas("maskCanvas", s, r);
                putBinaryImageMask(p.context, t);
              }
              var g = n.Util.transform(c, [1 / s, 0, 0, -1 / r, 0, 0]);
              g = n.Util.transform(g, [1, 0, 0, 1, 0, -r]);
              var m = n.Util.applyTransform([0, 0], g),
                f = n.Util.applyTransform([s, r], g),
                b = n.Util.normalizeRect([m[0], m[1], f[0], f[1]]),
                A = Math.round(b[2] - b[0]) || 1,
                _ = Math.round(b[3] - b[1]) || 1,
                y = this.cachedCanvases.getCanvas("fillCanvas", A, _),
                v = y.context,
                S = Math.min(m[0], f[0]),
                x = Math.min(m[1], f[1]);
              v.translate(-S, -x);
              v.transform.apply(v, _toConsumableArray(g));
              if (!u) {
                u = this._scaleImage(p.canvas, (0, i.getCurrentTransformInverse)(v));
                u = u.img;
                h && l && h.set(d, u);
              }
              v.imageSmoothingEnabled = getImageSmoothingEnabled((0, i.getCurrentTransform)(v), t.interpolate);
              drawImageAtIntegerCoords(v, u, 0, 0, u.width, u.height, 0, 0, s, r);
              v.globalCompositeOperation = "source-in";
              var E = n.Util.transform((0, i.getCurrentTransformInverse)(v), [1, 0, 0, 1, -S, -x]);
              v.fillStyle = l ? o.getPattern(e, this, E, a.PathType.FILL) : o;
              v.fillRect(0, 0, s, r);
              if (h && !l) {
                this.cachedCanvases["delete"]("fillCanvas");
                h.set(d, y.canvas);
              }
              return {
                canvas: y.canvas,
                offsetX: Math.round(S),
                offsetY: Math.round(x)
              };
            }
          }, {
            key: "setLineWidth",
            value: function setLineWidth(t) {
              t !== this.current.lineWidth && (this._cachedScaleForStroking = null);
              this.current.lineWidth = t;
              this.ctx.lineWidth = t;
            }
          }, {
            key: "setLineCap",
            value: function setLineCap(t) {
              this.ctx.lineCap = d[t];
            }
          }, {
            key: "setLineJoin",
            value: function setLineJoin(t) {
              this.ctx.lineJoin = u[t];
            }
          }, {
            key: "setMiterLimit",
            value: function setMiterLimit(t) {
              this.ctx.miterLimit = t;
            }
          }, {
            key: "setDash",
            value: function setDash(t, e) {
              var s = this.ctx;
              if (void 0 !== s.setLineDash) {
                s.setLineDash(t);
                s.lineDashOffset = e;
              }
            }
          }, {
            key: "setRenderingIntent",
            value: function setRenderingIntent(t) {}
          }, {
            key: "setFlatness",
            value: function setFlatness(t) {}
          }, {
            key: "setGState",
            value: function setGState(t) {
              var _iterator51 = _createForOfIteratorHelper(t),
                _step51;
              try {
                for (_iterator51.s(); !(_step51 = _iterator51.n()).done;) {
                  var _step51$value = _slicedToArray(_step51.value, 2),
                    _e41 = _step51$value[0],
                    _s36 = _step51$value[1];
                  switch (_e41) {
                    case "LW":
                      this.setLineWidth(_s36);
                      break;
                    case "LC":
                      this.setLineCap(_s36);
                      break;
                    case "LJ":
                      this.setLineJoin(_s36);
                      break;
                    case "ML":
                      this.setMiterLimit(_s36);
                      break;
                    case "D":
                      this.setDash(_s36[0], _s36[1]);
                      break;
                    case "RI":
                      this.setRenderingIntent(_s36);
                      break;
                    case "FL":
                      this.setFlatness(_s36);
                      break;
                    case "Font":
                      this.setFont(_s36[0], _s36[1]);
                      break;
                    case "CA":
                      this.current.strokeAlpha = _s36;
                      break;
                    case "ca":
                      this.current.fillAlpha = _s36;
                      this.ctx.globalAlpha = _s36;
                      break;
                    case "BM":
                      this.ctx.globalCompositeOperation = _s36;
                      break;
                    case "SMask":
                      this.current.activeSMask = _s36 ? this.tempSMask : null;
                      this.tempSMask = null;
                      this.checkSMaskState();
                      break;
                    case "TR":
                      this.current.transferMaps = _s36;
                  }
                }
              } catch (err) {
                _iterator51.e(err);
              } finally {
                _iterator51.f();
              }
            }
          }, {
            key: "inSMaskMode",
            get: function get() {
              return !!this.suspendedCtx;
            }
          }, {
            key: "checkSMaskState",
            value: function checkSMaskState() {
              var t = this.inSMaskMode;
              this.current.activeSMask && !t ? this.beginSMaskMode() : !this.current.activeSMask && t && this.endSMaskMode();
            }
          }, {
            key: "beginSMaskMode",
            value: function beginSMaskMode() {
              if (this.inSMaskMode) throw new Error("beginSMaskMode called while already in smask mode");
              var t = this.ctx.canvas.width,
                e = this.ctx.canvas.height,
                s = "smaskGroupAt" + this.groupLevel,
                n = this.cachedCanvases.getCanvas(s, t, e);
              this.suspendedCtx = this.ctx;
              this.ctx = n.context;
              var a = this.ctx;
              a.setTransform.apply(a, _toConsumableArray((0, i.getCurrentTransform)(this.suspendedCtx)));
              copyCtxState(this.suspendedCtx, a);
              !function mirrorContextOperations(t, e) {
                if (t._removeMirroring) throw new Error("Context is already forwarding operations.");
                t.__originalSave = t.save;
                t.__originalRestore = t.restore;
                t.__originalRotate = t.rotate;
                t.__originalScale = t.scale;
                t.__originalTranslate = t.translate;
                t.__originalTransform = t.transform;
                t.__originalSetTransform = t.setTransform;
                t.__originalResetTransform = t.resetTransform;
                t.__originalClip = t.clip;
                t.__originalMoveTo = t.moveTo;
                t.__originalLineTo = t.lineTo;
                t.__originalBezierCurveTo = t.bezierCurveTo;
                t.__originalRect = t.rect;
                t.__originalClosePath = t.closePath;
                t.__originalBeginPath = t.beginPath;
                t._removeMirroring = function () {
                  t.save = t.__originalSave;
                  t.restore = t.__originalRestore;
                  t.rotate = t.__originalRotate;
                  t.scale = t.__originalScale;
                  t.translate = t.__originalTranslate;
                  t.transform = t.__originalTransform;
                  t.setTransform = t.__originalSetTransform;
                  t.resetTransform = t.__originalResetTransform;
                  t.clip = t.__originalClip;
                  t.moveTo = t.__originalMoveTo;
                  t.lineTo = t.__originalLineTo;
                  t.bezierCurveTo = t.__originalBezierCurveTo;
                  t.rect = t.__originalRect;
                  t.closePath = t.__originalClosePath;
                  t.beginPath = t.__originalBeginPath;
                  delete t._removeMirroring;
                };
                t.save = function ctxSave() {
                  e.save();
                  this.__originalSave();
                };
                t.restore = function ctxRestore() {
                  e.restore();
                  this.__originalRestore();
                };
                t.translate = function ctxTranslate(t, s) {
                  e.translate(t, s);
                  this.__originalTranslate(t, s);
                };
                t.scale = function ctxScale(t, s) {
                  e.scale(t, s);
                  this.__originalScale(t, s);
                };
                t.transform = function ctxTransform(t, s, n, i, a, r) {
                  e.transform(t, s, n, i, a, r);
                  this.__originalTransform(t, s, n, i, a, r);
                };
                t.setTransform = function ctxSetTransform(t, s, n, i, a, r) {
                  e.setTransform(t, s, n, i, a, r);
                  this.__originalSetTransform(t, s, n, i, a, r);
                };
                t.resetTransform = function ctxResetTransform() {
                  e.resetTransform();
                  this.__originalResetTransform();
                };
                t.rotate = function ctxRotate(t) {
                  e.rotate(t);
                  this.__originalRotate(t);
                };
                t.clip = function ctxRotate(t) {
                  e.clip(t);
                  this.__originalClip(t);
                };
                t.moveTo = function (t, s) {
                  e.moveTo(t, s);
                  this.__originalMoveTo(t, s);
                };
                t.lineTo = function (t, s) {
                  e.lineTo(t, s);
                  this.__originalLineTo(t, s);
                };
                t.bezierCurveTo = function (t, s, n, i, a, r) {
                  e.bezierCurveTo(t, s, n, i, a, r);
                  this.__originalBezierCurveTo(t, s, n, i, a, r);
                };
                t.rect = function (t, s, n, i) {
                  e.rect(t, s, n, i);
                  this.__originalRect(t, s, n, i);
                };
                t.closePath = function () {
                  e.closePath();
                  this.__originalClosePath();
                };
                t.beginPath = function () {
                  e.beginPath();
                  this.__originalBeginPath();
                };
              }(a, this.suspendedCtx);
              this.setGState([["BM", "source-over"], ["ca", 1], ["CA", 1]]);
            }
          }, {
            key: "endSMaskMode",
            value: function endSMaskMode() {
              if (!this.inSMaskMode) throw new Error("endSMaskMode called while not in smask mode");
              this.ctx._removeMirroring();
              copyCtxState(this.ctx, this.suspendedCtx);
              this.ctx = this.suspendedCtx;
              this.suspendedCtx = null;
            }
          }, {
            key: "compose",
            value: function compose(t) {
              if (!this.current.activeSMask) return;
              if (t) {
                t[0] = Math.floor(t[0]);
                t[1] = Math.floor(t[1]);
                t[2] = Math.ceil(t[2]);
                t[3] = Math.ceil(t[3]);
              } else t = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];
              var e = this.current.activeSMask;
              composeSMask(this.suspendedCtx, e, this.ctx, t);
              this.ctx.save();
              this.ctx.setTransform(1, 0, 0, 1, 0, 0);
              this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);
              this.ctx.restore();
            }
          }, {
            key: "save",
            value: function save() {
              if (this.inSMaskMode) {
                copyCtxState(this.ctx, this.suspendedCtx);
                this.suspendedCtx.save();
              } else this.ctx.save();
              var t = this.current;
              this.stateStack.push(t);
              this.current = t.clone();
            }
          }, {
            key: "restore",
            value: function restore() {
              0 === this.stateStack.length && this.inSMaskMode && this.endSMaskMode();
              if (0 !== this.stateStack.length) {
                this.current = this.stateStack.pop();
                if (this.inSMaskMode) {
                  this.suspendedCtx.restore();
                  copyCtxState(this.suspendedCtx, this.ctx);
                } else this.ctx.restore();
                this.checkSMaskState();
                this.pendingClip = null;
                this._cachedScaleForStroking = null;
                this._cachedGetSinglePixelWidth = null;
              }
            }
          }, {
            key: "transform",
            value: function transform(t, e, s, n, i, a) {
              this.ctx.transform(t, e, s, n, i, a);
              this._cachedScaleForStroking = null;
              this._cachedGetSinglePixelWidth = null;
            }
          }, {
            key: "constructPath",
            value: function constructPath(t, e, s) {
              var a = this.ctx,
                r = this.current;
              var o,
                l,
                c = r.x,
                h = r.y;
              var d = (0, i.getCurrentTransform)(a),
                u = 0 === d[0] && 0 === d[3] || 0 === d[1] && 0 === d[2],
                p = u ? s.slice(0) : null;
              for (var _s37 = 0, _i29 = 0, _g2 = t.length; _s37 < _g2; _s37++) switch (0 | t[s]) {
                case n.OPS.rectangle:
                  c = e[_i29++];
                  h = e[_i29++];
                  var _t53 = e[_i29++],
                    _s38 = e[_i29++],
                    _g3 = c + _t53,
                    m = h + _s38;
                  a.moveTo(c, h);
                  if (0 === _t53 || 0 === _s38) a.lineTo(_g3, m);else {
                    a.lineTo(_g3, h);
                    a.lineTo(_g3, m);
                    a.lineTo(c, m);
                  }
                  u || r.updateRectMinMax(d, [c, h, _g3, m]);
                  a.closePath();
                  break;
                case n.OPS.moveTo:
                  c = e[_i29++];
                  h = e[_i29++];
                  a.moveTo(c, h);
                  u || r.updatePathMinMax(d, c, h);
                  break;
                case n.OPS.lineTo:
                  c = e[_i29++];
                  h = e[_i29++];
                  a.lineTo(c, h);
                  u || r.updatePathMinMax(d, c, h);
                  break;
                case n.OPS.curveTo:
                  o = c;
                  l = h;
                  c = e[_i29 + 4];
                  h = e[_i29 + 5];
                  a.bezierCurveTo(e[_i29], e[_i29 + 1], e[_i29 + 2], e[_i29 + 3], c, h);
                  r.updateCurvePathMinMax(d, o, l, e[_i29], e[_i29 + 1], e[_i29 + 2], e[_i29 + 3], c, h, p);
                  _i29 += 6;
                  break;
                case n.OPS.curveTo2:
                  o = c;
                  l = h;
                  a.bezierCurveTo(c, h, e[_i29], e[_i29 + 1], e[_i29 + 2], e[_i29 + 3]);
                  r.updateCurvePathMinMax(d, o, l, c, h, e[_i29], e[_i29 + 1], e[_i29 + 2], e[_i29 + 3], p);
                  c = e[_i29 + 2];
                  h = e[_i29 + 3];
                  _i29 += 4;
                  break;
                case n.OPS.curveTo3:
                  o = c;
                  l = h;
                  c = e[_i29 + 2];
                  h = e[_i29 + 3];
                  a.bezierCurveTo(e[_i29], e[_i29 + 1], c, h, c, h);
                  r.updateCurvePathMinMax(d, o, l, e[_i29], e[_i29 + 1], c, h, c, h, p);
                  _i29 += 4;
                  break;
                case n.OPS.closePath:
                  a.closePath();
              }
              u && r.updateScalingPathMinMax(d, p);
              r.setCurrentPoint(c, h);
            }
          }, {
            key: "closePath",
            value: function closePath() {
              this.ctx.closePath();
            }
          }, {
            key: "stroke",
            value: function stroke() {
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;
              var e = this.ctx,
                s = this.current.strokeColor;
              e.globalAlpha = this.current.strokeAlpha;
              if (this.contentVisible) if ("object" == _typeof(s) && s !== null && s !== void 0 && s.getPattern) {
                e.save();
                e.strokeStyle = s.getPattern(e, this, (0, i.getCurrentTransformInverse)(e), a.PathType.STROKE);
                this.rescaleAndStroke(!1);
                e.restore();
              } else this.rescaleAndStroke(!0);
              t && this.consumePath(this.current.getClippedPathBoundingBox());
              e.globalAlpha = this.current.fillAlpha;
            }
          }, {
            key: "closeStroke",
            value: function closeStroke() {
              this.closePath();
              this.stroke();
            }
          }, {
            key: "fill",
            value: function fill() {
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;
              var e = this.ctx,
                s = this.current.fillColor;
              var n = !1;
              if (this.current.patternFill) {
                e.save();
                e.fillStyle = s.getPattern(e, this, (0, i.getCurrentTransformInverse)(e), a.PathType.FILL);
                n = !0;
              }
              var r = this.current.getClippedPathBoundingBox();
              if (this.contentVisible && null !== r) if (this.pendingEOFill) {
                e.fill("evenodd");
                this.pendingEOFill = !1;
              } else e.fill();
              n && e.restore();
              t && this.consumePath(r);
            }
          }, {
            key: "eoFill",
            value: function eoFill() {
              this.pendingEOFill = !0;
              this.fill();
            }
          }, {
            key: "fillStroke",
            value: function fillStroke() {
              this.fill(!1);
              this.stroke(!1);
              this.consumePath();
            }
          }, {
            key: "eoFillStroke",
            value: function eoFillStroke() {
              this.pendingEOFill = !0;
              this.fillStroke();
            }
          }, {
            key: "closeFillStroke",
            value: function closeFillStroke() {
              this.closePath();
              this.fillStroke();
            }
          }, {
            key: "closeEOFillStroke",
            value: function closeEOFillStroke() {
              this.pendingEOFill = !0;
              this.closePath();
              this.fillStroke();
            }
          }, {
            key: "endPath",
            value: function endPath() {
              this.consumePath();
            }
          }, {
            key: "clip",
            value: function clip() {
              this.pendingClip = p;
            }
          }, {
            key: "eoClip",
            value: function eoClip() {
              this.pendingClip = g;
            }
          }, {
            key: "beginText",
            value: function beginText() {
              this.current.textMatrix = n.IDENTITY_MATRIX;
              this.current.textMatrixScale = 1;
              this.current.x = this.current.lineX = 0;
              this.current.y = this.current.lineY = 0;
            }
          }, {
            key: "endText",
            value: function endText() {
              var t = this.pendingTextPaths,
                e = this.ctx;
              if (void 0 !== t) {
                e.save();
                e.beginPath();
                var _iterator52 = _createForOfIteratorHelper(t),
                  _step52;
                try {
                  for (_iterator52.s(); !(_step52 = _iterator52.n()).done;) {
                    var _s39 = _step52.value;
                    e.setTransform.apply(e, _toConsumableArray(_s39.transform));
                    e.translate(_s39.x, _s39.y);
                    _s39.addToPath(e, _s39.fontSize);
                  }
                } catch (err) {
                  _iterator52.e(err);
                } finally {
                  _iterator52.f();
                }
                e.restore();
                e.clip();
                e.beginPath();
                delete this.pendingTextPaths;
              } else e.beginPath();
            }
          }, {
            key: "setCharSpacing",
            value: function setCharSpacing(t) {
              this.current.charSpacing = t;
            }
          }, {
            key: "setWordSpacing",
            value: function setWordSpacing(t) {
              this.current.wordSpacing = t;
            }
          }, {
            key: "setHScale",
            value: function setHScale(t) {
              this.current.textHScale = t / 100;
            }
          }, {
            key: "setLeading",
            value: function setLeading(t) {
              this.current.leading = -t;
            }
          }, {
            key: "setFont",
            value: function setFont(t, e) {
              var s = this.commonObjs.get(t),
                i = this.current;
              if (!s) throw new Error("Can't find font for ".concat(t));
              i.fontMatrix = s.fontMatrix || n.FONT_IDENTITY_MATRIX;
              0 !== i.fontMatrix[0] && 0 !== i.fontMatrix[3] || (0, n.warn)("Invalid font matrix for font " + t);
              if (e < 0) {
                e = -e;
                i.fontDirection = -1;
              } else i.fontDirection = 1;
              this.current.font = s;
              this.current.fontSize = e;
              if (s.isType3Font) return;
              var a = s.loadedName || "sans-serif";
              var r = "normal";
              s.black ? r = "900" : s.bold && (r = "bold");
              var o = s.italic ? "italic" : "normal",
                l = "\"".concat(a, "\", ").concat(s.fallbackName);
              var c = e;
              e < 16 ? c = 16 : e > 100 && (c = 100);
              this.current.fontSizeScale = e / c;
              this.ctx.font = "".concat(o, " ").concat(r, " ").concat(c, "px ").concat(l);
            }
          }, {
            key: "setTextRenderingMode",
            value: function setTextRenderingMode(t) {
              this.current.textRenderingMode = t;
            }
          }, {
            key: "setTextRise",
            value: function setTextRise(t) {
              this.current.textRise = t;
            }
          }, {
            key: "moveText",
            value: function moveText(t, e) {
              this.current.x = this.current.lineX += t;
              this.current.y = this.current.lineY += e;
            }
          }, {
            key: "setLeadingMoveText",
            value: function setLeadingMoveText(t, e) {
              this.setLeading(-e);
              this.moveText(t, e);
            }
          }, {
            key: "setTextMatrix",
            value: function setTextMatrix(t, e, s, n, i, a) {
              this.current.textMatrix = [t, e, s, n, i, a];
              this.current.textMatrixScale = Math.hypot(t, e);
              this.current.x = this.current.lineX = 0;
              this.current.y = this.current.lineY = 0;
            }
          }, {
            key: "nextLine",
            value: function nextLine() {
              this.moveText(0, this.current.leading);
            }
          }, {
            key: "paintChar",
            value: function paintChar(t, e, s, a) {
              var r = this.ctx,
                o = this.current,
                l = o.font,
                c = o.textRenderingMode,
                h = o.fontSize / o.fontSizeScale,
                d = c & n.TextRenderingMode.FILL_STROKE_MASK,
                u = !!(c & n.TextRenderingMode.ADD_TO_PATH_FLAG),
                p = o.patternFill && !l.missingFile;
              var g;
              (l.disableFontFace || u || p) && (g = l.getPathGenerator(this.commonObjs, t));
              if (l.disableFontFace || p) {
                r.save();
                r.translate(e, s);
                r.beginPath();
                g(r, h);
                a && r.setTransform.apply(r, _toConsumableArray(a));
                d !== n.TextRenderingMode.FILL && d !== n.TextRenderingMode.FILL_STROKE || r.fill();
                d !== n.TextRenderingMode.STROKE && d !== n.TextRenderingMode.FILL_STROKE || r.stroke();
                r.restore();
              } else {
                d !== n.TextRenderingMode.FILL && d !== n.TextRenderingMode.FILL_STROKE || r.fillText(t, e, s);
                d !== n.TextRenderingMode.STROKE && d !== n.TextRenderingMode.FILL_STROKE || r.strokeText(t, e, s);
              }
              if (u) {
                (this.pendingTextPaths || (this.pendingTextPaths = [])).push({
                  transform: (0, i.getCurrentTransform)(r),
                  x: e,
                  y: s,
                  fontSize: h,
                  addToPath: g
                });
              }
            }
          }, {
            key: "isFontSubpixelAAEnabled",
            get: function get() {
              var _this$cachedCanvases$ = this.cachedCanvases.getCanvas("isFontSubpixelAAEnabled", 10, 10),
                t = _this$cachedCanvases$.context;
              t.scale(1.5, 1);
              t.fillText("I", 0, 10);
              var e = t.getImageData(0, 0, 10, 10).data;
              var s = !1;
              for (var _t54 = 3; _t54 < e.length; _t54 += 4) if (e[_t54] > 0 && e[_t54] < 255) {
                s = !0;
                break;
              }
              return (0, n.shadow)(this, "isFontSubpixelAAEnabled", s);
            }
          }, {
            key: "showText",
            value: function showText(t) {
              var e = this.current,
                s = e.font;
              if (s.isType3Font) return this.showType3Text(t);
              var r = e.fontSize;
              if (0 === r) return;
              var o = this.ctx,
                l = e.fontSizeScale,
                c = e.charSpacing,
                h = e.wordSpacing,
                d = e.fontDirection,
                u = e.textHScale * d,
                p = t.length,
                g = s.vertical,
                m = g ? 1 : -1,
                f = s.defaultVMetrics,
                b = r * e.fontMatrix[0],
                A = e.textRenderingMode === n.TextRenderingMode.FILL && !s.disableFontFace && !e.patternFill;
              o.save();
              o.transform.apply(o, _toConsumableArray(e.textMatrix));
              o.translate(e.x, e.y + e.textRise);
              d > 0 ? o.scale(u, -1) : o.scale(u, 1);
              var _;
              if (e.patternFill) {
                o.save();
                var _t55 = e.fillColor.getPattern(o, this, (0, i.getCurrentTransformInverse)(o), a.PathType.FILL);
                _ = (0, i.getCurrentTransform)(o);
                o.restore();
                o.fillStyle = _t55;
              }
              var y = e.lineWidth;
              var v = e.textMatrixScale;
              if (0 === v || 0 === y) {
                var _t56 = e.textRenderingMode & n.TextRenderingMode.FILL_STROKE_MASK;
                _t56 !== n.TextRenderingMode.STROKE && _t56 !== n.TextRenderingMode.FILL_STROKE || (y = this.getSinglePixelWidth());
              } else y /= v;
              if (1 !== l) {
                o.scale(l, l);
                y /= l;
              }
              o.lineWidth = y;
              if (s.isInvalidPDFjsFont) {
                var _s40 = [];
                var _n25 = 0;
                var _iterator53 = _createForOfIteratorHelper(t),
                  _step53;
                try {
                  for (_iterator53.s(); !(_step53 = _iterator53.n()).done;) {
                    var _e42 = _step53.value;
                    _s40.push(_e42.unicode);
                    _n25 += _e42.width;
                  }
                } catch (err) {
                  _iterator53.e(err);
                } finally {
                  _iterator53.f();
                }
                o.fillText(_s40.join(""), 0, 0);
                e.x += _n25 * b * u;
                o.restore();
                this.compose();
                return;
              }
              var S,
                x = 0;
              for (S = 0; S < p; ++S) {
                var _e43 = t[S];
                if ("number" == typeof _e43) {
                  x += m * _e43 * r / 1e3;
                  continue;
                }
                var _n26 = !1;
                var _i30 = (_e43.isSpace ? h : 0) + c,
                  _a10 = _e43.fontChar,
                  _u3 = _e43.accent;
                var _p2 = void 0,
                  _y4 = void 0,
                  _v3 = void 0,
                  E = _e43.width;
                if (g) {
                  var _t57 = _e43.vmetric || f,
                    _s41 = -(_e43.vmetric ? _t57[1] : .5 * E) * b,
                    _n27 = _t57[2] * b;
                  E = _t57 ? -_t57[0] : E;
                  _p2 = _s41 / l;
                  _y4 = (x + _n27) / l;
                } else {
                  _p2 = x / l;
                  _y4 = 0;
                }
                if (s.remeasure && E > 0) {
                  var _t58 = 1e3 * o.measureText(_a10).width / r * l;
                  if (E < _t58 && this.isFontSubpixelAAEnabled) {
                    var _e44 = E / _t58;
                    _n26 = !0;
                    o.save();
                    o.scale(_e44, 1);
                    _p2 /= _e44;
                  } else E !== _t58 && (_p2 += (E - _t58) / 2e3 * r / l);
                }
                if (this.contentVisible && (_e43.isInFont || s.missingFile)) if (A && !_u3) o.fillText(_a10, _p2, _y4);else {
                  this.paintChar(_a10, _p2, _y4, _);
                  if (_u3) {
                    var _t59 = _p2 + r * _u3.offset.x / l,
                      _e45 = _y4 - r * _u3.offset.y / l;
                    this.paintChar(_u3.fontChar, _t59, _e45, _);
                  }
                }
                _v3 = g ? E * b - _i30 * d : E * b + _i30 * d;
                x += _v3;
                _n26 && o.restore();
              }
              g ? e.y -= x : e.x += x * u;
              o.restore();
              this.compose();
            }
          }, {
            key: "showType3Text",
            value: function showType3Text(t) {
              var e = this.ctx,
                s = this.current,
                i = s.font,
                a = s.fontSize,
                r = s.fontDirection,
                o = i.vertical ? 1 : -1,
                l = s.charSpacing,
                c = s.wordSpacing,
                h = s.textHScale * r,
                d = s.fontMatrix || n.FONT_IDENTITY_MATRIX,
                u = t.length;
              var p, g, m, f;
              if (!(s.textRenderingMode === n.TextRenderingMode.INVISIBLE) && 0 !== a) {
                this._cachedScaleForStroking = null;
                this._cachedGetSinglePixelWidth = null;
                e.save();
                e.transform.apply(e, _toConsumableArray(s.textMatrix));
                e.translate(s.x, s.y);
                e.scale(h, r);
                for (p = 0; p < u; ++p) {
                  g = t[p];
                  if ("number" == typeof g) {
                    f = o * g * a / 1e3;
                    this.ctx.translate(f, 0);
                    s.x += f * h;
                    continue;
                  }
                  var _r6 = (g.isSpace ? c : 0) + l,
                    _u4 = i.charProcOperatorList[g.operatorListId];
                  if (!_u4) {
                    (0, n.warn)("Type3 character \"".concat(g.operatorListId, "\" is not available."));
                    continue;
                  }
                  if (this.contentVisible) {
                    this.processingType3 = g;
                    this.save();
                    e.scale(a, a);
                    e.transform.apply(e, _toConsumableArray(d));
                    this.executeOperatorList(_u4);
                    this.restore();
                  }
                  m = n.Util.applyTransform([g.width, 0], d)[0] * a + _r6;
                  e.translate(m, 0);
                  s.x += m * h;
                }
                e.restore();
                this.processingType3 = null;
              }
            }
          }, {
            key: "setCharWidth",
            value: function setCharWidth(t, e) {}
          }, {
            key: "setCharWidthAndBounds",
            value: function setCharWidthAndBounds(t, e, s, n, i, a) {
              this.ctx.rect(s, n, i - s, a - n);
              this.ctx.clip();
              this.endPath();
            }
          }, {
            key: "getColorN_Pattern",
            value: function getColorN_Pattern(t) {
              var _this28 = this;
              var e;
              if ("TilingPattern" === t[0]) {
                var _s42 = t[1],
                  _n28 = this.baseTransform || (0, i.getCurrentTransform)(this.ctx),
                  _r7 = {
                    createCanvasGraphics: function createCanvasGraphics(t) {
                      return new CanvasGraphics(t, _this28.commonObjs, _this28.objs, _this28.canvasFactory, {
                        optionalContentConfig: _this28.optionalContentConfig,
                        markedContentStack: _this28.markedContentStack
                      });
                    }
                  };
                e = new a.TilingPattern(t, _s42, this.ctx, _r7, _n28);
              } else e = this._getPattern(t[1], t[2]);
              return e;
            }
          }, {
            key: "setStrokeColorN",
            value: function setStrokeColorN() {
              this.current.strokeColor = this.getColorN_Pattern(arguments);
            }
          }, {
            key: "setFillColorN",
            value: function setFillColorN() {
              this.current.fillColor = this.getColorN_Pattern(arguments);
              this.current.patternFill = !0;
            }
          }, {
            key: "setStrokeRGBColor",
            value: function setStrokeRGBColor(t, e, s) {
              var _this$selectColor;
              var i = ((_this$selectColor = this.selectColor) === null || _this$selectColor === void 0 ? void 0 : _this$selectColor.call(this, t, e, s)) || n.Util.makeHexColor(t, e, s);
              this.ctx.strokeStyle = i;
              this.current.strokeColor = i;
            }
          }, {
            key: "setFillRGBColor",
            value: function setFillRGBColor(t, e, s) {
              var _this$selectColor2;
              var i = ((_this$selectColor2 = this.selectColor) === null || _this$selectColor2 === void 0 ? void 0 : _this$selectColor2.call(this, t, e, s)) || n.Util.makeHexColor(t, e, s);
              this.ctx.fillStyle = i;
              this.current.fillColor = i;
              this.current.patternFill = !1;
            }
          }, {
            key: "_getPattern",
            value: function _getPattern(t) {
              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
              var s;
              if (this.cachedPatterns.has(t)) s = this.cachedPatterns.get(t);else {
                s = (0, a.getShadingPattern)(this.objs.get(t));
                this.cachedPatterns.set(t, s);
              }
              e && (s.matrix = e);
              return s;
            }
          }, {
            key: "shadingFill",
            value: function shadingFill(t) {
              if (!this.contentVisible) return;
              var e = this.ctx;
              this.save();
              var s = this._getPattern(t);
              e.fillStyle = s.getPattern(e, this, (0, i.getCurrentTransformInverse)(e), a.PathType.SHADING);
              var r = (0, i.getCurrentTransformInverse)(e);
              if (r) {
                var _t60 = e.canvas,
                  _s43 = _t60.width,
                  _i31 = _t60.height,
                  _a11 = n.Util.applyTransform([0, 0], r),
                  _o4 = n.Util.applyTransform([0, _i31], r),
                  _l3 = n.Util.applyTransform([_s43, 0], r),
                  _c3 = n.Util.applyTransform([_s43, _i31], r),
                  _h3 = Math.min(_a11[0], _o4[0], _l3[0], _c3[0]),
                  _d3 = Math.min(_a11[1], _o4[1], _l3[1], _c3[1]),
                  _u5 = Math.max(_a11[0], _o4[0], _l3[0], _c3[0]),
                  _p3 = Math.max(_a11[1], _o4[1], _l3[1], _c3[1]);
                this.ctx.fillRect(_h3, _d3, _u5 - _h3, _p3 - _d3);
              } else this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);
              this.compose(this.current.getClippedPathBoundingBox());
              this.restore();
            }
          }, {
            key: "beginInlineImage",
            value: function beginInlineImage() {
              (0, n.unreachable)("Should not call beginInlineImage");
            }
          }, {
            key: "beginImageData",
            value: function beginImageData() {
              (0, n.unreachable)("Should not call beginImageData");
            }
          }, {
            key: "paintFormXObjectBegin",
            value: function paintFormXObjectBegin(t, e) {
              if (this.contentVisible) {
                this.save();
                this.baseTransformStack.push(this.baseTransform);
                Array.isArray(t) && 6 === t.length && this.transform.apply(this, _toConsumableArray(t));
                this.baseTransform = (0, i.getCurrentTransform)(this.ctx);
                if (e) {
                  var _t61 = e[2] - e[0],
                    _s44 = e[3] - e[1];
                  this.ctx.rect(e[0], e[1], _t61, _s44);
                  this.current.updateRectMinMax((0, i.getCurrentTransform)(this.ctx), e);
                  this.clip();
                  this.endPath();
                }
              }
            }
          }, {
            key: "paintFormXObjectEnd",
            value: function paintFormXObjectEnd() {
              if (this.contentVisible) {
                this.restore();
                this.baseTransform = this.baseTransformStack.pop();
              }
            }
          }, {
            key: "beginGroup",
            value: function beginGroup(t) {
              if (!this.contentVisible) return;
              this.save();
              if (this.inSMaskMode) {
                this.endSMaskMode();
                this.current.activeSMask = null;
              }
              var e = this.ctx;
              t.isolated || (0, n.info)("TODO: Support non-isolated groups.");
              t.knockout && (0, n.warn)("Knockout groups not supported.");
              var s = (0, i.getCurrentTransform)(e);
              t.matrix && e.transform.apply(e, _toConsumableArray(t.matrix));
              if (!t.bbox) throw new Error("Bounding box is required.");
              var a = n.Util.getAxialAlignedBoundingBox(t.bbox, (0, i.getCurrentTransform)(e));
              var r = [0, 0, e.canvas.width, e.canvas.height];
              a = n.Util.intersect(a, r) || [0, 0, 0, 0];
              var o = Math.floor(a[0]),
                c = Math.floor(a[1]);
              var h = Math.max(Math.ceil(a[2]) - o, 1),
                d = Math.max(Math.ceil(a[3]) - c, 1),
                u = 1,
                p = 1;
              if (h > l) {
                u = h / l;
                h = l;
              }
              if (d > l) {
                p = d / l;
                d = l;
              }
              this.current.startNewPathAndClipBox([0, 0, h, d]);
              var g = "groupAt" + this.groupLevel;
              t.smask && (g += "_smask_" + this.smaskCounter++ % 2);
              var m = this.cachedCanvases.getCanvas(g, h, d),
                f = m.context;
              f.scale(1 / u, 1 / p);
              f.translate(-o, -c);
              f.transform.apply(f, _toConsumableArray(s));
              if (t.smask) this.smaskStack.push({
                canvas: m.canvas,
                context: f,
                offsetX: o,
                offsetY: c,
                scaleX: u,
                scaleY: p,
                subtype: t.smask.subtype,
                backdrop: t.smask.backdrop,
                transferMap: t.smask.transferMap || null,
                startTransformInverse: null
              });else {
                e.setTransform(1, 0, 0, 1, 0, 0);
                e.translate(o, c);
                e.scale(u, p);
                e.save();
              }
              copyCtxState(e, f);
              this.ctx = f;
              this.setGState([["BM", "source-over"], ["ca", 1], ["CA", 1]]);
              this.groupStack.push(e);
              this.groupLevel++;
            }
          }, {
            key: "endGroup",
            value: function endGroup(t) {
              if (!this.contentVisible) return;
              this.groupLevel--;
              var e = this.ctx,
                s = this.groupStack.pop();
              this.ctx = s;
              this.ctx.imageSmoothingEnabled = !1;
              if (t.smask) {
                this.tempSMask = this.smaskStack.pop();
                this.restore();
              } else {
                var _this$ctx4;
                this.ctx.restore();
                var _t62 = (0, i.getCurrentTransform)(this.ctx);
                this.restore();
                this.ctx.save();
                (_this$ctx4 = this.ctx).setTransform.apply(_this$ctx4, _toConsumableArray(_t62));
                var _s45 = n.Util.getAxialAlignedBoundingBox([0, 0, e.canvas.width, e.canvas.height], _t62);
                this.ctx.drawImage(e.canvas, 0, 0);
                this.ctx.restore();
                this.compose(_s45);
              }
            }
          }, {
            key: "beginAnnotation",
            value: function beginAnnotation(t, e, s, a, r) {
              var _this$ctx5;
              _classPrivateMethodGet(this, _ct, _ct2).call(this);
              resetCtxToDefault(this.ctx, this.foregroundColor);
              this.ctx.save();
              this.save();
              this.baseTransform && (_this$ctx5 = this.ctx).setTransform.apply(_this$ctx5, _toConsumableArray(this.baseTransform));
              if (Array.isArray(e) && 4 === e.length) {
                var _a12 = e[2] - e[0],
                  _o5 = e[3] - e[1];
                if (r && this.annotationCanvasMap) {
                  (s = s.slice())[4] -= e[0];
                  s[5] -= e[1];
                  (e = e.slice())[0] = e[1] = 0;
                  e[2] = _a12;
                  e[3] = _o5;
                  var _n$Util$singularValue = n.Util.singularValueDecompose2dScale((0, i.getCurrentTransform)(this.ctx)),
                    _n$Util$singularValue2 = _slicedToArray(_n$Util$singularValue, 2),
                    _r8 = _n$Util$singularValue2[0],
                    _l4 = _n$Util$singularValue2[1],
                    _c4 = this.viewportScale,
                    _h4 = Math.ceil(_a12 * this.outputScaleX * _c4),
                    _d4 = Math.ceil(_o5 * this.outputScaleY * _c4);
                  this.annotationCanvas = this.canvasFactory.create(_h4, _d4);
                  var _this$annotationCanva = this.annotationCanvas,
                    _u6 = _this$annotationCanva.canvas,
                    _p4 = _this$annotationCanva.context;
                  this.annotationCanvasMap.set(t, _u6);
                  this.annotationCanvas.savedCtx = this.ctx;
                  this.ctx = _p4;
                  this.ctx.setTransform(_r8, 0, 0, -_l4, 0, _o5 * _l4);
                  resetCtxToDefault(this.ctx, this.foregroundColor);
                } else {
                  resetCtxToDefault(this.ctx, this.foregroundColor);
                  this.ctx.rect(e[0], e[1], _a12, _o5);
                  this.ctx.clip();
                  this.endPath();
                }
              }
              this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);
              this.transform.apply(this, _toConsumableArray(s));
              this.transform.apply(this, _toConsumableArray(a));
            }
          }, {
            key: "endAnnotation",
            value: function endAnnotation() {
              if (this.annotationCanvas) {
                this.ctx = this.annotationCanvas.savedCtx;
                delete this.annotationCanvas.savedCtx;
                delete this.annotationCanvas;
              }
            }
          }, {
            key: "paintImageMaskXObject",
            value: function paintImageMaskXObject(t) {
              if (!this.contentVisible) return;
              var e = t.count;
              (t = this.getObject(t.data, t)).count = e;
              var s = this.ctx,
                n = this.processingType3;
              if (n) {
                void 0 === n.compiled && (n.compiled = function compileType3Glyph(t) {
                  var e = t.width,
                    s = t.height;
                  if (e > c || s > c) return null;
                  var n = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]),
                    i = e + 1;
                  var a,
                    r,
                    o,
                    l = new Uint8Array(i * (s + 1));
                  var h = e + 7 & -8;
                  var d = new Uint8Array(h * s),
                    u = 0;
                  var _iterator54 = _createForOfIteratorHelper(t.data),
                    _step54;
                  try {
                    for (_iterator54.s(); !(_step54 = _iterator54.n()).done;) {
                      var _e47 = _step54.value;
                      var _t65 = 128;
                      for (; _t65 > 0;) {
                        d[u++] = _e47 & _t65 ? 0 : 255;
                        _t65 >>= 1;
                      }
                    }
                  } catch (err) {
                    _iterator54.e(err);
                  } finally {
                    _iterator54.f();
                  }
                  var p = 0;
                  u = 0;
                  if (0 !== d[u]) {
                    l[0] = 1;
                    ++p;
                  }
                  for (r = 1; r < e; r++) {
                    if (d[u] !== d[u + 1]) {
                      l[r] = d[u] ? 2 : 1;
                      ++p;
                    }
                    u++;
                  }
                  if (0 !== d[u]) {
                    l[r] = 2;
                    ++p;
                  }
                  for (a = 1; a < s; a++) {
                    u = a * h;
                    o = a * i;
                    if (d[u - h] !== d[u]) {
                      l[o] = d[u] ? 1 : 8;
                      ++p;
                    }
                    var _t63 = (d[u] ? 4 : 0) + (d[u - h] ? 8 : 0);
                    for (r = 1; r < e; r++) {
                      _t63 = (_t63 >> 2) + (d[u + 1] ? 4 : 0) + (d[u - h + 1] ? 8 : 0);
                      if (n[_t63]) {
                        l[o + r] = n[_t63];
                        ++p;
                      }
                      u++;
                    }
                    if (d[u - h] !== d[u]) {
                      l[o + r] = d[u] ? 2 : 4;
                      ++p;
                    }
                    if (p > 1e3) return null;
                  }
                  u = h * (s - 1);
                  o = a * i;
                  if (0 !== d[u]) {
                    l[o] = 8;
                    ++p;
                  }
                  for (r = 1; r < e; r++) {
                    if (d[u] !== d[u + 1]) {
                      l[o + r] = d[u] ? 4 : 8;
                      ++p;
                    }
                    u++;
                  }
                  if (0 !== d[u]) {
                    l[o + r] = 4;
                    ++p;
                  }
                  if (p > 1e3) return null;
                  var g = new Int32Array([0, i, -1, 0, -i, 0, 0, 0, 1]),
                    m = new Path2D();
                  for (a = 0; p && a <= s; a++) {
                    var _t64 = a * i;
                    var _s46 = _t64 + e;
                    for (; _t64 < _s46 && !l[_t64];) _t64++;
                    if (_t64 === _s46) continue;
                    m.moveTo(_t64 % i, a);
                    var _n29 = _t64;
                    var _r9 = l[_t64];
                    do {
                      var _e46 = g[_r9];
                      do {
                        _t64 += _e46;
                      } while (!l[_t64]);
                      var _s47 = l[_t64];
                      if (5 !== _s47 && 10 !== _s47) {
                        _r9 = _s47;
                        l[_t64] = 0;
                      } else {
                        _r9 = _s47 & 51 * _r9 >> 4;
                        l[_t64] &= _r9 >> 2 | _r9 << 2;
                      }
                      m.lineTo(_t64 % i, _t64 / i | 0);
                      l[_t64] || --p;
                    } while (_n29 !== _t64);
                    --a;
                  }
                  d = null;
                  l = null;
                  return function (t) {
                    t.save();
                    t.scale(1 / e, -1 / s);
                    t.translate(0, -s);
                    t.fill(m);
                    t.beginPath();
                    t.restore();
                  };
                }(t));
                if (n.compiled) {
                  n.compiled(s);
                  return;
                }
              }
              var i = this._createMaskCanvas(t),
                a = i.canvas;
              s.save();
              s.setTransform(1, 0, 0, 1, 0, 0);
              s.drawImage(a, i.offsetX, i.offsetY);
              s.restore();
              this.compose();
            }
          }, {
            key: "paintImageMaskXObjectRepeat",
            value: function paintImageMaskXObjectRepeat(t, e) {
              var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
              var a = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
              var r = arguments.length > 4 ? arguments[4] : undefined;
              var o = arguments.length > 5 ? arguments[5] : undefined;
              if (!this.contentVisible) return;
              t = this.getObject(t.data, t);
              var l = this.ctx;
              l.save();
              var c = (0, i.getCurrentTransform)(l);
              l.transform(e, s, a, r, 0, 0);
              var h = this._createMaskCanvas(t);
              l.setTransform(1, 0, 0, 1, h.offsetX - c[4], h.offsetY - c[5]);
              for (var _t66 = 0, _i32 = o.length; _t66 < _i32; _t66 += 2) {
                var _i33 = n.Util.transform(c, [e, s, a, r, o[_t66], o[_t66 + 1]]),
                  _n$Util$applyTransfor3 = n.Util.applyTransform([0, 0], _i33),
                  _n$Util$applyTransfor4 = _slicedToArray(_n$Util$applyTransfor3, 2),
                  _d5 = _n$Util$applyTransfor4[0],
                  _u7 = _n$Util$applyTransfor4[1];
                l.drawImage(h.canvas, _d5, _u7);
              }
              l.restore();
              this.compose();
            }
          }, {
            key: "paintImageMaskXObjectGroup",
            value: function paintImageMaskXObjectGroup(t) {
              if (!this.contentVisible) return;
              var e = this.ctx,
                s = this.current.fillColor,
                n = this.current.patternFill;
              var _iterator55 = _createForOfIteratorHelper(t),
                _step55;
              try {
                for (_iterator55.s(); !(_step55 = _iterator55.n()).done;) {
                  var _r10 = _step55.value;
                  var _t67 = _r10.data,
                    _o6 = _r10.width,
                    _l5 = _r10.height,
                    _c5 = _r10.transform,
                    _h5 = this.cachedCanvases.getCanvas("maskCanvas", _o6, _l5),
                    _d6 = _h5.context;
                  _d6.save();
                  putBinaryImageMask(_d6, this.getObject(_t67, _r10));
                  _d6.globalCompositeOperation = "source-in";
                  _d6.fillStyle = n ? s.getPattern(_d6, this, (0, i.getCurrentTransformInverse)(e), a.PathType.FILL) : s;
                  _d6.fillRect(0, 0, _o6, _l5);
                  _d6.restore();
                  e.save();
                  e.transform.apply(e, _toConsumableArray(_c5));
                  e.scale(1, -1);
                  drawImageAtIntegerCoords(e, _h5.canvas, 0, 0, _o6, _l5, 0, -1, 1, 1);
                  e.restore();
                }
              } catch (err) {
                _iterator55.e(err);
              } finally {
                _iterator55.f();
              }
              this.compose();
            }
          }, {
            key: "paintImageXObject",
            value: function paintImageXObject(t) {
              if (!this.contentVisible) return;
              var e = this.getObject(t);
              e ? this.paintInlineImageXObject(e) : (0, n.warn)("Dependent image isn't ready yet");
            }
          }, {
            key: "paintImageXObjectRepeat",
            value: function paintImageXObjectRepeat(t, e, s, i) {
              if (!this.contentVisible) return;
              var a = this.getObject(t);
              if (!a) {
                (0, n.warn)("Dependent image isn't ready yet");
                return;
              }
              var r = a.width,
                o = a.height,
                l = [];
              for (var _t68 = 0, _n30 = i.length; _t68 < _n30; _t68 += 2) l.push({
                transform: [e, 0, 0, s, i[_t68], i[_t68 + 1]],
                x: 0,
                y: 0,
                w: r,
                h: o
              });
              this.paintInlineImageXObjectGroup(a, l);
            }
          }, {
            key: "paintInlineImageXObject",
            value: function paintInlineImageXObject(t) {
              if (!this.contentVisible) return;
              var e = t.width,
                s = t.height,
                n = this.ctx;
              this.save();
              n.scale(1 / e, -1 / s);
              var a;
              if ("function" == typeof HTMLElement && t instanceof HTMLElement || !t.data) a = t;else {
                var _n31 = this.cachedCanvases.getCanvas("inlineImage", e, s);
                putBinaryImageData(_n31.context, t, this.current.transferMaps);
                a = _n31.canvas;
              }
              var r = this._scaleImage(a, (0, i.getCurrentTransformInverse)(n));
              n.imageSmoothingEnabled = getImageSmoothingEnabled((0, i.getCurrentTransform)(n), t.interpolate);
              drawImageAtIntegerCoords(n, r.img, 0, 0, r.paintWidth, r.paintHeight, 0, -s, e, s);
              this.compose();
              this.restore();
            }
          }, {
            key: "paintInlineImageXObjectGroup",
            value: function paintInlineImageXObjectGroup(t, e) {
              if (!this.contentVisible) return;
              var s = this.ctx,
                n = t.width,
                i = t.height,
                a = this.cachedCanvases.getCanvas("inlineImage", n, i);
              putBinaryImageData(a.context, t, this.current.transferMaps);
              var _iterator56 = _createForOfIteratorHelper(e),
                _step56;
              try {
                for (_iterator56.s(); !(_step56 = _iterator56.n()).done;) {
                  var _t69 = _step56.value;
                  s.save();
                  s.transform.apply(s, _toConsumableArray(_t69.transform));
                  s.scale(1, -1);
                  drawImageAtIntegerCoords(s, a.canvas, _t69.x, _t69.y, _t69.w, _t69.h, 0, -1, 1, 1);
                  s.restore();
                }
              } catch (err) {
                _iterator56.e(err);
              } finally {
                _iterator56.f();
              }
              this.compose();
            }
          }, {
            key: "paintSolidColorImageMask",
            value: function paintSolidColorImageMask() {
              if (this.contentVisible) {
                this.ctx.fillRect(0, 0, 1, 1);
                this.compose();
              }
            }
          }, {
            key: "markPoint",
            value: function markPoint(t) {}
          }, {
            key: "markPointProps",
            value: function markPointProps(t, e) {}
          }, {
            key: "beginMarkedContent",
            value: function beginMarkedContent(t) {
              this.markedContentStack.push({
                visible: !0
              });
            }
          }, {
            key: "beginMarkedContentProps",
            value: function beginMarkedContentProps(t, e) {
              "OC" === t ? this.markedContentStack.push({
                visible: this.optionalContentConfig.isVisible(e)
              }) : this.markedContentStack.push({
                visible: !0
              });
              this.contentVisible = this.isContentVisible();
            }
          }, {
            key: "endMarkedContent",
            value: function endMarkedContent() {
              this.markedContentStack.pop();
              this.contentVisible = this.isContentVisible();
            }
          }, {
            key: "beginCompat",
            value: function beginCompat() {}
          }, {
            key: "endCompat",
            value: function endCompat() {}
          }, {
            key: "consumePath",
            value: function consumePath(t) {
              var e = this.current.isEmptyClip();
              this.pendingClip && this.current.updateClipFromPath();
              this.pendingClip || this.compose(t);
              var s = this.ctx;
              if (this.pendingClip) {
                e || (this.pendingClip === g ? s.clip("evenodd") : s.clip());
                this.pendingClip = null;
              }
              this.current.startNewPathAndClipBox(this.current.clipBox);
              s.beginPath();
            }
          }, {
            key: "getSinglePixelWidth",
            value: function getSinglePixelWidth() {
              if (!this._cachedGetSinglePixelWidth) {
                var _t70 = (0, i.getCurrentTransform)(this.ctx);
                if (0 === _t70[1] && 0 === _t70[2]) this._cachedGetSinglePixelWidth = 1 / Math.min(Math.abs(_t70[0]), Math.abs(_t70[3]));else {
                  var _e48 = Math.abs(_t70[0] * _t70[3] - _t70[2] * _t70[1]),
                    _s48 = Math.hypot(_t70[0], _t70[2]),
                    _n32 = Math.hypot(_t70[1], _t70[3]);
                  this._cachedGetSinglePixelWidth = Math.max(_s48, _n32) / _e48;
                }
              }
              return this._cachedGetSinglePixelWidth;
            }
          }, {
            key: "getScaleForStroking",
            value: function getScaleForStroking() {
              if (!this._cachedScaleForStroking) {
                var _t71 = this.current.lineWidth,
                  _e49 = (0, i.getCurrentTransform)(this.ctx);
                var _s49, _n33;
                if (0 === _e49[1] && 0 === _e49[2]) {
                  var _i34 = Math.abs(_e49[0]),
                    _a13 = Math.abs(_e49[3]);
                  if (0 === _t71) {
                    _s49 = 1 / _i34;
                    _n33 = 1 / _a13;
                  } else {
                    var _e50 = _i34 * _t71,
                      _r11 = _a13 * _t71;
                    _s49 = _e50 < 1 ? 1 / _e50 : 1;
                    _n33 = _r11 < 1 ? 1 / _r11 : 1;
                  }
                } else {
                  var _i35 = Math.abs(_e49[0] * _e49[3] - _e49[2] * _e49[1]),
                    _a14 = Math.hypot(_e49[0], _e49[1]),
                    _r12 = Math.hypot(_e49[2], _e49[3]);
                  if (0 === _t71) {
                    _s49 = _r12 / _i35;
                    _n33 = _a14 / _i35;
                  } else {
                    var _e51 = _t71 * _i35;
                    _s49 = _r12 > _e51 ? _r12 / _e51 : 1;
                    _n33 = _a14 > _e51 ? _a14 / _e51 : 1;
                  }
                }
                this._cachedScaleForStroking = [_s49, _n33];
              }
              return this._cachedScaleForStroking;
            }
          }, {
            key: "rescaleAndStroke",
            value: function rescaleAndStroke(t) {
              var e = this.ctx,
                s = this.current.lineWidth,
                _this$getScaleForStro = this.getScaleForStroking(),
                _this$getScaleForStro2 = _slicedToArray(_this$getScaleForStro, 2),
                n = _this$getScaleForStro2[0],
                a = _this$getScaleForStro2[1];
              e.lineWidth = s || 1;
              if (1 === n && 1 === a) {
                e.stroke();
                return;
              }
              var r, o, l;
              if (t) {
                r = (0, i.getCurrentTransform)(e);
                o = e.getLineDash().slice();
                l = e.lineDashOffset;
              }
              e.scale(n, a);
              var c = Math.max(n, a);
              e.setLineDash(e.getLineDash().map(function (t) {
                return t / c;
              }));
              e.lineDashOffset /= c;
              e.stroke();
              if (t) {
                e.setTransform.apply(e, _toConsumableArray(r));
                e.setLineDash(o);
                e.lineDashOffset = l;
              }
            }
          }, {
            key: "isContentVisible",
            value: function isContentVisible() {
              for (var _t72 = this.markedContentStack.length - 1; _t72 >= 0; _t72--) if (!this.markedContentStack[_t72].visible) return !1;
              return !0;
            }
          }]);
          return CanvasGraphics;
        }();
        function _ct2() {
          for (; this.stateStack.length || this.inSMaskMode;) this.restore();
          this.ctx.restore();
          if (this.transparentCanvas) {
            this.ctx = this.compositeCtx;
            this.ctx.save();
            this.ctx.setTransform(1, 0, 0, 1, 0, 0);
            this.ctx.drawImage(this.transparentCanvas, 0, 0);
            this.ctx.restore();
            this.transparentCanvas = null;
          }
        }
        e.CanvasGraphics = CanvasGraphics;
        for (var _t73 in n.OPS) void 0 !== CanvasGraphics.prototype[_t73] && (CanvasGraphics.prototype[n.OPS[_t73]] = CanvasGraphics.prototype[_t73]);
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.TilingPattern = e.PathType = void 0;
        e.getShadingPattern = function getShadingPattern(t) {
          switch (t[0]) {
            case "RadialAxial":
              return new RadialAxialShadingPattern(t);
            case "Mesh":
              return new MeshShadingPattern(t);
            case "Dummy":
              return new DummyShadingPattern();
          }
          throw new Error("Unknown IR type: ".concat(t[0]));
        };
        var n = s(1),
          i = s(6),
          a = s(10);
        var r = {
          FILL: "Fill",
          STROKE: "Stroke",
          SHADING: "Shading"
        };
        e.PathType = r;
        function applyBoundingBox(t, e) {
          if (!e || a.isNodeJS) return;
          var s = e[2] - e[0],
            n = e[3] - e[1],
            i = new Path2D();
          i.rect(e[0], e[1], s, n);
          t.clip(i);
        }
        var BaseShadingPattern = /*#__PURE__*/function () {
          function BaseShadingPattern() {
            _classCallCheck(this, BaseShadingPattern);
            this.constructor === BaseShadingPattern && (0, n.unreachable)("Cannot initialize BaseShadingPattern.");
          }
          _createClass(BaseShadingPattern, [{
            key: "getPattern",
            value: function getPattern() {
              (0, n.unreachable)("Abstract method `getPattern` called.");
            }
          }]);
          return BaseShadingPattern;
        }();
        var RadialAxialShadingPattern = /*#__PURE__*/function (_BaseShadingPattern) {
          _inherits(RadialAxialShadingPattern, _BaseShadingPattern);
          var _super14 = _createSuper(RadialAxialShadingPattern);
          function RadialAxialShadingPattern(t) {
            var _this29;
            _classCallCheck(this, RadialAxialShadingPattern);
            _this29 = _super14.call(this);
            _this29._type = t[1];
            _this29._bbox = t[2];
            _this29._colorStops = t[3];
            _this29._p0 = t[4];
            _this29._p1 = t[5];
            _this29._r0 = t[6];
            _this29._r1 = t[7];
            _this29.matrix = null;
            return _this29;
          }
          _createClass(RadialAxialShadingPattern, [{
            key: "_createGradient",
            value: function _createGradient(t) {
              var e;
              "axial" === this._type ? e = t.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]) : "radial" === this._type && (e = t.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1));
              var _iterator57 = _createForOfIteratorHelper(this._colorStops),
                _step57;
              try {
                for (_iterator57.s(); !(_step57 = _iterator57.n()).done;) {
                  var _t74 = _step57.value;
                  e.addColorStop(_t74[0], _t74[1]);
                }
              } catch (err) {
                _iterator57.e(err);
              } finally {
                _iterator57.f();
              }
              return e;
            }
          }, {
            key: "getPattern",
            value: function getPattern(t, e, s, a) {
              var o;
              if (a === r.STROKE || a === r.FILL) {
                var _r13 = e.current.getClippedPathBoundingBox(a, (0, i.getCurrentTransform)(t)) || [0, 0, 0, 0],
                  _l6 = Math.ceil(_r13[2] - _r13[0]) || 1,
                  c = Math.ceil(_r13[3] - _r13[1]) || 1,
                  h = e.cachedCanvases.getCanvas("pattern", _l6, c, !0),
                  d = h.context;
                d.clearRect(0, 0, d.canvas.width, d.canvas.height);
                d.beginPath();
                d.rect(0, 0, d.canvas.width, d.canvas.height);
                d.translate(-_r13[0], -_r13[1]);
                s = n.Util.transform(s, [1, 0, 0, 1, _r13[0], _r13[1]]);
                d.transform.apply(d, _toConsumableArray(e.baseTransform));
                this.matrix && d.transform.apply(d, _toConsumableArray(this.matrix));
                applyBoundingBox(d, this._bbox);
                d.fillStyle = this._createGradient(d);
                d.fill();
                o = t.createPattern(h.canvas, "no-repeat");
                var u = new DOMMatrix(s);
                o.setTransform(u);
              } else {
                applyBoundingBox(t, this._bbox);
                o = this._createGradient(t);
              }
              return o;
            }
          }]);
          return RadialAxialShadingPattern;
        }(BaseShadingPattern);
        function drawTriangle(t, e, s, n, i, a, r, o) {
          var l = e.coords,
            c = e.colors,
            h = t.data,
            d = 4 * t.width;
          var u;
          if (l[s + 1] > l[n + 1]) {
            u = s;
            s = n;
            n = u;
            u = a;
            a = r;
            r = u;
          }
          if (l[n + 1] > l[i + 1]) {
            u = n;
            n = i;
            i = u;
            u = r;
            r = o;
            o = u;
          }
          if (l[s + 1] > l[n + 1]) {
            u = s;
            s = n;
            n = u;
            u = a;
            a = r;
            r = u;
          }
          var p = (l[s] + e.offsetX) * e.scaleX,
            g = (l[s + 1] + e.offsetY) * e.scaleY,
            m = (l[n] + e.offsetX) * e.scaleX,
            f = (l[n + 1] + e.offsetY) * e.scaleY,
            b = (l[i] + e.offsetX) * e.scaleX,
            A = (l[i + 1] + e.offsetY) * e.scaleY;
          if (g >= A) return;
          var _ = c[a],
            y = c[a + 1],
            v = c[a + 2],
            S = c[r],
            x = c[r + 1],
            E = c[r + 2],
            C = c[o],
            P = c[o + 1],
            T = c[o + 2],
            w = Math.round(g),
            k = Math.round(A);
          var F, R, M, D, I, O, L, N;
          for (var _t75 = w; _t75 <= k; _t75++) {
            if (_t75 < f) {
              var _e52 = void 0;
              _e52 = _t75 < g ? 0 : (g - _t75) / (g - f);
              F = p - (p - m) * _e52;
              R = _ - (_ - S) * _e52;
              M = y - (y - x) * _e52;
              D = v - (v - E) * _e52;
            } else {
              var _e53 = void 0;
              _e53 = _t75 > A ? 1 : f === A ? 0 : (f - _t75) / (f - A);
              F = m - (m - b) * _e53;
              R = S - (S - C) * _e53;
              M = x - (x - P) * _e53;
              D = E - (E - T) * _e53;
            }
            var _e54 = void 0;
            _e54 = _t75 < g ? 0 : _t75 > A ? 1 : (g - _t75) / (g - A);
            I = p - (p - b) * _e54;
            O = _ - (_ - C) * _e54;
            L = y - (y - P) * _e54;
            N = v - (v - T) * _e54;
            var _s50 = Math.round(Math.min(F, I)),
              _n34 = Math.round(Math.max(F, I));
            var _i36 = d * _t75 + 4 * _s50;
            for (var _t76 = _s50; _t76 <= _n34; _t76++) {
              _e54 = (F - _t76) / (F - I);
              _e54 < 0 ? _e54 = 0 : _e54 > 1 && (_e54 = 1);
              h[_i36++] = R - (R - O) * _e54 | 0;
              h[_i36++] = M - (M - L) * _e54 | 0;
              h[_i36++] = D - (D - N) * _e54 | 0;
              h[_i36++] = 255;
            }
          }
        }
        function drawFigure(t, e, s) {
          var n = e.coords,
            i = e.colors;
          var a, r;
          switch (e.type) {
            case "lattice":
              var _o7 = e.verticesPerRow,
                _l7 = Math.floor(n.length / _o7) - 1,
                c = _o7 - 1;
              for (a = 0; a < _l7; a++) {
                var _e55 = a * _o7;
                for (var _a15 = 0; _a15 < c; _a15++, _e55++) {
                  drawTriangle(t, s, n[_e55], n[_e55 + 1], n[_e55 + _o7], i[_e55], i[_e55 + 1], i[_e55 + _o7]);
                  drawTriangle(t, s, n[_e55 + _o7 + 1], n[_e55 + 1], n[_e55 + _o7], i[_e55 + _o7 + 1], i[_e55 + 1], i[_e55 + _o7]);
                }
              }
              break;
            case "triangles":
              for (a = 0, r = n.length; a < r; a += 3) drawTriangle(t, s, n[a], n[a + 1], n[a + 2], i[a], i[a + 1], i[a + 2]);
              break;
            default:
              throw new Error("illegal figure");
          }
        }
        var MeshShadingPattern = /*#__PURE__*/function (_BaseShadingPattern2) {
          _inherits(MeshShadingPattern, _BaseShadingPattern2);
          var _super15 = _createSuper(MeshShadingPattern);
          function MeshShadingPattern(t) {
            var _this30;
            _classCallCheck(this, MeshShadingPattern);
            _this30 = _super15.call(this);
            _this30._coords = t[2];
            _this30._colors = t[3];
            _this30._figures = t[4];
            _this30._bounds = t[5];
            _this30._bbox = t[7];
            _this30._background = t[8];
            _this30.matrix = null;
            return _this30;
          }
          _createClass(MeshShadingPattern, [{
            key: "_createMeshCanvas",
            value: function _createMeshCanvas(t, e, s) {
              var n = Math.floor(this._bounds[0]),
                i = Math.floor(this._bounds[1]),
                a = Math.ceil(this._bounds[2]) - n,
                r = Math.ceil(this._bounds[3]) - i,
                o = Math.min(Math.ceil(Math.abs(a * t[0] * 1.1)), 3e3),
                l = Math.min(Math.ceil(Math.abs(r * t[1] * 1.1)), 3e3),
                c = a / o,
                h = r / l,
                d = {
                  coords: this._coords,
                  colors: this._colors,
                  offsetX: -n,
                  offsetY: -i,
                  scaleX: 1 / c,
                  scaleY: 1 / h
                },
                u = o + 4,
                p = l + 4,
                g = s.getCanvas("mesh", u, p, !1),
                m = g.context,
                f = m.createImageData(o, l);
              if (e) {
                var _t77 = f.data;
                for (var _s51 = 0, _n35 = _t77.length; _s51 < _n35; _s51 += 4) {
                  _t77[_s51] = e[0];
                  _t77[_s51 + 1] = e[1];
                  _t77[_s51 + 2] = e[2];
                  _t77[_s51 + 3] = 255;
                }
              }
              var _iterator58 = _createForOfIteratorHelper(this._figures),
                _step58;
              try {
                for (_iterator58.s(); !(_step58 = _iterator58.n()).done;) {
                  var _t78 = _step58.value;
                  drawFigure(f, _t78, d);
                }
              } catch (err) {
                _iterator58.e(err);
              } finally {
                _iterator58.f();
              }
              m.putImageData(f, 2, 2);
              return {
                canvas: g.canvas,
                offsetX: n - 2 * c,
                offsetY: i - 2 * h,
                scaleX: c,
                scaleY: h
              };
            }
          }, {
            key: "getPattern",
            value: function getPattern(t, e, s, a) {
              applyBoundingBox(t, this._bbox);
              var o;
              if (a === r.SHADING) o = n.Util.singularValueDecompose2dScale((0, i.getCurrentTransform)(t));else {
                o = n.Util.singularValueDecompose2dScale(e.baseTransform);
                if (this.matrix) {
                  var _t79 = n.Util.singularValueDecompose2dScale(this.matrix);
                  o = [o[0] * _t79[0], o[1] * _t79[1]];
                }
              }
              var l = this._createMeshCanvas(o, a === r.SHADING ? null : this._background, e.cachedCanvases);
              if (a !== r.SHADING) {
                t.setTransform.apply(t, _toConsumableArray(e.baseTransform));
                this.matrix && t.transform.apply(t, _toConsumableArray(this.matrix));
              }
              t.translate(l.offsetX, l.offsetY);
              t.scale(l.scaleX, l.scaleY);
              return t.createPattern(l.canvas, "no-repeat");
            }
          }]);
          return MeshShadingPattern;
        }(BaseShadingPattern);
        var DummyShadingPattern = /*#__PURE__*/function (_BaseShadingPattern3) {
          _inherits(DummyShadingPattern, _BaseShadingPattern3);
          var _super16 = _createSuper(DummyShadingPattern);
          function DummyShadingPattern() {
            _classCallCheck(this, DummyShadingPattern);
            return _super16.apply(this, arguments);
          }
          _createClass(DummyShadingPattern, [{
            key: "getPattern",
            value: function getPattern() {
              return "hotpink";
            }
          }]);
          return DummyShadingPattern;
        }(BaseShadingPattern);
        var o = 1,
          l = 2;
        var TilingPattern = /*#__PURE__*/function () {
          function TilingPattern(t, e, s, n, i) {
            _classCallCheck(this, TilingPattern);
            this.operatorList = t[2];
            this.matrix = t[3] || [1, 0, 0, 1, 0, 0];
            this.bbox = t[4];
            this.xstep = t[5];
            this.ystep = t[6];
            this.paintType = t[7];
            this.tilingType = t[8];
            this.color = e;
            this.ctx = s;
            this.canvasGraphicsFactory = n;
            this.baseTransform = i;
          }
          _createClass(TilingPattern, [{
            key: "createPatternCanvas",
            value: function createPatternCanvas(t) {
              var e = this.operatorList,
                s = this.bbox,
                a = this.xstep,
                r = this.ystep,
                o = this.paintType,
                l = this.tilingType,
                c = this.color,
                h = this.canvasGraphicsFactory;
              (0, n.info)("TilingType: " + l);
              var d = s[0],
                u = s[1],
                p = s[2],
                g = s[3],
                m = n.Util.singularValueDecompose2dScale(this.matrix),
                f = n.Util.singularValueDecompose2dScale(this.baseTransform),
                b = [m[0] * f[0], m[1] * f[1]],
                A = this.getSizeAndScale(a, this.ctx.canvas.width, b[0]),
                _ = this.getSizeAndScale(r, this.ctx.canvas.height, b[1]),
                y = t.cachedCanvases.getCanvas("pattern", A.size, _.size, !0),
                v = y.context,
                S = h.createCanvasGraphics(v);
              S.groupLevel = t.groupLevel;
              this.setFillAndStrokeStyleToContext(S, o, c);
              var x = d,
                E = u,
                C = p,
                P = g;
              if (d < 0) {
                x = 0;
                C += Math.abs(d);
              }
              if (u < 0) {
                E = 0;
                P += Math.abs(u);
              }
              v.translate(-A.scale * x, -_.scale * E);
              S.transform(A.scale, 0, 0, _.scale, 0, 0);
              v.save();
              this.clipBbox(S, x, E, C, P);
              S.baseTransform = (0, i.getCurrentTransform)(S.ctx);
              S.executeOperatorList(e);
              S.endDrawing();
              return {
                canvas: y.canvas,
                scaleX: A.scale,
                scaleY: _.scale,
                offsetX: x,
                offsetY: E
              };
            }
          }, {
            key: "getSizeAndScale",
            value: function getSizeAndScale(t, e, s) {
              t = Math.abs(t);
              var n = Math.max(TilingPattern.MAX_PATTERN_SIZE, e);
              var i = Math.ceil(t * s);
              i >= n ? i = n : s = i / t;
              return {
                scale: s,
                size: i
              };
            }
          }, {
            key: "clipBbox",
            value: function clipBbox(t, e, s, n, a) {
              var r = n - e,
                o = a - s;
              t.ctx.rect(e, s, r, o);
              t.current.updateRectMinMax((0, i.getCurrentTransform)(t.ctx), [e, s, n, a]);
              t.clip();
              t.endPath();
            }
          }, {
            key: "setFillAndStrokeStyleToContext",
            value: function setFillAndStrokeStyleToContext(t, e, s) {
              var i = t.ctx,
                a = t.current;
              switch (e) {
                case o:
                  var _t80 = this.ctx;
                  i.fillStyle = _t80.fillStyle;
                  i.strokeStyle = _t80.strokeStyle;
                  a.fillColor = _t80.fillStyle;
                  a.strokeColor = _t80.strokeStyle;
                  break;
                case l:
                  var _r14 = n.Util.makeHexColor(s[0], s[1], s[2]);
                  i.fillStyle = _r14;
                  i.strokeStyle = _r14;
                  a.fillColor = _r14;
                  a.strokeColor = _r14;
                  break;
                default:
                  throw new n.FormatError("Unsupported paint type: ".concat(e));
              }
            }
          }, {
            key: "getPattern",
            value: function getPattern(t, e, s, i) {
              var a = s;
              if (i !== r.SHADING) {
                a = n.Util.transform(a, e.baseTransform);
                this.matrix && (a = n.Util.transform(a, this.matrix));
              }
              var o = this.createPatternCanvas(e);
              var l = new DOMMatrix(a);
              l = l.translate(o.offsetX, o.offsetY);
              l = l.scale(1 / o.scaleX, 1 / o.scaleY);
              var c = t.createPattern(o.canvas, "repeat");
              c.setTransform(l);
              return c;
            }
          }], [{
            key: "MAX_PATTERN_SIZE",
            get: function get() {
              return (0, n.shadow)(this, "MAX_PATTERN_SIZE", 3e3);
            }
          }]);
          return TilingPattern;
        }();
        e.TilingPattern = TilingPattern;
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.applyMaskImageData = function applyMaskImageData(_ref51) {
          var t = _ref51.src,
            _ref51$srcPos = _ref51.srcPos,
            e = _ref51$srcPos === void 0 ? 0 : _ref51$srcPos,
            s = _ref51.dest,
            _ref51$destPos = _ref51.destPos,
            i = _ref51$destPos === void 0 ? 0 : _ref51$destPos,
            a = _ref51.width,
            r = _ref51.height,
            _ref51$inverseDecode = _ref51.inverseDecode,
            o = _ref51$inverseDecode === void 0 ? !1 : _ref51$inverseDecode;
          var l = n.FeatureTest.isLittleEndian ? 4278190080 : 255,
            _ref52 = o ? [0, l] : [l, 0],
            _ref53 = _slicedToArray(_ref52, 2),
            c = _ref53[0],
            h = _ref53[1],
            d = a >> 3,
            u = 7 & a,
            p = t.length;
          s = new Uint32Array(s.buffer);
          for (var _n36 = 0; _n36 < r; _n36++) {
            for (var _n37 = e + d; e < _n37; e++) {
              var _n38 = e < p ? t[e] : 255;
              s[i++] = 128 & _n38 ? h : c;
              s[i++] = 64 & _n38 ? h : c;
              s[i++] = 32 & _n38 ? h : c;
              s[i++] = 16 & _n38 ? h : c;
              s[i++] = 8 & _n38 ? h : c;
              s[i++] = 4 & _n38 ? h : c;
              s[i++] = 2 & _n38 ? h : c;
              s[i++] = 1 & _n38 ? h : c;
            }
            if (0 === u) continue;
            var _n39 = e < p ? t[e++] : 255;
            for (var _t81 = 0; _t81 < u; _t81++) s[i++] = _n39 & 1 << 7 - _t81 ? h : c;
          }
          return {
            srcPos: e,
            destPos: i
          };
        };
        var n = s(1);
      }, function (t, e) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.GlobalWorkerOptions = void 0;
        var s = Object.create(null);
        e.GlobalWorkerOptions = s;
        s.workerPort = void 0 === s.workerPort ? null : s.workerPort;
        s.workerSrc = void 0 === s.workerSrc ? "" : s.workerSrc;
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.MessageHandler = void 0;
        var n = s(1);
        var i = 1,
          a = 2,
          r = 1,
          o = 2,
          l = 3,
          c = 4,
          h = 5,
          d = 6,
          u = 7,
          p = 8;
        function wrapReason(t) {
          t instanceof Error || "object" == _typeof(t) && null !== t || (0, n.unreachable)('wrapReason: Expected "reason" to be a (possibly cloned) Error.');
          switch (t.name) {
            case "AbortException":
              return new n.AbortException(t.message);
            case "MissingPDFException":
              return new n.MissingPDFException(t.message);
            case "PasswordException":
              return new n.PasswordException(t.message, t.code);
            case "UnexpectedResponseException":
              return new n.UnexpectedResponseException(t.message, t.status);
            case "UnknownErrorException":
              return new n.UnknownErrorException(t.message, t.details);
            default:
              return new n.UnknownErrorException(t.message, t.toString());
          }
        }
        e.MessageHandler = /*#__PURE__*/function () {
          function MessageHandler(t, e, s) {
            var _this31 = this;
            _classCallCheck(this, MessageHandler);
            this.sourceName = t;
            this.targetName = e;
            this.comObj = s;
            this.callbackId = 1;
            this.streamId = 1;
            this.streamSinks = Object.create(null);
            this.streamControllers = Object.create(null);
            this.callbackCapabilities = Object.create(null);
            this.actionHandler = Object.create(null);
            this._onComObjOnMessage = function (t) {
              var e = t.data;
              if (e.targetName !== _this31.sourceName) return;
              if (e.stream) {
                _this31._processStreamMessage(e);
                return;
              }
              if (e.callback) {
                var _t82 = e.callbackId,
                  _s52 = _this31.callbackCapabilities[_t82];
                if (!_s52) throw new Error("Cannot resolve callback ".concat(_t82));
                delete _this31.callbackCapabilities[_t82];
                if (e.callback === i) _s52.resolve(e.data);else {
                  if (e.callback !== a) throw new Error("Unexpected callback case");
                  _s52.reject(wrapReason(e.reason));
                }
                return;
              }
              var n = _this31.actionHandler[e.action];
              if (!n) throw new Error("Unknown action from worker: ".concat(e.action));
              if (e.callbackId) {
                var _t83 = _this31.sourceName,
                  _r15 = e.sourceName;
                new Promise(function (t) {
                  t(n(e.data));
                }).then(function (n) {
                  s.postMessage({
                    sourceName: _t83,
                    targetName: _r15,
                    callback: i,
                    callbackId: e.callbackId,
                    data: n
                  });
                }, function (n) {
                  s.postMessage({
                    sourceName: _t83,
                    targetName: _r15,
                    callback: a,
                    callbackId: e.callbackId,
                    reason: wrapReason(n)
                  });
                });
              } else e.streamId ? _this31._createStreamSink(e) : n(e.data);
            };
            s.addEventListener("message", this._onComObjOnMessage);
          }
          _createClass(MessageHandler, [{
            key: "on",
            value: function on(t, e) {
              var s = this.actionHandler;
              if (s[t]) throw new Error("There is already an actionName called \"".concat(t, "\""));
              s[t] = e;
            }
          }, {
            key: "send",
            value: function send(t, e, s) {
              this.comObj.postMessage({
                sourceName: this.sourceName,
                targetName: this.targetName,
                action: t,
                data: e
              }, s);
            }
          }, {
            key: "sendWithPromise",
            value: function sendWithPromise(t, e, s) {
              var i = this.callbackId++,
                a = (0, n.createPromiseCapability)();
              this.callbackCapabilities[i] = a;
              try {
                this.comObj.postMessage({
                  sourceName: this.sourceName,
                  targetName: this.targetName,
                  action: t,
                  callbackId: i,
                  data: e
                }, s);
              } catch (t) {
                a.reject(t);
              }
              return a.promise;
            }
          }, {
            key: "sendWithStream",
            value: function sendWithStream(t, e, s, i) {
              var _this32 = this;
              var a = this.streamId++,
                o = this.sourceName,
                l = this.targetName,
                c = this.comObj;
              return new ReadableStream({
                start: function start(s) {
                  var r = (0, n.createPromiseCapability)();
                  _this32.streamControllers[a] = {
                    controller: s,
                    startCall: r,
                    pullCall: null,
                    cancelCall: null,
                    isClosed: !1
                  };
                  c.postMessage({
                    sourceName: o,
                    targetName: l,
                    action: t,
                    streamId: a,
                    data: e,
                    desiredSize: s.desiredSize
                  }, i);
                  return r.promise;
                },
                pull: function pull(t) {
                  var e = (0, n.createPromiseCapability)();
                  _this32.streamControllers[a].pullCall = e;
                  c.postMessage({
                    sourceName: o,
                    targetName: l,
                    stream: d,
                    streamId: a,
                    desiredSize: t.desiredSize
                  });
                  return e.promise;
                },
                cancel: function cancel(t) {
                  (0, n.assert)(t instanceof Error, "cancel must have a valid reason");
                  var e = (0, n.createPromiseCapability)();
                  _this32.streamControllers[a].cancelCall = e;
                  _this32.streamControllers[a].isClosed = !0;
                  c.postMessage({
                    sourceName: o,
                    targetName: l,
                    stream: r,
                    streamId: a,
                    reason: wrapReason(t)
                  });
                  return e.promise;
                }
              }, s);
            }
          }, {
            key: "_createStreamSink",
            value: function _createStreamSink(t) {
              var e = t.streamId,
                s = this.sourceName,
                i = t.sourceName,
                a = this.comObj,
                r = this,
                o = this.actionHandler[t.action],
                d = {
                  enqueue: function enqueue(t) {
                    var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
                    var o = arguments.length > 2 ? arguments[2] : undefined;
                    if (this.isCancelled) return;
                    var l = this.desiredSize;
                    this.desiredSize -= r;
                    if (l > 0 && this.desiredSize <= 0) {
                      this.sinkCapability = (0, n.createPromiseCapability)();
                      this.ready = this.sinkCapability.promise;
                    }
                    a.postMessage({
                      sourceName: s,
                      targetName: i,
                      stream: c,
                      streamId: e,
                      chunk: t
                    }, o);
                  },
                  close: function close() {
                    if (!this.isCancelled) {
                      this.isCancelled = !0;
                      a.postMessage({
                        sourceName: s,
                        targetName: i,
                        stream: l,
                        streamId: e
                      });
                      delete r.streamSinks[e];
                    }
                  },
                  error: function error(t) {
                    (0, n.assert)(t instanceof Error, "error must have a valid reason");
                    if (!this.isCancelled) {
                      this.isCancelled = !0;
                      a.postMessage({
                        sourceName: s,
                        targetName: i,
                        stream: h,
                        streamId: e,
                        reason: wrapReason(t)
                      });
                    }
                  },
                  sinkCapability: (0, n.createPromiseCapability)(),
                  onPull: null,
                  onCancel: null,
                  isCancelled: !1,
                  desiredSize: t.desiredSize,
                  ready: null
                };
              d.sinkCapability.resolve();
              d.ready = d.sinkCapability.promise;
              this.streamSinks[e] = d;
              new Promise(function (e) {
                e(o(t.data, d));
              }).then(function () {
                a.postMessage({
                  sourceName: s,
                  targetName: i,
                  stream: p,
                  streamId: e,
                  success: !0
                });
              }, function (t) {
                a.postMessage({
                  sourceName: s,
                  targetName: i,
                  stream: p,
                  streamId: e,
                  reason: wrapReason(t)
                });
              });
            }
          }, {
            key: "_processStreamMessage",
            value: function _processStreamMessage(t) {
              var e = t.streamId,
                s = this.sourceName,
                i = t.sourceName,
                a = this.comObj,
                g = this.streamControllers[e],
                m = this.streamSinks[e];
              switch (t.stream) {
                case p:
                  t.success ? g.startCall.resolve() : g.startCall.reject(wrapReason(t.reason));
                  break;
                case u:
                  t.success ? g.pullCall.resolve() : g.pullCall.reject(wrapReason(t.reason));
                  break;
                case d:
                  if (!m) {
                    a.postMessage({
                      sourceName: s,
                      targetName: i,
                      stream: u,
                      streamId: e,
                      success: !0
                    });
                    break;
                  }
                  m.desiredSize <= 0 && t.desiredSize > 0 && m.sinkCapability.resolve();
                  m.desiredSize = t.desiredSize;
                  new Promise(function (t) {
                    t(m.onPull && m.onPull());
                  }).then(function () {
                    a.postMessage({
                      sourceName: s,
                      targetName: i,
                      stream: u,
                      streamId: e,
                      success: !0
                    });
                  }, function (t) {
                    a.postMessage({
                      sourceName: s,
                      targetName: i,
                      stream: u,
                      streamId: e,
                      reason: wrapReason(t)
                    });
                  });
                  break;
                case c:
                  (0, n.assert)(g, "enqueue should have stream controller");
                  if (g.isClosed) break;
                  g.controller.enqueue(t.chunk);
                  break;
                case l:
                  (0, n.assert)(g, "close should have stream controller");
                  if (g.isClosed) break;
                  g.isClosed = !0;
                  g.controller.close();
                  this._deleteStreamController(g, e);
                  break;
                case h:
                  (0, n.assert)(g, "error should have stream controller");
                  g.controller.error(wrapReason(t.reason));
                  this._deleteStreamController(g, e);
                  break;
                case o:
                  t.success ? g.cancelCall.resolve() : g.cancelCall.reject(wrapReason(t.reason));
                  this._deleteStreamController(g, e);
                  break;
                case r:
                  if (!m) break;
                  new Promise(function (e) {
                    e(m.onCancel && m.onCancel(wrapReason(t.reason)));
                  }).then(function () {
                    a.postMessage({
                      sourceName: s,
                      targetName: i,
                      stream: o,
                      streamId: e,
                      success: !0
                    });
                  }, function (t) {
                    a.postMessage({
                      sourceName: s,
                      targetName: i,
                      stream: o,
                      streamId: e,
                      reason: wrapReason(t)
                    });
                  });
                  m.sinkCapability.reject(wrapReason(t.reason));
                  m.isCancelled = !0;
                  delete this.streamSinks[e];
                  break;
                default:
                  throw new Error("Unexpected stream case");
              }
            }
          }, {
            key: "_deleteStreamController",
            value: function () {
              var _deleteStreamController2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(t, e) {
                return _regeneratorRuntime().wrap(function _callee11$(_context11) {
                  while (1) switch (_context11.prev = _context11.next) {
                    case 0:
                      _context11.next = 2;
                      return Promise.allSettled([t.startCall && t.startCall.promise, t.pullCall && t.pullCall.promise, t.cancelCall && t.cancelCall.promise]);
                    case 2:
                      delete this.streamControllers[e];
                    case 3:
                    case "end":
                      return _context11.stop();
                  }
                }, _callee11, this);
              }));
              function _deleteStreamController(_x12, _x13) {
                return _deleteStreamController2.apply(this, arguments);
              }
              return _deleteStreamController;
            }()
          }, {
            key: "destroy",
            value: function destroy() {
              this.comObj.removeEventListener("message", this._onComObjOnMessage);
            }
          }]);
          return MessageHandler;
        }();
      }, function (t, e, s) {
        var _ht, _dt;
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.Metadata = void 0;
        var n = s(1);
        e.Metadata = (_ht = /*#__PURE__*/new WeakMap(), _dt = /*#__PURE__*/new WeakMap(), /*#__PURE__*/function () {
          function Metadata(_ref54) {
            var t = _ref54.parsedData,
              e = _ref54.rawData;
            _classCallCheck(this, Metadata);
            _classPrivateFieldInitSpec(this, _ht, {
              writable: true,
              value: void 0
            });
            _classPrivateFieldInitSpec(this, _dt, {
              writable: true,
              value: void 0
            });
            _classPrivateFieldSet(this, _ht, t);
            _classPrivateFieldSet(this, _dt, e);
          }
          _createClass(Metadata, [{
            key: "getRaw",
            value: function getRaw() {
              return _classPrivateFieldGet(this, _dt);
            }
          }, {
            key: "get",
            value: function get(t) {
              var _classPrivateFieldGet6;
              return (_classPrivateFieldGet6 = _classPrivateFieldGet(this, _ht).get(t)) !== null && _classPrivateFieldGet6 !== void 0 ? _classPrivateFieldGet6 : null;
            }
          }, {
            key: "getAll",
            value: function getAll() {
              return (0, n.objectFromMap)(_classPrivateFieldGet(this, _ht));
            }
          }, {
            key: "has",
            value: function has(t) {
              return _classPrivateFieldGet(this, _ht).has(t);
            }
          }]);
          return Metadata;
        }());
      }, function (t, e, s) {
        var _pt, _gt, _mt, _ft, _bt;
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.OptionalContentConfig = void 0;
        var n = s(1),
          i = s(8);
        var a = Symbol("INTERNAL");
        var _ut = /*#__PURE__*/new WeakMap();
        var OptionalContentGroup = /*#__PURE__*/function () {
          function OptionalContentGroup(t, e) {
            _classCallCheck(this, OptionalContentGroup);
            _classPrivateFieldInitSpec(this, _ut, {
              writable: true,
              value: !0
            });
            this.name = t;
            this.intent = e;
          }
          _createClass(OptionalContentGroup, [{
            key: "visible",
            get: function get() {
              return _classPrivateFieldGet(this, _ut);
            }
          }, {
            key: "_setVisible",
            value: function _setVisible(t, e) {
              t !== a && (0, n.unreachable)("Internal method `_setVisible` called.");
              _classPrivateFieldSet(this, _ut, e);
            }
          }]);
          return OptionalContentGroup;
        }();
        e.OptionalContentConfig = (_pt = /*#__PURE__*/new WeakMap(), _gt = /*#__PURE__*/new WeakMap(), _mt = /*#__PURE__*/new WeakMap(), _ft = /*#__PURE__*/new WeakMap(), _bt = /*#__PURE__*/new WeakSet(), /*#__PURE__*/function () {
          function OptionalContentConfig(_t84) {
            _classCallCheck(this, OptionalContentConfig);
            _classPrivateMethodInitSpec(this, _bt);
            _classPrivateFieldInitSpec(this, _pt, {
              writable: true,
              value: null
            });
            _classPrivateFieldInitSpec(this, _gt, {
              writable: true,
              value: new Map()
            });
            _classPrivateFieldInitSpec(this, _mt, {
              writable: true,
              value: null
            });
            _classPrivateFieldInitSpec(this, _ft, {
              writable: true,
              value: null
            });
            this.name = null;
            this.creator = null;
            if (null !== _t84) {
              this.name = _t84.name;
              this.creator = _t84.creator;
              _classPrivateFieldSet(this, _ft, _t84.order);
              var _iterator59 = _createForOfIteratorHelper(_t84.groups),
                _step59;
              try {
                for (_iterator59.s(); !(_step59 = _iterator59.n()).done;) {
                  var _e56 = _step59.value;
                  _classPrivateFieldGet(this, _gt).set(_e56.id, new OptionalContentGroup(_e56.name, _e56.intent));
                }
              } catch (err) {
                _iterator59.e(err);
              } finally {
                _iterator59.f();
              }
              if ("OFF" === _t84.baseState) {
                var _iterator60 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _gt).values()),
                  _step60;
                try {
                  for (_iterator60.s(); !(_step60 = _iterator60.n()).done;) {
                    var _t85 = _step60.value;
                    _t85._setVisible(a, !1);
                  }
                } catch (err) {
                  _iterator60.e(err);
                } finally {
                  _iterator60.f();
                }
              }
              var _iterator61 = _createForOfIteratorHelper(_t84.on),
                _step61;
              try {
                for (_iterator61.s(); !(_step61 = _iterator61.n()).done;) {
                  var _e57 = _step61.value;
                  _classPrivateFieldGet(this, _gt).get(_e57)._setVisible(a, !0);
                }
              } catch (err) {
                _iterator61.e(err);
              } finally {
                _iterator61.f();
              }
              var _iterator62 = _createForOfIteratorHelper(_t84.off),
                _step62;
              try {
                for (_iterator62.s(); !(_step62 = _iterator62.n()).done;) {
                  var _e58 = _step62.value;
                  _classPrivateFieldGet(this, _gt).get(_e58)._setVisible(a, !1);
                }
              } catch (err) {
                _iterator62.e(err);
              } finally {
                _iterator62.f();
              }
              _classPrivateFieldSet(this, _mt, this.getHash());
            }
          }
          _createClass(OptionalContentConfig, [{
            key: "isVisible",
            value: function isVisible(t) {
              if (0 === _classPrivateFieldGet(this, _gt).size) return !0;
              if (!t) {
                (0, n.warn)("Optional content group not defined.");
                return !0;
              }
              if ("OCG" === t.type) {
                if (!_classPrivateFieldGet(this, _gt).has(t.id)) {
                  (0, n.warn)("Optional content group not found: ".concat(t.id));
                  return !0;
                }
                return _classPrivateFieldGet(this, _gt).get(t.id).visible;
              }
              if ("OCMD" === t.type) {
                if (t.expression) return _classPrivateMethodGet(this, _bt, _bt2).call(this, t.expression);
                if (!t.policy || "AnyOn" === t.policy) {
                  var _iterator63 = _createForOfIteratorHelper(t.ids),
                    _step63;
                  try {
                    for (_iterator63.s(); !(_step63 = _iterator63.n()).done;) {
                      var _e59 = _step63.value;
                      if (!_classPrivateFieldGet(this, _gt).has(_e59)) {
                        (0, n.warn)("Optional content group not found: ".concat(_e59));
                        return !0;
                      }
                      if (_classPrivateFieldGet(this, _gt).get(_e59).visible) return !0;
                    }
                  } catch (err) {
                    _iterator63.e(err);
                  } finally {
                    _iterator63.f();
                  }
                  return !1;
                }
                if ("AllOn" === t.policy) {
                  var _iterator64 = _createForOfIteratorHelper(t.ids),
                    _step64;
                  try {
                    for (_iterator64.s(); !(_step64 = _iterator64.n()).done;) {
                      var _e60 = _step64.value;
                      if (!_classPrivateFieldGet(this, _gt).has(_e60)) {
                        (0, n.warn)("Optional content group not found: ".concat(_e60));
                        return !0;
                      }
                      if (!_classPrivateFieldGet(this, _gt).get(_e60).visible) return !1;
                    }
                  } catch (err) {
                    _iterator64.e(err);
                  } finally {
                    _iterator64.f();
                  }
                  return !0;
                }
                if ("AnyOff" === t.policy) {
                  var _iterator65 = _createForOfIteratorHelper(t.ids),
                    _step65;
                  try {
                    for (_iterator65.s(); !(_step65 = _iterator65.n()).done;) {
                      var _e61 = _step65.value;
                      if (!_classPrivateFieldGet(this, _gt).has(_e61)) {
                        (0, n.warn)("Optional content group not found: ".concat(_e61));
                        return !0;
                      }
                      if (!_classPrivateFieldGet(this, _gt).get(_e61).visible) return !0;
                    }
                  } catch (err) {
                    _iterator65.e(err);
                  } finally {
                    _iterator65.f();
                  }
                  return !1;
                }
                if ("AllOff" === t.policy) {
                  var _iterator66 = _createForOfIteratorHelper(t.ids),
                    _step66;
                  try {
                    for (_iterator66.s(); !(_step66 = _iterator66.n()).done;) {
                      var _e62 = _step66.value;
                      if (!_classPrivateFieldGet(this, _gt).has(_e62)) {
                        (0, n.warn)("Optional content group not found: ".concat(_e62));
                        return !0;
                      }
                      if (_classPrivateFieldGet(this, _gt).get(_e62).visible) return !1;
                    }
                  } catch (err) {
                    _iterator66.e(err);
                  } finally {
                    _iterator66.f();
                  }
                  return !0;
                }
                (0, n.warn)("Unknown optional content policy ".concat(t.policy, "."));
                return !0;
              }
              (0, n.warn)("Unknown group type ".concat(t.type, "."));
              return !0;
            }
          }, {
            key: "setVisibility",
            value: function setVisibility(t) {
              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;
              if (_classPrivateFieldGet(this, _gt).has(t)) {
                _classPrivateFieldGet(this, _gt).get(t)._setVisible(a, !!e);
                _classPrivateFieldSet(this, _pt, null);
              } else (0, n.warn)("Optional content group not found: ".concat(t));
            }
          }, {
            key: "hasInitialVisibility",
            get: function get() {
              return this.getHash() === _classPrivateFieldGet(this, _mt);
            }
          }, {
            key: "getOrder",
            value: function getOrder() {
              return _classPrivateFieldGet(this, _gt).size ? _classPrivateFieldGet(this, _ft) ? _classPrivateFieldGet(this, _ft).slice() : _toConsumableArray(_classPrivateFieldGet(this, _gt).keys()) : null;
            }
          }, {
            key: "getGroups",
            value: function getGroups() {
              return _classPrivateFieldGet(this, _gt).size > 0 ? (0, n.objectFromMap)(_classPrivateFieldGet(this, _gt)) : null;
            }
          }, {
            key: "getGroup",
            value: function getGroup(t) {
              return _classPrivateFieldGet(this, _gt).get(t) || null;
            }
          }, {
            key: "getHash",
            value: function getHash() {
              if (null !== _classPrivateFieldGet(this, _pt)) return _classPrivateFieldGet(this, _pt);
              var t = new i.MurmurHash3_64();
              var _iterator67 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _gt)),
                _step67;
              try {
                for (_iterator67.s(); !(_step67 = _iterator67.n()).done;) {
                  var _step67$value = _slicedToArray(_step67.value, 2),
                    _e63 = _step67$value[0],
                    _s53 = _step67$value[1];
                  t.update("".concat(_e63, ":").concat(_s53.visible));
                }
              } catch (err) {
                _iterator67.e(err);
              } finally {
                _iterator67.f();
              }
              return _classPrivateFieldSet(this, _pt, t.hexdigest());
            }
          }]);
          return OptionalContentConfig;
        }());
        function _bt2(t) {
          var e = t.length;
          if (e < 2) return !0;
          var s = t[0];
          for (var _i37 = 1; _i37 < e; _i37++) {
            var _e64 = t[_i37];
            var _a16 = void 0;
            if (Array.isArray(_e64)) _a16 = _classPrivateMethodGet(this, _bt, _bt2).call(this, _e64);else {
              if (!_classPrivateFieldGet(this, _gt).has(_e64)) {
                (0, n.warn)("Optional content group not found: ".concat(_e64));
                return !0;
              }
              _a16 = _classPrivateFieldGet(this, _gt).get(_e64).visible;
            }
            switch (s) {
              case "And":
                if (!_a16) return !1;
                break;
              case "Or":
                if (_a16) return !0;
                break;
              case "Not":
                return !_a16;
              default:
                return !0;
            }
          }
          return "And" === s;
        }
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.PDFDataTransportStream = void 0;
        var n = s(1),
          i = s(6);
        e.PDFDataTransportStream = /*#__PURE__*/function () {
          function PDFDataTransportStream(t, e) {
            var _this33 = this;
            _classCallCheck(this, PDFDataTransportStream);
            (0, n.assert)(e, 'PDFDataTransportStream - missing required "pdfDataRangeTransport" argument.');
            this._queuedChunks = [];
            this._progressiveDone = t.progressiveDone || !1;
            this._contentDispositionFilename = t.contentDispositionFilename || null;
            var s = t.initialData;
            if ((s === null || s === void 0 ? void 0 : s.length) > 0) {
              var _t86 = new Uint8Array(s).buffer;
              this._queuedChunks.push(_t86);
            }
            this._pdfDataRangeTransport = e;
            this._isStreamingSupported = !t.disableStream;
            this._isRangeSupported = !t.disableRange;
            this._contentLength = t.length;
            this._fullRequestReader = null;
            this._rangeReaders = [];
            this._pdfDataRangeTransport.addRangeListener(function (t, e) {
              _this33._onReceiveData({
                begin: t,
                chunk: e
              });
            });
            this._pdfDataRangeTransport.addProgressListener(function (t, e) {
              _this33._onProgress({
                loaded: t,
                total: e
              });
            });
            this._pdfDataRangeTransport.addProgressiveReadListener(function (t) {
              _this33._onReceiveData({
                chunk: t
              });
            });
            this._pdfDataRangeTransport.addProgressiveDoneListener(function () {
              _this33._onProgressiveDone();
            });
            this._pdfDataRangeTransport.transportReady();
          }
          _createClass(PDFDataTransportStream, [{
            key: "_onReceiveData",
            value: function _onReceiveData(t) {
              var e = new Uint8Array(t.chunk).buffer;
              if (void 0 === t.begin) this._fullRequestReader ? this._fullRequestReader._enqueue(e) : this._queuedChunks.push(e);else {
                var _s54 = this._rangeReaders.some(function (s) {
                  if (s._begin !== t.begin) return !1;
                  s._enqueue(e);
                  return !0;
                });
                (0, n.assert)(_s54, "_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.");
              }
            }
          }, {
            key: "_progressiveDataLength",
            get: function get() {
              var _this$_fullRequestRea, _this$_fullRequestRea2;
              return (_this$_fullRequestRea = (_this$_fullRequestRea2 = this._fullRequestReader) === null || _this$_fullRequestRea2 === void 0 ? void 0 : _this$_fullRequestRea2._loaded) !== null && _this$_fullRequestRea !== void 0 ? _this$_fullRequestRea : 0;
            }
          }, {
            key: "_onProgress",
            value: function _onProgress(t) {
              var _this$_rangeReaders$, _this$_rangeReaders$$, _this$_fullRequestRea3, _this$_fullRequestRea4;
              void 0 === t.total ? (_this$_rangeReaders$ = this._rangeReaders[0]) === null || _this$_rangeReaders$ === void 0 || (_this$_rangeReaders$$ = _this$_rangeReaders$.onProgress) === null || _this$_rangeReaders$$ === void 0 ? void 0 : _this$_rangeReaders$$.call(_this$_rangeReaders$, {
                loaded: t.loaded
              }) : (_this$_fullRequestRea3 = this._fullRequestReader) === null || _this$_fullRequestRea3 === void 0 || (_this$_fullRequestRea4 = _this$_fullRequestRea3.onProgress) === null || _this$_fullRequestRea4 === void 0 ? void 0 : _this$_fullRequestRea4.call(_this$_fullRequestRea3, {
                loaded: t.loaded,
                total: t.total
              });
            }
          }, {
            key: "_onProgressiveDone",
            value: function _onProgressiveDone() {
              var _this$_fullRequestRea5;
              (_this$_fullRequestRea5 = this._fullRequestReader) === null || _this$_fullRequestRea5 === void 0 ? void 0 : _this$_fullRequestRea5.progressiveDone();
              this._progressiveDone = !0;
            }
          }, {
            key: "_removeRangeReader",
            value: function _removeRangeReader(t) {
              var e = this._rangeReaders.indexOf(t);
              e >= 0 && this._rangeReaders.splice(e, 1);
            }
          }, {
            key: "getFullReader",
            value: function getFullReader() {
              (0, n.assert)(!this._fullRequestReader, "PDFDataTransportStream.getFullReader can only be called once.");
              var t = this._queuedChunks;
              this._queuedChunks = null;
              return new PDFDataTransportStreamReader(this, t, this._progressiveDone, this._contentDispositionFilename);
            }
          }, {
            key: "getRangeReader",
            value: function getRangeReader(t, e) {
              if (e <= this._progressiveDataLength) return null;
              var s = new PDFDataTransportStreamRangeReader(this, t, e);
              this._pdfDataRangeTransport.requestDataRange(t, e);
              this._rangeReaders.push(s);
              return s;
            }
          }, {
            key: "cancelAllRequests",
            value: function cancelAllRequests(t) {
              var _this$_fullRequestRea6;
              (_this$_fullRequestRea6 = this._fullRequestReader) === null || _this$_fullRequestRea6 === void 0 ? void 0 : _this$_fullRequestRea6.cancel(t);
              var _iterator68 = _createForOfIteratorHelper(this._rangeReaders.slice(0)),
                _step68;
              try {
                for (_iterator68.s(); !(_step68 = _iterator68.n()).done;) {
                  var _e65 = _step68.value;
                  _e65.cancel(t);
                }
              } catch (err) {
                _iterator68.e(err);
              } finally {
                _iterator68.f();
              }
              this._pdfDataRangeTransport.abort();
            }
          }]);
          return PDFDataTransportStream;
        }();
        var PDFDataTransportStreamReader = /*#__PURE__*/function () {
          function PDFDataTransportStreamReader(t, e) {
            var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
            var n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
            _classCallCheck(this, PDFDataTransportStreamReader);
            this._stream = t;
            this._done = s || !1;
            this._filename = (0, i.isPdfFile)(n) ? n : null;
            this._queuedChunks = e || [];
            this._loaded = 0;
            var _iterator69 = _createForOfIteratorHelper(this._queuedChunks),
              _step69;
            try {
              for (_iterator69.s(); !(_step69 = _iterator69.n()).done;) {
                var _t87 = _step69.value;
                this._loaded += _t87.byteLength;
              }
            } catch (err) {
              _iterator69.e(err);
            } finally {
              _iterator69.f();
            }
            this._requests = [];
            this._headersReady = Promise.resolve();
            t._fullRequestReader = this;
            this.onProgress = null;
          }
          _createClass(PDFDataTransportStreamReader, [{
            key: "_enqueue",
            value: function _enqueue(t) {
              if (!this._done) {
                if (this._requests.length > 0) {
                  this._requests.shift().resolve({
                    value: t,
                    done: !1
                  });
                } else this._queuedChunks.push(t);
                this._loaded += t.byteLength;
              }
            }
          }, {
            key: "headersReady",
            get: function get() {
              return this._headersReady;
            }
          }, {
            key: "filename",
            get: function get() {
              return this._filename;
            }
          }, {
            key: "isRangeSupported",
            get: function get() {
              return this._stream._isRangeSupported;
            }
          }, {
            key: "isStreamingSupported",
            get: function get() {
              return this._stream._isStreamingSupported;
            }
          }, {
            key: "contentLength",
            get: function get() {
              return this._stream._contentLength;
            }
          }, {
            key: "read",
            value: function () {
              var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {
                var t;
                return _regeneratorRuntime().wrap(function _callee12$(_context12) {
                  while (1) switch (_context12.prev = _context12.next) {
                    case 0:
                      if (!(this._queuedChunks.length > 0)) {
                        _context12.next = 2;
                        break;
                      }
                      return _context12.abrupt("return", {
                        value: this._queuedChunks.shift(),
                        done: !1
                      });
                    case 2:
                      if (!this._done) {
                        _context12.next = 4;
                        break;
                      }
                      return _context12.abrupt("return", {
                        value: void 0,
                        done: !0
                      });
                    case 4:
                      t = (0, n.createPromiseCapability)();
                      this._requests.push(t);
                      return _context12.abrupt("return", t.promise);
                    case 7:
                    case "end":
                      return _context12.stop();
                  }
                }, _callee12, this);
              }));
              function read() {
                return _read.apply(this, arguments);
              }
              return read;
            }()
          }, {
            key: "cancel",
            value: function cancel(t) {
              this._done = !0;
              var _iterator70 = _createForOfIteratorHelper(this._requests),
                _step70;
              try {
                for (_iterator70.s(); !(_step70 = _iterator70.n()).done;) {
                  var _t88 = _step70.value;
                  _t88.resolve({
                    value: void 0,
                    done: !0
                  });
                }
              } catch (err) {
                _iterator70.e(err);
              } finally {
                _iterator70.f();
              }
              this._requests.length = 0;
            }
          }, {
            key: "progressiveDone",
            value: function progressiveDone() {
              this._done || (this._done = !0);
            }
          }]);
          return PDFDataTransportStreamReader;
        }();
        var PDFDataTransportStreamRangeReader = /*#__PURE__*/function () {
          function PDFDataTransportStreamRangeReader(t, e, s) {
            _classCallCheck(this, PDFDataTransportStreamRangeReader);
            this._stream = t;
            this._begin = e;
            this._end = s;
            this._queuedChunk = null;
            this._requests = [];
            this._done = !1;
            this.onProgress = null;
          }
          _createClass(PDFDataTransportStreamRangeReader, [{
            key: "_enqueue",
            value: function _enqueue(t) {
              if (!this._done) {
                if (0 === this._requests.length) this._queuedChunk = t;else {
                  this._requests.shift().resolve({
                    value: t,
                    done: !1
                  });
                  var _iterator71 = _createForOfIteratorHelper(this._requests),
                    _step71;
                  try {
                    for (_iterator71.s(); !(_step71 = _iterator71.n()).done;) {
                      var _t89 = _step71.value;
                      _t89.resolve({
                        value: void 0,
                        done: !0
                      });
                    }
                  } catch (err) {
                    _iterator71.e(err);
                  } finally {
                    _iterator71.f();
                  }
                  this._requests.length = 0;
                }
                this._done = !0;
                this._stream._removeRangeReader(this);
              }
            }
          }, {
            key: "isStreamingSupported",
            get: function get() {
              return !1;
            }
          }, {
            key: "read",
            value: function () {
              var _read2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {
                var _t90, t;
                return _regeneratorRuntime().wrap(function _callee13$(_context13) {
                  while (1) switch (_context13.prev = _context13.next) {
                    case 0:
                      if (!this._queuedChunk) {
                        _context13.next = 4;
                        break;
                      }
                      _t90 = this._queuedChunk;
                      this._queuedChunk = null;
                      return _context13.abrupt("return", {
                        value: _t90,
                        done: !1
                      });
                    case 4:
                      if (!this._done) {
                        _context13.next = 6;
                        break;
                      }
                      return _context13.abrupt("return", {
                        value: void 0,
                        done: !0
                      });
                    case 6:
                      t = (0, n.createPromiseCapability)();
                      this._requests.push(t);
                      return _context13.abrupt("return", t.promise);
                    case 9:
                    case "end":
                      return _context13.stop();
                  }
                }, _callee13, this);
              }));
              function read() {
                return _read2.apply(this, arguments);
              }
              return read;
            }()
          }, {
            key: "cancel",
            value: function cancel(t) {
              this._done = !0;
              var _iterator72 = _createForOfIteratorHelper(this._requests),
                _step72;
              try {
                for (_iterator72.s(); !(_step72 = _iterator72.n()).done;) {
                  var _t91 = _step72.value;
                  _t91.resolve({
                    value: void 0,
                    done: !0
                  });
                }
              } catch (err) {
                _iterator72.e(err);
              } finally {
                _iterator72.f();
              }
              this._requests.length = 0;
              this._stream._removeRangeReader(this);
            }
          }]);
          return PDFDataTransportStreamRangeReader;
        }();
      }, function (t, e) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.XfaText = void 0;
        var XfaText = /*#__PURE__*/function () {
          function XfaText() {
            _classCallCheck(this, XfaText);
          }
          _createClass(XfaText, null, [{
            key: "textContent",
            value: function textContent(t) {
              var e = [],
                s = {
                  items: e,
                  styles: Object.create(null)
                };
              !function walk(t) {
                if (!t) return;
                var s = null;
                var n = t.name;
                if ("#text" === n) s = t.value;else {
                  var _t$attributes;
                  if (!XfaText.shouldBuildText(n)) return;
                  t !== null && t !== void 0 && (_t$attributes = t.attributes) !== null && _t$attributes !== void 0 && _t$attributes.textContent ? s = t.attributes.textContent : t.value && (s = t.value);
                }
                null !== s && e.push({
                  str: s
                });
                if (t.children) {
                  var _iterator73 = _createForOfIteratorHelper(t.children),
                    _step73;
                  try {
                    for (_iterator73.s(); !(_step73 = _iterator73.n()).done;) {
                      var _e66 = _step73.value;
                      walk(_e66);
                    }
                  } catch (err) {
                    _iterator73.e(err);
                  } finally {
                    _iterator73.f();
                  }
                }
              }(t);
              return s;
            }
          }, {
            key: "shouldBuildText",
            value: function shouldBuildText(t) {
              return !("textarea" === t || "input" === t || "option" === t || "select" === t);
            }
          }]);
          return XfaText;
        }();
        e.XfaText = XfaText;
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.NodeStandardFontDataFactory = e.NodeCanvasFactory = e.NodeCMapReaderFactory = void 0;
        var n = s(7);
        var fetchData = function fetchData(t) {
          return new Promise(function (e, s) {
            require("fs").readFile(t, function (t, n) {
              !t && n ? e(new Uint8Array(n)) : s(new Error(t));
            });
          });
        };
        var NodeCanvasFactory = /*#__PURE__*/function (_n$BaseCanvasFactory2) {
          _inherits(NodeCanvasFactory, _n$BaseCanvasFactory2);
          var _super17 = _createSuper(NodeCanvasFactory);
          function NodeCanvasFactory() {
            _classCallCheck(this, NodeCanvasFactory);
            return _super17.apply(this, arguments);
          }
          _createClass(NodeCanvasFactory, [{
            key: "_createCanvas",
            value: function _createCanvas(t, e) {
              return require("canvas").createCanvas(t, e);
            }
          }]);
          return NodeCanvasFactory;
        }(n.BaseCanvasFactory);
        e.NodeCanvasFactory = NodeCanvasFactory;
        var NodeCMapReaderFactory = /*#__PURE__*/function (_n$BaseCMapReaderFact2) {
          _inherits(NodeCMapReaderFactory, _n$BaseCMapReaderFact2);
          var _super18 = _createSuper(NodeCMapReaderFactory);
          function NodeCMapReaderFactory() {
            _classCallCheck(this, NodeCMapReaderFactory);
            return _super18.apply(this, arguments);
          }
          _createClass(NodeCMapReaderFactory, [{
            key: "_fetchData",
            value: function _fetchData(t, e) {
              return fetchData(t).then(function (t) {
                return {
                  cMapData: t,
                  compressionType: e
                };
              });
            }
          }]);
          return NodeCMapReaderFactory;
        }(n.BaseCMapReaderFactory);
        e.NodeCMapReaderFactory = NodeCMapReaderFactory;
        var NodeStandardFontDataFactory = /*#__PURE__*/function (_n$BaseStandardFontDa2) {
          _inherits(NodeStandardFontDataFactory, _n$BaseStandardFontDa2);
          var _super19 = _createSuper(NodeStandardFontDataFactory);
          function NodeStandardFontDataFactory() {
            _classCallCheck(this, NodeStandardFontDataFactory);
            return _super19.apply(this, arguments);
          }
          _createClass(NodeStandardFontDataFactory, [{
            key: "_fetchData",
            value: function _fetchData(t) {
              return fetchData(t);
            }
          }]);
          return NodeStandardFontDataFactory;
        }(n.BaseStandardFontDataFactory);
        e.NodeStandardFontDataFactory = NodeStandardFontDataFactory;
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.TextLayerRenderTask = void 0;
        e.renderTextLayer = function renderTextLayer(t) {
          if (!t.textContentSource && (t.textContent || t.textContentStream)) {
            (0, i.deprecated)("The TextLayerRender `textContent`/`textContentStream` parameters will be removed in the future, please use `textContentSource` instead.");
            t.textContentSource = t.textContent || t.textContentStream;
          }
          var e = new TextLayerRenderTask(t);
          e._render();
          return e;
        };
        e.updateTextLayer = function updateTextLayer(_ref55) {
          var t = _ref55.container,
            e = _ref55.viewport,
            s = _ref55.textDivs,
            n = _ref55.textDivProperties,
            a = _ref55.isOffscreenCanvasSupported,
            _ref55$mustRotate = _ref55.mustRotate,
            r = _ref55$mustRotate === void 0 ? !0 : _ref55$mustRotate,
            _ref55$mustRescale = _ref55.mustRescale,
            o = _ref55$mustRescale === void 0 ? !0 : _ref55$mustRescale;
          r && (0, i.setLayerDimensions)(t, {
            rotation: e.rotation
          });
          if (o) {
            var _t92 = getCtx(0, a),
              _i38 = {
                prevFontSize: null,
                prevFontFamily: null,
                div: null,
                scale: e.scale * (globalThis.devicePixelRatio || 1),
                properties: null,
                ctx: _t92
              };
            var _iterator74 = _createForOfIteratorHelper(s),
              _step74;
            try {
              for (_iterator74.s(); !(_step74 = _iterator74.n()).done;) {
                var _t93 = _step74.value;
                _i38.properties = n.get(_t93);
                _i38.div = _t93;
                layout(_i38);
              }
            } catch (err) {
              _iterator74.e(err);
            } finally {
              _iterator74.f();
            }
          }
        };
        var n = s(1),
          i = s(6);
        var a = 30,
          r = new Map();
        function getCtx(t, e) {
          var s;
          if (e && n.FeatureTest.isOffscreenCanvasSupported) s = new OffscreenCanvas(t, t).getContext("2d", {
            alpha: !1
          });else {
            var _e67 = document.createElement("canvas");
            _e67.width = _e67.height = t;
            s = _e67.getContext("2d", {
              alpha: !1
            });
          }
          return s;
        }
        function appendText(t, e, s) {
          var i = document.createElement("span"),
            o = {
              angle: 0,
              canvasWidth: 0,
              hasText: "" !== e.str,
              hasEOL: e.hasEOL,
              fontSize: 0
            };
          t._textDivs.push(i);
          var l = n.Util.transform(t._transform, e.transform);
          var c = Math.atan2(l[1], l[0]);
          var h = s[e.fontName];
          h.vertical && (c += Math.PI / 2);
          var d = Math.hypot(l[2], l[3]),
            u = d * function getAscent(t, e) {
              var s = r.get(t);
              if (s) return s;
              var n = getCtx(a, e);
              n.font = "30px ".concat(t);
              var i = n.measureText("");
              var o = i.fontBoundingBoxAscent,
                l = Math.abs(i.fontBoundingBoxDescent);
              if (o) {
                var _e68 = o / (o + l);
                r.set(t, _e68);
                n.canvas.width = n.canvas.height = 0;
                return _e68;
              }
              n.strokeStyle = "red";
              n.clearRect(0, 0, a, a);
              n.strokeText("g", 0, 0);
              var c = n.getImageData(0, 0, a, a).data;
              l = 0;
              for (var _t94 = c.length - 1 - 3; _t94 >= 0; _t94 -= 4) if (c[_t94] > 0) {
                l = Math.ceil(_t94 / 4 / a);
                break;
              }
              n.clearRect(0, 0, a, a);
              n.strokeText("A", 0, a);
              c = n.getImageData(0, 0, a, a).data;
              o = 0;
              for (var _t95 = 0, _e69 = c.length; _t95 < _e69; _t95 += 4) if (c[_t95] > 0) {
                o = a - Math.floor(_t95 / 4 / a);
                break;
              }
              n.canvas.width = n.canvas.height = 0;
              if (o) {
                var _e70 = o / (o + l);
                r.set(t, _e70);
                return _e70;
              }
              r.set(t, .8);
              return .8;
            }(h.fontFamily, t._isOffscreenCanvasSupported);
          var p, g;
          if (0 === c) {
            p = l[4];
            g = l[5] - u;
          } else {
            p = l[4] + u * Math.sin(c);
            g = l[5] - u * Math.cos(c);
          }
          var m = "calc(var(--scale-factor)*",
            f = i.style;
          if (t._container === t._rootContainer) {
            f.left = "".concat((100 * p / t._pageWidth).toFixed(2), "%");
            f.top = "".concat((100 * g / t._pageHeight).toFixed(2), "%");
          } else {
            f.left = "".concat(m).concat(p.toFixed(2), "px)");
            f.top = "".concat(m).concat(g.toFixed(2), "px)");
          }
          f.fontSize = "".concat(m).concat(d.toFixed(2), "px)");
          f.fontFamily = h.fontFamily;
          o.fontSize = d;
          i.setAttribute("role", "presentation");
          i.textContent = e.str;
          i.dir = e.dir;
          t._fontInspectorEnabled && (i.dataset.fontName = e.fontName);
          0 !== c && (o.angle = c * (180 / Math.PI));
          var b = !1;
          if (e.str.length > 1) b = !0;else if (" " !== e.str && e.transform[0] !== e.transform[3]) {
            var _t96 = Math.abs(e.transform[0]),
              _s55 = Math.abs(e.transform[3]);
            _t96 !== _s55 && Math.max(_t96, _s55) / Math.min(_t96, _s55) > 1.5 && (b = !0);
          }
          b && (o.canvasWidth = h.vertical ? e.height : e.width);
          t._textDivProperties.set(i, o);
          t._isReadableStream && t._layoutText(i);
        }
        function layout(t) {
          var e = t.div,
            s = t.scale,
            n = t.properties,
            i = t.ctx,
            a = t.prevFontSize,
            r = t.prevFontFamily,
            o = e.style;
          var l = "";
          if (0 !== n.canvasWidth && n.hasText) {
            var c = o.fontFamily,
              h = n.canvasWidth,
              d = n.fontSize;
            if (a !== d || r !== c) {
              i.font = "".concat(d * s, "px ").concat(c);
              t.prevFontSize = d;
              t.prevFontFamily = c;
            }
            var _i$measureText = i.measureText(e.textContent),
              u = _i$measureText.width;
            u > 0 && (l = "scaleX(".concat(h * s / u, ")"));
          }
          0 !== n.angle && (l = "rotate(".concat(n.angle, "deg) ").concat(l));
          l.length > 0 && (o.transform = l);
        }
        var TextLayerRenderTask = /*#__PURE__*/function () {
          function TextLayerRenderTask(_ref56) {
            var _globalThis$FontInspe2,
              _this34 = this;
            var t = _ref56.textContentSource,
              e = _ref56.container,
              s = _ref56.viewport,
              a = _ref56.textDivs,
              r = _ref56.textDivProperties,
              o = _ref56.textContentItemsStr,
              l = _ref56.isOffscreenCanvasSupported;
            _classCallCheck(this, TextLayerRenderTask);
            this._textContentSource = t;
            this._isReadableStream = t instanceof ReadableStream;
            this._container = this._rootContainer = e;
            this._textDivs = a || [];
            this._textContentItemsStr = o || [];
            this._fontInspectorEnabled = !!((_globalThis$FontInspe2 = globalThis.FontInspector) !== null && _globalThis$FontInspe2 !== void 0 && _globalThis$FontInspe2.enabled);
            this._reader = null;
            this._textDivProperties = r || new WeakMap();
            this._canceled = !1;
            this._capability = (0, n.createPromiseCapability)();
            this._layoutTextParams = {
              prevFontSize: null,
              prevFontFamily: null,
              div: null,
              scale: s.scale * (globalThis.devicePixelRatio || 1),
              properties: null,
              ctx: getCtx(0, l)
            };
            var _s$rawDims = s.rawDims,
              c = _s$rawDims.pageWidth,
              h = _s$rawDims.pageHeight,
              d = _s$rawDims.pageX,
              u = _s$rawDims.pageY;
            this._transform = [1, 0, 0, -1, -d, u + h];
            this._pageWidth = c;
            this._pageHeight = h;
            (0, i.setLayerDimensions)(e, s);
            this._capability.promise["finally"](function () {
              _this34._layoutTextParams = null;
            })["catch"](function () {});
          }
          _createClass(TextLayerRenderTask, [{
            key: "promise",
            get: function get() {
              return this._capability.promise;
            }
          }, {
            key: "cancel",
            value: function cancel() {
              this._canceled = !0;
              if (this._reader) {
                this._reader.cancel(new n.AbortException("TextLayer task cancelled."))["catch"](function () {});
                this._reader = null;
              }
              this._capability.reject(new n.AbortException("TextLayer task cancelled."));
            }
          }, {
            key: "_processItems",
            value: function _processItems(t, e) {
              var _iterator75 = _createForOfIteratorHelper(t),
                _step75;
              try {
                for (_iterator75.s(); !(_step75 = _iterator75.n()).done;) {
                  var _s56 = _step75.value;
                  if (void 0 !== _s56.str) {
                    this._textContentItemsStr.push(_s56.str);
                    appendText(this, _s56, e);
                  } else if ("beginMarkedContentProps" === _s56.type || "beginMarkedContent" === _s56.type) {
                    var _t97 = this._container;
                    this._container = document.createElement("span");
                    this._container.classList.add("markedContent");
                    null !== _s56.id && this._container.setAttribute("id", "".concat(_s56.id));
                    _t97.append(this._container);
                  } else "endMarkedContent" === _s56.type && (this._container = this._container.parentNode);
                }
              } catch (err) {
                _iterator75.e(err);
              } finally {
                _iterator75.f();
              }
            }
          }, {
            key: "_layoutText",
            value: function _layoutText(t) {
              var e = this._layoutTextParams.properties = this._textDivProperties.get(t);
              this._layoutTextParams.div = t;
              layout(this._layoutTextParams);
              e.hasText && this._container.append(t);
              if (e.hasEOL) {
                var _t98 = document.createElement("br");
                _t98.setAttribute("role", "presentation");
                this._container.append(_t98);
              }
            }
          }, {
            key: "_render",
            value: function _render() {
              var _this35 = this;
              var t = (0, n.createPromiseCapability)();
              var e = Object.create(null);
              if (this._isReadableStream) {
                var pump = function pump() {
                  _this35._reader.read().then(function (_ref57) {
                    var s = _ref57.value,
                      n = _ref57.done;
                    if (n) t.resolve();else {
                      Object.assign(e, s.styles);
                      _this35._processItems(s.items, e);
                      pump();
                    }
                  }, t.reject);
                };
                this._reader = this._textContentSource.getReader();
                pump();
              } else {
                if (!this._textContentSource) throw new Error('No "textContentSource" parameter specified.');
                {
                  var _this$_textContentSou = this._textContentSource,
                    _e71 = _this$_textContentSou.items,
                    _s57 = _this$_textContentSou.styles;
                  this._processItems(_e71, _s57);
                  t.resolve();
                }
              }
              t.promise.then(function () {
                e = null;
                !function render(t) {
                  if (t._canceled) return;
                  var e = t._textDivs,
                    s = t._capability;
                  if (e.length > 1e5) s.resolve();else {
                    if (!t._isReadableStream) {
                      var _iterator76 = _createForOfIteratorHelper(e),
                        _step76;
                      try {
                        for (_iterator76.s(); !(_step76 = _iterator76.n()).done;) {
                          var _s58 = _step76.value;
                          t._layoutText(_s58);
                        }
                      } catch (err) {
                        _iterator76.e(err);
                      } finally {
                        _iterator76.f();
                      }
                    }
                    s.resolve();
                  }
                }(_this35);
              }, this._capability.reject);
            }
          }]);
          return TextLayerRenderTask;
        }();
        e.TextLayerRenderTask = TextLayerRenderTask;
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.AnnotationEditorLayer = void 0;
        var n = s(1),
          i = s(5),
          a = s(23),
          r = s(24),
          o = s(6);
        var _At = /*#__PURE__*/new WeakMap();
        var _t99 = /*#__PURE__*/new WeakMap();
        var _yt = /*#__PURE__*/new WeakMap();
        var _vt = /*#__PURE__*/new WeakMap();
        var _St = /*#__PURE__*/new WeakMap();
        var _xt = /*#__PURE__*/new WeakMap();
        var _Et = /*#__PURE__*/new WeakMap();
        var _Ct = /*#__PURE__*/new WeakMap();
        var _wt = /*#__PURE__*/new WeakSet();
        var _kt = /*#__PURE__*/new WeakSet();
        var _Tt = /*#__PURE__*/new WeakSet();
        var _Pt = /*#__PURE__*/new WeakSet();
        var AnnotationEditorLayer = /*#__PURE__*/function () {
          function AnnotationEditorLayer(_t100) {
            _classCallCheck(this, AnnotationEditorLayer);
            _classPrivateMethodInitSpec(this, _Pt);
            _classPrivateMethodInitSpec(this, _Tt);
            _classPrivateMethodInitSpec(this, _kt);
            _classPrivateMethodInitSpec(this, _wt);
            _classPrivateFieldInitSpec(this, _At, {
              writable: true,
              value: void 0
            });
            _classPrivateFieldInitSpec(this, _t99, {
              writable: true,
              value: !1
            });
            _classPrivateFieldInitSpec(this, _yt, {
              writable: true,
              value: this.pointerup.bind(this)
            });
            _classPrivateFieldInitSpec(this, _vt, {
              writable: true,
              value: this.pointerdown.bind(this)
            });
            _classPrivateFieldInitSpec(this, _St, {
              writable: true,
              value: new Map()
            });
            _classPrivateFieldInitSpec(this, _xt, {
              writable: true,
              value: !1
            });
            _classPrivateFieldInitSpec(this, _Et, {
              writable: true,
              value: !1
            });
            _classPrivateFieldInitSpec(this, _Ct, {
              writable: true,
              value: void 0
            });
            if (!AnnotationEditorLayer._initialized) {
              AnnotationEditorLayer._initialized = !0;
              a.FreeTextEditor.initialize(_t100.l10n);
              r.InkEditor.initialize(_t100.l10n);
            }
            _t100.uiManager.registerEditorTypes([a.FreeTextEditor, r.InkEditor]);
            _classPrivateFieldSet(this, _Ct, _t100.uiManager);
            this.pageIndex = _t100.pageIndex;
            this.div = _t100.div;
            _classPrivateFieldSet(this, _At, _t100.accessibilityManager);
            _classPrivateFieldGet(this, _Ct).addLayer(this);
          }
          _createClass(AnnotationEditorLayer, [{
            key: "updateToolbar",
            value: function updateToolbar(t) {
              _classPrivateFieldGet(this, _Ct).updateToolbar(t);
            }
          }, {
            key: "updateMode",
            value: function updateMode() {
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _classPrivateFieldGet(this, _Ct).getMode();
              _classPrivateMethodGet(this, _Pt, _Pt2).call(this);
              if (t === n.AnnotationEditorType.INK) {
                this.addInkEditorIfNeeded(!1);
                this.disableClick();
              } else this.enableClick();
              _classPrivateFieldGet(this, _Ct).unselectAll();
              this.div.classList.toggle("freeTextEditing", t === n.AnnotationEditorType.FREETEXT);
              this.div.classList.toggle("inkEditing", t === n.AnnotationEditorType.INK);
            }
          }, {
            key: "addInkEditorIfNeeded",
            value: function addInkEditorIfNeeded(t) {
              if (!t && _classPrivateFieldGet(this, _Ct).getMode() !== n.AnnotationEditorType.INK) return;
              if (!t) {
                var _iterator77 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _St).values()),
                  _step77;
                try {
                  for (_iterator77.s(); !(_step77 = _iterator77.n()).done;) {
                    var _t101 = _step77.value;
                    if (_t101.isEmpty()) {
                      _t101.setInBackground();
                      return;
                    }
                  }
                } catch (err) {
                  _iterator77.e(err);
                } finally {
                  _iterator77.f();
                }
              }
              _classPrivateMethodGet(this, _Tt, _Tt2).call(this, {
                offsetX: 0,
                offsetY: 0
              }).setInBackground();
            }
          }, {
            key: "setEditingState",
            value: function setEditingState(t) {
              _classPrivateFieldGet(this, _Ct).setEditingState(t);
            }
          }, {
            key: "addCommands",
            value: function addCommands(t) {
              _classPrivateFieldGet(this, _Ct).addCommands(t);
            }
          }, {
            key: "enable",
            value: function enable() {
              this.div.style.pointerEvents = "auto";
              var _iterator78 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _St).values()),
                _step78;
              try {
                for (_iterator78.s(); !(_step78 = _iterator78.n()).done;) {
                  var _t102 = _step78.value;
                  _t102.enableEditing();
                }
              } catch (err) {
                _iterator78.e(err);
              } finally {
                _iterator78.f();
              }
            }
          }, {
            key: "disable",
            value: function disable() {
              this.div.style.pointerEvents = "none";
              var _iterator79 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _St).values()),
                _step79;
              try {
                for (_iterator79.s(); !(_step79 = _iterator79.n()).done;) {
                  var _t103 = _step79.value;
                  _t103.disableEditing();
                }
              } catch (err) {
                _iterator79.e(err);
              } finally {
                _iterator79.f();
              }
            }
          }, {
            key: "setActiveEditor",
            value: function setActiveEditor(t) {
              _classPrivateFieldGet(this, _Ct).getActive() !== t && _classPrivateFieldGet(this, _Ct).setActiveEditor(t);
            }
          }, {
            key: "enableClick",
            value: function enableClick() {
              this.div.addEventListener("pointerdown", _classPrivateFieldGet(this, _vt));
              this.div.addEventListener("pointerup", _classPrivateFieldGet(this, _yt));
            }
          }, {
            key: "disableClick",
            value: function disableClick() {
              this.div.removeEventListener("pointerdown", _classPrivateFieldGet(this, _vt));
              this.div.removeEventListener("pointerup", _classPrivateFieldGet(this, _yt));
            }
          }, {
            key: "attach",
            value: function attach(t) {
              _classPrivateFieldGet(this, _St).set(t.id, t);
            }
          }, {
            key: "detach",
            value: function detach(t) {
              var _classPrivateFieldGet7;
              _classPrivateFieldGet(this, _St)["delete"](t.id);
              (_classPrivateFieldGet7 = _classPrivateFieldGet(this, _At)) === null || _classPrivateFieldGet7 === void 0 ? void 0 : _classPrivateFieldGet7.removePointerInTextLayer(t.contentDiv);
            }
          }, {
            key: "remove",
            value: function remove(t) {
              var _this36 = this;
              _classPrivateFieldGet(this, _Ct).removeEditor(t);
              this.detach(t);
              t.div.style.display = "none";
              setTimeout(function () {
                t.div.style.display = "";
                t.div.remove();
                t.isAttachedToDOM = !1;
                document.activeElement === document.body && _classPrivateFieldGet(_this36, _Ct).focusMainContainer();
              }, 0);
              _classPrivateFieldGet(this, _Et) || this.addInkEditorIfNeeded(!1);
            }
          }, {
            key: "add",
            value: function add(t) {
              _classPrivateMethodGet(this, _wt, _wt2).call(this, t);
              _classPrivateFieldGet(this, _Ct).addEditor(t);
              this.attach(t);
              if (!t.isAttachedToDOM) {
                var _e72 = t.render();
                this.div.append(_e72);
                t.isAttachedToDOM = !0;
              }
              this.moveEditorInDOM(t);
              t.onceAdded();
              _classPrivateFieldGet(this, _Ct).addToAnnotationStorage(t);
            }
          }, {
            key: "moveEditorInDOM",
            value: function moveEditorInDOM(t) {
              var _classPrivateFieldGet8;
              (_classPrivateFieldGet8 = _classPrivateFieldGet(this, _At)) === null || _classPrivateFieldGet8 === void 0 ? void 0 : _classPrivateFieldGet8.moveElementInDOM(this.div, t.div, t.contentDiv, !0);
            }
          }, {
            key: "addOrRebuild",
            value: function addOrRebuild(t) {
              t.needsToBeRebuilt() ? t.rebuild() : this.add(t);
            }
          }, {
            key: "addANewEditor",
            value: function addANewEditor(t) {
              var _this37 = this;
              this.addCommands({
                cmd: function cmd() {
                  _this37.addOrRebuild(t);
                },
                undo: function undo() {
                  t.remove();
                },
                mustExec: !0
              });
            }
          }, {
            key: "addUndoableEditor",
            value: function addUndoableEditor(t) {
              var _this38 = this;
              this.addCommands({
                cmd: function cmd() {
                  _this38.addOrRebuild(t);
                },
                undo: function undo() {
                  t.remove();
                },
                mustExec: !1
              });
            }
          }, {
            key: "getNextId",
            value: function getNextId() {
              return _classPrivateFieldGet(this, _Ct).getId();
            }
          }, {
            key: "deserialize",
            value: function deserialize(t) {
              switch (t.annotationType) {
                case n.AnnotationEditorType.FREETEXT:
                  return a.FreeTextEditor.deserialize(t, this, _classPrivateFieldGet(this, _Ct));
                case n.AnnotationEditorType.INK:
                  return r.InkEditor.deserialize(t, this, _classPrivateFieldGet(this, _Ct));
              }
              return null;
            }
          }, {
            key: "setSelected",
            value: function setSelected(t) {
              _classPrivateFieldGet(this, _Ct).setSelected(t);
            }
          }, {
            key: "toggleSelected",
            value: function toggleSelected(t) {
              _classPrivateFieldGet(this, _Ct).toggleSelected(t);
            }
          }, {
            key: "isSelected",
            value: function isSelected(t) {
              return _classPrivateFieldGet(this, _Ct).isSelected(t);
            }
          }, {
            key: "unselect",
            value: function unselect(t) {
              _classPrivateFieldGet(this, _Ct).unselect(t);
            }
          }, {
            key: "pointerup",
            value: function pointerup(t) {
              var e = n.FeatureTest.platform.isMac;
              if (!(0 !== t.button || t.ctrlKey && e) && t.target === this.div && _classPrivateFieldGet(this, _xt)) {
                _classPrivateFieldSet(this, _xt, !1);
                _classPrivateFieldGet(this, _t99) ? _classPrivateMethodGet(this, _Tt, _Tt2).call(this, t) : _classPrivateFieldSet(this, _t99, !0);
              }
            }
          }, {
            key: "pointerdown",
            value: function pointerdown(t) {
              var e = n.FeatureTest.platform.isMac;
              if (0 !== t.button || t.ctrlKey && e) return;
              if (t.target !== this.div) return;
              _classPrivateFieldSet(this, _xt, !0);
              var s = _classPrivateFieldGet(this, _Ct).getActive();
              _classPrivateFieldSet(this, _t99, !s || s.isEmpty());
            }
          }, {
            key: "drop",
            value: function drop(t) {
              var e = t.dataTransfer.getData("text/plain"),
                s = _classPrivateFieldGet(this, _Ct).getEditor(e);
              if (!s) return;
              t.preventDefault();
              t.dataTransfer.dropEffect = "move";
              _classPrivateMethodGet(this, _wt, _wt2).call(this, s);
              var n = this.div.getBoundingClientRect(),
                i = t.clientX - n.x,
                a = t.clientY - n.y;
              s.translate(i - s.startX, a - s.startY);
              this.moveEditorInDOM(s);
              s.div.focus();
            }
          }, {
            key: "dragover",
            value: function dragover(t) {
              t.preventDefault();
            }
          }, {
            key: "destroy",
            value: function destroy() {
              var _classPrivateFieldGet9;
              ((_classPrivateFieldGet9 = _classPrivateFieldGet(this, _Ct).getActive()) === null || _classPrivateFieldGet9 === void 0 ? void 0 : _classPrivateFieldGet9.parent) === this && _classPrivateFieldGet(this, _Ct).setActiveEditor(null);
              var _iterator80 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _St).values()),
                _step80;
              try {
                for (_iterator80.s(); !(_step80 = _iterator80.n()).done;) {
                  var _classPrivateFieldGet10;
                  var _t104 = _step80.value;
                  (_classPrivateFieldGet10 = _classPrivateFieldGet(this, _At)) === null || _classPrivateFieldGet10 === void 0 ? void 0 : _classPrivateFieldGet10.removePointerInTextLayer(_t104.contentDiv);
                  _t104.setParent(null);
                  _t104.isAttachedToDOM = !1;
                  _t104.div.remove();
                }
              } catch (err) {
                _iterator80.e(err);
              } finally {
                _iterator80.f();
              }
              this.div = null;
              _classPrivateFieldGet(this, _St).clear();
              _classPrivateFieldGet(this, _Ct).removeLayer(this);
            }
          }, {
            key: "render",
            value: function render(_ref58) {
              var t = _ref58.viewport;
              this.viewport = t;
              (0, o.setLayerDimensions)(this.div, t);
              (0, i.bindEvents)(this, this.div, ["dragover", "drop"]);
              var _iterator81 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _Ct).getEditors(this.pageIndex)),
                _step81;
              try {
                for (_iterator81.s(); !(_step81 = _iterator81.n()).done;) {
                  var _t105 = _step81.value;
                  this.add(_t105);
                }
              } catch (err) {
                _iterator81.e(err);
              } finally {
                _iterator81.f();
              }
              this.updateMode();
            }
          }, {
            key: "update",
            value: function update(_ref59) {
              var t = _ref59.viewport;
              _classPrivateFieldGet(this, _Ct).commitOrRemove();
              this.viewport = t;
              (0, o.setLayerDimensions)(this.div, {
                rotation: t.rotation
              });
              this.updateMode();
            }
          }, {
            key: "pageDimensions",
            get: function get() {
              var _this$viewport$rawDim = this.viewport.rawDims,
                t = _this$viewport$rawDim.pageWidth,
                e = _this$viewport$rawDim.pageHeight;
              return [t, e];
            }
          }]);
          return AnnotationEditorLayer;
        }();
        function _wt2(t) {
          if (t.parent !== this) {
            var _t$parent;
            this.attach(t);
            (_t$parent = t.parent) === null || _t$parent === void 0 ? void 0 : _t$parent.detach(t);
            t.setParent(this);
            if (t.div && t.isAttachedToDOM) {
              t.div.remove();
              this.div.append(t.div);
            }
          }
        }
        function _kt2(t) {
          switch (_classPrivateFieldGet(this, _Ct).getMode()) {
            case n.AnnotationEditorType.FREETEXT:
              return new a.FreeTextEditor(t);
            case n.AnnotationEditorType.INK:
              return new r.InkEditor(t);
          }
          return null;
        }
        function _Tt2(t) {
          var e = this.getNextId(),
            s = _classPrivateMethodGet(this, _kt, _kt2).call(this, {
              parent: this,
              id: e,
              x: t.offsetX,
              y: t.offsetY,
              uiManager: _classPrivateFieldGet(this, _Ct)
            });
          s && this.add(s);
          return s;
        }
        function _Pt2() {
          _classPrivateFieldSet(this, _Et, !0);
          var _iterator82 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _St).values()),
            _step82;
          try {
            for (_iterator82.s(); !(_step82 = _iterator82.n()).done;) {
              var _t106 = _step82.value;
              _t106.isEmpty() && _t106.remove();
            }
          } catch (err) {
            _iterator82.e(err);
          } finally {
            _iterator82.f();
          }
          _classPrivateFieldSet(this, _Et, !1);
        }
        _defineProperty(AnnotationEditorLayer, "_initialized", !1);
        e.AnnotationEditorLayer = AnnotationEditorLayer;
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.FreeTextEditor = void 0;
        var n = s(1),
          i = s(5),
          a = s(4);
        var _Ft = /*#__PURE__*/new WeakMap();
        var _Rt = /*#__PURE__*/new WeakMap();
        var _Mt = /*#__PURE__*/new WeakMap();
        var _Dt = /*#__PURE__*/new WeakMap();
        var _It = /*#__PURE__*/new WeakMap();
        var _Ot = /*#__PURE__*/new WeakMap();
        var _Lt = /*#__PURE__*/new WeakMap();
        var _Nt = /*#__PURE__*/new WeakMap();
        var _jt = /*#__PURE__*/new WeakMap();
        var _Ut = /*#__PURE__*/new WeakSet();
        var _Bt = /*#__PURE__*/new WeakSet();
        var _Wt = /*#__PURE__*/new WeakSet();
        var _qt = /*#__PURE__*/new WeakSet();
        var FreeTextEditor = /*#__PURE__*/function (_a$AnnotationEditor) {
          _inherits(FreeTextEditor, _a$AnnotationEditor);
          var _super20 = _createSuper(FreeTextEditor);
          function FreeTextEditor(_t107) {
            var _this39;
            _classCallCheck(this, FreeTextEditor);
            _this39 = _super20.call(this, _objectSpread(_objectSpread({}, _t107), {}, {
              name: "freeTextEditor"
            }));
            _classPrivateMethodInitSpec(_assertThisInitialized(_this39), _qt);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this39), _Wt);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this39), _Bt);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this39), _Ut);
            _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _Ft, {
              writable: true,
              value: _this39.editorDivBlur.bind(_assertThisInitialized(_this39))
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _Rt, {
              writable: true,
              value: _this39.editorDivFocus.bind(_assertThisInitialized(_this39))
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _Mt, {
              writable: true,
              value: _this39.editorDivInput.bind(_assertThisInitialized(_this39))
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _Dt, {
              writable: true,
              value: _this39.editorDivKeydown.bind(_assertThisInitialized(_this39))
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _It, {
              writable: true,
              value: void 0
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _Ot, {
              writable: true,
              value: ""
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _Lt, {
              writable: true,
              value: "".concat(_this39.id, "-editor")
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _Nt, {
              writable: true,
              value: !1
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this39), _jt, {
              writable: true,
              value: void 0
            });
            _classPrivateFieldSet(_assertThisInitialized(_this39), _It, _t107.color || FreeTextEditor._defaultColor || a.AnnotationEditor._defaultLineColor);
            _classPrivateFieldSet(_assertThisInitialized(_this39), _jt, _t107.fontSize || FreeTextEditor._defaultFontSize);
            return _this39;
          }
          _createClass(FreeTextEditor, [{
            key: "updateParams",
            value: function updateParams(t, e) {
              switch (t) {
                case n.AnnotationEditorParamsType.FREETEXT_SIZE:
                  _classPrivateMethodGet(this, _Ut, _Ut2).call(this, e);
                  break;
                case n.AnnotationEditorParamsType.FREETEXT_COLOR:
                  _classPrivateMethodGet(this, _Bt, _Bt2).call(this, e);
              }
            }
          }, {
            key: "propertiesToUpdate",
            get: function get() {
              return [[n.AnnotationEditorParamsType.FREETEXT_SIZE, _classPrivateFieldGet(this, _jt)], [n.AnnotationEditorParamsType.FREETEXT_COLOR, _classPrivateFieldGet(this, _It)]];
            }
          }, {
            key: "getInitialTranslation",
            value: function getInitialTranslation() {
              var t = this.parentScale;
              return [-FreeTextEditor._internalPadding * t, -(FreeTextEditor._internalPadding + _classPrivateFieldGet(this, _jt)) * t];
            }
          }, {
            key: "rebuild",
            value: function rebuild() {
              _get(_getPrototypeOf(FreeTextEditor.prototype), "rebuild", this).call(this);
              null !== this.div && (this.isAttachedToDOM || this.parent.add(this));
            }
          }, {
            key: "enableEditMode",
            value: function enableEditMode() {
              if (!this.isInEditMode()) {
                this.parent.setEditingState(!1);
                this.parent.updateToolbar(n.AnnotationEditorType.FREETEXT);
                _get(_getPrototypeOf(FreeTextEditor.prototype), "enableEditMode", this).call(this);
                this.overlayDiv.classList.remove("enabled");
                this.editorDiv.contentEditable = !0;
                this.div.draggable = !1;
                this.div.removeAttribute("aria-activedescendant");
                this.editorDiv.addEventListener("keydown", _classPrivateFieldGet(this, _Dt));
                this.editorDiv.addEventListener("focus", _classPrivateFieldGet(this, _Rt));
                this.editorDiv.addEventListener("blur", _classPrivateFieldGet(this, _Ft));
                this.editorDiv.addEventListener("input", _classPrivateFieldGet(this, _Mt));
              }
            }
          }, {
            key: "disableEditMode",
            value: function disableEditMode() {
              if (this.isInEditMode()) {
                this.parent.setEditingState(!0);
                _get(_getPrototypeOf(FreeTextEditor.prototype), "disableEditMode", this).call(this);
                this.overlayDiv.classList.add("enabled");
                this.editorDiv.contentEditable = !1;
                this.div.setAttribute("aria-activedescendant", _classPrivateFieldGet(this, _Lt));
                this.div.draggable = !0;
                this.editorDiv.removeEventListener("keydown", _classPrivateFieldGet(this, _Dt));
                this.editorDiv.removeEventListener("focus", _classPrivateFieldGet(this, _Rt));
                this.editorDiv.removeEventListener("blur", _classPrivateFieldGet(this, _Ft));
                this.editorDiv.removeEventListener("input", _classPrivateFieldGet(this, _Mt));
                this.div.focus({
                  preventScroll: !0
                });
                this.isEditing = !1;
                this.parent.div.classList.add("freeTextEditing");
              }
            }
          }, {
            key: "focusin",
            value: function focusin(t) {
              _get(_getPrototypeOf(FreeTextEditor.prototype), "focusin", this).call(this, t);
              t.target !== this.editorDiv && this.editorDiv.focus();
            }
          }, {
            key: "onceAdded",
            value: function onceAdded() {
              if (!this.width) {
                this.enableEditMode();
                this.editorDiv.focus();
              }
            }
          }, {
            key: "isEmpty",
            value: function isEmpty() {
              return !this.editorDiv || "" === this.editorDiv.innerText.trim();
            }
          }, {
            key: "remove",
            value: function remove() {
              this.isEditing = !1;
              this.parent.setEditingState(!0);
              this.parent.div.classList.add("freeTextEditing");
              _get(_getPrototypeOf(FreeTextEditor.prototype), "remove", this).call(this);
            }
          }, {
            key: "commit",
            value: function commit() {
              if (this.isInEditMode()) {
                _get(_getPrototypeOf(FreeTextEditor.prototype), "commit", this).call(this);
                if (!_classPrivateFieldGet(this, _Nt)) {
                  _classPrivateFieldSet(this, _Nt, !0);
                  this.parent.addUndoableEditor(this);
                }
                this.disableEditMode();
                _classPrivateFieldSet(this, _Ot, _classPrivateMethodGet(this, _Wt, _Wt2).call(this).trimEnd());
                _classPrivateMethodGet(this, _qt, _qt2).call(this);
              }
            }
          }, {
            key: "shouldGetKeyboardEvents",
            value: function shouldGetKeyboardEvents() {
              return this.isInEditMode();
            }
          }, {
            key: "dblclick",
            value: function dblclick(t) {
              this.enableEditMode();
              this.editorDiv.focus();
            }
          }, {
            key: "keydown",
            value: function keydown(t) {
              if (t.target === this.div && "Enter" === t.key) {
                this.enableEditMode();
                this.editorDiv.focus();
              }
            }
          }, {
            key: "editorDivKeydown",
            value: function editorDivKeydown(t) {
              FreeTextEditor._keyboardManager.exec(this, t);
            }
          }, {
            key: "editorDivFocus",
            value: function editorDivFocus(t) {
              this.isEditing = !0;
            }
          }, {
            key: "editorDivBlur",
            value: function editorDivBlur(t) {
              this.isEditing = !1;
            }
          }, {
            key: "editorDivInput",
            value: function editorDivInput(t) {
              this.parent.div.classList.toggle("freeTextEditing", this.isEmpty());
            }
          }, {
            key: "disableEditing",
            value: function disableEditing() {
              this.editorDiv.setAttribute("role", "comment");
              this.editorDiv.removeAttribute("aria-multiline");
            }
          }, {
            key: "enableEditing",
            value: function enableEditing() {
              this.editorDiv.setAttribute("role", "textbox");
              this.editorDiv.setAttribute("aria-multiline", !0);
            }
          }, {
            key: "render",
            value: function render() {
              var _this40 = this;
              if (this.div) return this.div;
              var t, e;
              if (this.width) {
                t = this.x;
                e = this.y;
              }
              _get(_getPrototypeOf(FreeTextEditor.prototype), "render", this).call(this);
              this.editorDiv = document.createElement("div");
              this.editorDiv.className = "internal";
              this.editorDiv.setAttribute("id", _classPrivateFieldGet(this, _Lt));
              this.enableEditing();
              FreeTextEditor._l10nPromise.get("editor_free_text2_aria_label").then(function (t) {
                var _this40$editorDiv;
                return (_this40$editorDiv = _this40.editorDiv) === null || _this40$editorDiv === void 0 ? void 0 : _this40$editorDiv.setAttribute("aria-label", t);
              });
              FreeTextEditor._l10nPromise.get("free_text2_default_content").then(function (t) {
                var _this40$editorDiv2;
                return (_this40$editorDiv2 = _this40.editorDiv) === null || _this40$editorDiv2 === void 0 ? void 0 : _this40$editorDiv2.setAttribute("default-content", t);
              });
              this.editorDiv.contentEditable = !0;
              var s = this.editorDiv.style;
              s.fontSize = "calc(".concat(_classPrivateFieldGet(this, _jt), "px * var(--scale-factor))");
              s.color = _classPrivateFieldGet(this, _It);
              this.div.append(this.editorDiv);
              this.overlayDiv = document.createElement("div");
              this.overlayDiv.classList.add("overlay", "enabled");
              this.div.append(this.overlayDiv);
              (0, i.bindEvents)(this, this.div, ["dblclick", "keydown"]);
              if (this.width) {
                var _this$parentDimension6 = _slicedToArray(this.parentDimensions, 2),
                  _s59 = _this$parentDimension6[0],
                  _n40 = _this$parentDimension6[1];
                this.setAt(t * _s59, e * _n40, this.width * _s59, this.height * _n40);
                var _iterator83 = _createForOfIteratorHelper(_classPrivateFieldGet(this, _Ot).split("\n")),
                  _step83;
                try {
                  for (_iterator83.s(); !(_step83 = _iterator83.n()).done;) {
                    var _t108 = _step83.value;
                    var _e73 = document.createElement("div");
                    _e73.append(_t108 ? document.createTextNode(_t108) : document.createElement("br"));
                    this.editorDiv.append(_e73);
                  }
                } catch (err) {
                  _iterator83.e(err);
                } finally {
                  _iterator83.f();
                }
                this.div.draggable = !0;
                this.editorDiv.contentEditable = !1;
              } else {
                this.div.draggable = !1;
                this.editorDiv.contentEditable = !0;
              }
              return this.div;
            }
          }, {
            key: "contentDiv",
            get: function get() {
              return this.editorDiv;
            }
          }, {
            key: "serialize",
            value: function serialize() {
              if (this.isEmpty()) return null;
              var t = FreeTextEditor._internalPadding * this.parentScale,
                e = this.getRect(t, t),
                s = a.AnnotationEditor._colorManager.convert(this.isAttachedToDOM ? getComputedStyle(this.editorDiv).color : _classPrivateFieldGet(this, _It));
              return {
                annotationType: n.AnnotationEditorType.FREETEXT,
                color: s,
                fontSize: _classPrivateFieldGet(this, _jt),
                value: _classPrivateFieldGet(this, _Ot),
                pageIndex: this.pageIndex,
                rect: e,
                rotation: this.rotation
              };
            }
          }], [{
            key: "initialize",
            value: function initialize(t) {
              this._l10nPromise = new Map(["free_text2_default_content", "editor_free_text2_aria_label"].map(function (e) {
                return [e, t.get(e)];
              }));
              var e = getComputedStyle(document.documentElement);
              this._internalPadding = parseFloat(e.getPropertyValue("--freetext-padding"));
            }
          }, {
            key: "updateDefaultParams",
            value: function updateDefaultParams(t, e) {
              switch (t) {
                case n.AnnotationEditorParamsType.FREETEXT_SIZE:
                  FreeTextEditor._defaultFontSize = e;
                  break;
                case n.AnnotationEditorParamsType.FREETEXT_COLOR:
                  FreeTextEditor._defaultColor = e;
              }
            }
          }, {
            key: "defaultPropertiesToUpdate",
            get: function get() {
              return [[n.AnnotationEditorParamsType.FREETEXT_SIZE, FreeTextEditor._defaultFontSize], [n.AnnotationEditorParamsType.FREETEXT_COLOR, FreeTextEditor._defaultColor || a.AnnotationEditor._defaultLineColor]];
            }
          }, {
            key: "deserialize",
            value: function deserialize(t, e, s) {
              var _n$Util2;
              var i = _get(_getPrototypeOf(FreeTextEditor), "deserialize", this).call(this, t, e, s);
              _classPrivateFieldSet(i, _jt, t.fontSize);
              _classPrivateFieldSet(i, _It, (_n$Util2 = n.Util).makeHexColor.apply(_n$Util2, _toConsumableArray(t.color)));
              _classPrivateFieldSet(i, _Ot, t.value);
              return i;
            }
          }]);
          return FreeTextEditor;
        }(a.AnnotationEditor);
        function _Ut2(t) {
          var _this41 = this;
          var setFontsize = function setFontsize(t) {
              _this41.editorDiv.style.fontSize = "calc(".concat(t, "px * var(--scale-factor))");
              _this41.translate(0, -(t - _classPrivateFieldGet(_this41, _jt)) * _this41.parentScale);
              _classPrivateFieldSet(_this41, _jt, t);
              _classPrivateMethodGet(_this41, _qt, _qt2).call(_this41);
            },
            e = _classPrivateFieldGet(this, _jt);
          this.addCommands({
            cmd: function cmd() {
              setFontsize(t);
            },
            undo: function undo() {
              setFontsize(e);
            },
            mustExec: !0,
            type: n.AnnotationEditorParamsType.FREETEXT_SIZE,
            overwriteIfSameType: !0,
            keepUndo: !0
          });
        }
        function _Bt2(t) {
          var _this42 = this;
          var e = _classPrivateFieldGet(this, _It);
          this.addCommands({
            cmd: function cmd() {
              _classPrivateFieldSet(_this42, _It, _this42.editorDiv.style.color = t);
            },
            undo: function undo() {
              _classPrivateFieldSet(_this42, _It, _this42.editorDiv.style.color = e);
            },
            mustExec: !0,
            type: n.AnnotationEditorParamsType.FREETEXT_COLOR,
            overwriteIfSameType: !0,
            keepUndo: !0
          });
        }
        function _Wt2() {
          var t = this.editorDiv.getElementsByTagName("div");
          if (0 === t.length) return this.editorDiv.innerText;
          var e = [];
          var _iterator84 = _createForOfIteratorHelper(t),
            _step84;
          try {
            for (_iterator84.s(); !(_step84 = _iterator84.n()).done;) {
              var _s60 = _step84.value;
              e.push(_s60.innerText.replace(/\r\n?|\n/, ""));
            }
          } catch (err) {
            _iterator84.e(err);
          } finally {
            _iterator84.f();
          }
          return e.join("\n");
        }
        function _qt2() {
          var _this$parentDimension7 = _slicedToArray(this.parentDimensions, 2),
            t = _this$parentDimension7[0],
            e = _this$parentDimension7[1];
          var s;
          if (this.isAttachedToDOM) s = this.div.getBoundingClientRect();else {
            var _t109 = this.currentLayer,
              _e74 = this.div,
              _n41 = _e74.style.display;
            _e74.style.display = "hidden";
            _t109.div.append(this.div);
            s = _e74.getBoundingClientRect();
            _e74.remove();
            _e74.style.display = _n41;
          }
          this.width = s.width / t;
          this.height = s.height / e;
        }
        _defineProperty(FreeTextEditor, "_freeTextDefaultContent", "");
        _defineProperty(FreeTextEditor, "_l10nPromise", void 0);
        _defineProperty(FreeTextEditor, "_internalPadding", 0);
        _defineProperty(FreeTextEditor, "_defaultColor", null);
        _defineProperty(FreeTextEditor, "_defaultFontSize", 10);
        _defineProperty(FreeTextEditor, "_keyboardManager", new i.KeyboardManager([[["ctrl+Enter", "mac+meta+Enter", "Escape", "mac+Escape"], FreeTextEditor.prototype.commitOrRemove]]));
        _defineProperty(FreeTextEditor, "_type", "freetext");
        e.FreeTextEditor = FreeTextEditor;
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.InkEditor = void 0;
        Object.defineProperty(e, "fitCurve", {
          enumerable: !0,
          get: function get() {
            return a.fitCurve;
          }
        });
        var n = s(1),
          i = s(4),
          a = s(25),
          r = s(5);
        var o = 16;
        var _Ht = /*#__PURE__*/new WeakMap();
        var _Gt = /*#__PURE__*/new WeakMap();
        var _zt = /*#__PURE__*/new WeakMap();
        var _Vt = /*#__PURE__*/new WeakMap();
        var _Xt = /*#__PURE__*/new WeakMap();
        var _$t = /*#__PURE__*/new WeakMap();
        var _Yt = /*#__PURE__*/new WeakMap();
        var _Kt = /*#__PURE__*/new WeakMap();
        var _Jt = /*#__PURE__*/new WeakMap();
        var _Qt = /*#__PURE__*/new WeakMap();
        var _Zt = /*#__PURE__*/new WeakMap();
        var _te = /*#__PURE__*/new WeakMap();
        var _ee = /*#__PURE__*/new WeakMap();
        var _se = /*#__PURE__*/new WeakMap();
        var _ne = /*#__PURE__*/new WeakSet();
        var _Bt3 = /*#__PURE__*/new WeakSet();
        var _ie = /*#__PURE__*/new WeakSet();
        var _he = /*#__PURE__*/new WeakSet();
        var _de = /*#__PURE__*/new WeakSet();
        var _ue = /*#__PURE__*/new WeakSet();
        var _pe = /*#__PURE__*/new WeakSet();
        var _ge = /*#__PURE__*/new WeakSet();
        var _re = /*#__PURE__*/new WeakSet();
        var _be = /*#__PURE__*/new WeakSet();
        var _oe = /*#__PURE__*/new WeakSet();
        var _le = /*#__PURE__*/new WeakSet();
        var _ce = /*#__PURE__*/new WeakSet();
        var _e75 = /*#__PURE__*/new WeakSet();
        var _fe = /*#__PURE__*/new WeakSet();
        var _ve = /*#__PURE__*/new WeakSet();
        var _Se = /*#__PURE__*/new WeakSet();
        var _xe = /*#__PURE__*/new WeakSet();
        var _Ee = /*#__PURE__*/new WeakSet();
        var _ye = /*#__PURE__*/new WeakSet();
        var _ae = /*#__PURE__*/new WeakSet();
        var _Ae = /*#__PURE__*/new WeakSet();
        var InkEditor = /*#__PURE__*/function (_i$AnnotationEditor) {
          _inherits(InkEditor, _i$AnnotationEditor);
          var _super21 = _createSuper(InkEditor);
          function InkEditor(_t110) {
            var _this43;
            _classCallCheck(this, InkEditor);
            _this43 = _super21.call(this, _objectSpread(_objectSpread({}, _t110), {}, {
              name: "inkEditor"
            }));
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _Ae);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _ae);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _ye);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _Ee);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _xe);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _Se);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _ve);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _fe);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _e75);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _ce);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _le);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _oe);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _be);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _re);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _ge);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _pe);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _ue);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _de);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _he);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _ie);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _Bt3);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this43), _ne);
            _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _Ht, {
              writable: true,
              value: 0
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _Gt, {
              writable: true,
              value: 0
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _zt, {
              writable: true,
              value: 0
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _Vt, {
              writable: true,
              value: _this43.canvasPointermove.bind(_assertThisInitialized(_this43))
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _Xt, {
              writable: true,
              value: _this43.canvasPointerleave.bind(_assertThisInitialized(_this43))
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _$t, {
              writable: true,
              value: _this43.canvasPointerup.bind(_assertThisInitialized(_this43))
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _Yt, {
              writable: true,
              value: _this43.canvasPointerdown.bind(_assertThisInitialized(_this43))
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _Kt, {
              writable: true,
              value: !1
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _Jt, {
              writable: true,
              value: !1
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _Qt, {
              writable: true,
              value: null
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _Zt, {
              writable: true,
              value: null
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _te, {
              writable: true,
              value: 0
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _ee, {
              writable: true,
              value: 0
            });
            _classPrivateFieldInitSpec(_assertThisInitialized(_this43), _se, {
              writable: true,
              value: null
            });
            _this43.color = _t110.color || null;
            _this43.thickness = _t110.thickness || null;
            _this43.opacity = _t110.opacity || null;
            _this43.paths = [];
            _this43.bezierPath2D = [];
            _this43.currentPath = [];
            _this43.scaleFactor = 1;
            _this43.translationX = _this43.translationY = 0;
            _this43.x = 0;
            _this43.y = 0;
            return _this43;
          }
          _createClass(InkEditor, [{
            key: "updateParams",
            value: function updateParams(t, e) {
              switch (t) {
                case n.AnnotationEditorParamsType.INK_THICKNESS:
                  _classPrivateMethodGet(this, _ne, _ne2).call(this, e);
                  break;
                case n.AnnotationEditorParamsType.INK_COLOR:
                  _classPrivateMethodGet(this, _Bt3, _Bt4).call(this, e);
                  break;
                case n.AnnotationEditorParamsType.INK_OPACITY:
                  _classPrivateMethodGet(this, _ie, _ie2).call(this, e);
              }
            }
          }, {
            key: "propertiesToUpdate",
            get: function get() {
              var _this$opacity;
              return [[n.AnnotationEditorParamsType.INK_THICKNESS, this.thickness || InkEditor._defaultThickness], [n.AnnotationEditorParamsType.INK_COLOR, this.color || InkEditor._defaultColor || i.AnnotationEditor._defaultLineColor], [n.AnnotationEditorParamsType.INK_OPACITY, Math.round(100 * ((_this$opacity = this.opacity) !== null && _this$opacity !== void 0 ? _this$opacity : InkEditor._defaultOpacity))]];
            }
          }, {
            key: "rebuild",
            value: function rebuild() {
              _get(_getPrototypeOf(InkEditor.prototype), "rebuild", this).call(this);
              if (null !== this.div) {
                if (!this.canvas) {
                  _classPrivateMethodGet(this, _oe, _oe2).call(this);
                  _classPrivateMethodGet(this, _le, _le2).call(this);
                }
                if (!this.isAttachedToDOM) {
                  this.parent.add(this);
                  _classPrivateMethodGet(this, _ce, _ce2).call(this);
                }
                _classPrivateMethodGet(this, _ae, _ae2).call(this);
              }
            }
          }, {
            key: "remove",
            value: function remove() {
              if (null !== this.canvas) {
                this.isEmpty() || this.commit();
                this.canvas.width = this.canvas.height = 0;
                this.canvas.remove();
                this.canvas = null;
                _classPrivateFieldGet(this, _Zt).disconnect();
                _classPrivateFieldSet(this, _Zt, null);
                _get(_getPrototypeOf(InkEditor.prototype), "remove", this).call(this);
              }
            }
          }, {
            key: "setParent",
            value: function setParent(t) {
              !this.parent && t ? this._uiManager.removeShouldRescale(this) : this.parent && null === t && this._uiManager.addShouldRescale(this);
              _get(_getPrototypeOf(InkEditor.prototype), "setParent", this).call(this, t);
            }
          }, {
            key: "onScaleChanging",
            value: function onScaleChanging() {
              var _this$parentDimension8 = _slicedToArray(this.parentDimensions, 2),
                t = _this$parentDimension8[0],
                e = _this$parentDimension8[1],
                s = this.width * t,
                n = this.height * e;
              this.setDimensions(s, n);
            }
          }, {
            key: "enableEditMode",
            value: function enableEditMode() {
              if (!_classPrivateFieldGet(this, _Kt) && null !== this.canvas) {
                _get(_getPrototypeOf(InkEditor.prototype), "enableEditMode", this).call(this);
                this.div.draggable = !1;
                this.canvas.addEventListener("pointerdown", _classPrivateFieldGet(this, _Yt));
                this.canvas.addEventListener("pointerup", _classPrivateFieldGet(this, _$t));
              }
            }
          }, {
            key: "disableEditMode",
            value: function disableEditMode() {
              if (this.isInEditMode() && null !== this.canvas) {
                _get(_getPrototypeOf(InkEditor.prototype), "disableEditMode", this).call(this);
                this.div.draggable = !this.isEmpty();
                this.div.classList.remove("editing");
                this.canvas.removeEventListener("pointerdown", _classPrivateFieldGet(this, _Yt));
                this.canvas.removeEventListener("pointerup", _classPrivateFieldGet(this, _$t));
              }
            }
          }, {
            key: "onceAdded",
            value: function onceAdded() {
              this.div.draggable = !this.isEmpty();
            }
          }, {
            key: "isEmpty",
            value: function isEmpty() {
              return 0 === this.paths.length || 1 === this.paths.length && 0 === this.paths[0].length;
            }
          }, {
            key: "commit",
            value: function commit() {
              if (!_classPrivateFieldGet(this, _Kt)) {
                _get(_getPrototypeOf(InkEditor.prototype), "commit", this).call(this);
                this.isEditing = !1;
                this.disableEditMode();
                this.setInForeground();
                _classPrivateFieldSet(this, _Kt, !0);
                this.div.classList.add("disabled");
                _classPrivateMethodGet(this, _ae, _ae2).call(this, !0);
                this.parent.addInkEditorIfNeeded(!0);
                this.parent.moveEditorInDOM(this);
                this.div.focus({
                  preventScroll: !0
                });
              }
            }
          }, {
            key: "focusin",
            value: function focusin(t) {
              _get(_getPrototypeOf(InkEditor.prototype), "focusin", this).call(this, t);
              this.enableEditMode();
            }
          }, {
            key: "canvasPointerdown",
            value: function canvasPointerdown(t) {
              if (0 === t.button && this.isInEditMode() && !_classPrivateFieldGet(this, _Kt)) {
                this.setInForeground();
                "mouse" !== t.type && this.div.focus();
                t.stopPropagation();
                this.canvas.addEventListener("pointerleave", _classPrivateFieldGet(this, _Xt));
                this.canvas.addEventListener("pointermove", _classPrivateFieldGet(this, _Vt));
                _classPrivateMethodGet(this, _ue, _ue2).call(this, t.offsetX, t.offsetY);
              }
            }
          }, {
            key: "canvasPointermove",
            value: function canvasPointermove(t) {
              t.stopPropagation();
              _classPrivateMethodGet(this, _pe, _pe2).call(this, t.offsetX, t.offsetY);
            }
          }, {
            key: "canvasPointerup",
            value: function canvasPointerup(t) {
              if (0 === t.button && this.isInEditMode() && 0 !== this.currentPath.length) {
                t.stopPropagation();
                _classPrivateMethodGet(this, _be, _be2).call(this, t);
                this.setInBackground();
              }
            }
          }, {
            key: "canvasPointerleave",
            value: function canvasPointerleave(t) {
              _classPrivateMethodGet(this, _be, _be2).call(this, t);
              this.setInBackground();
            }
          }, {
            key: "render",
            value: function render() {
              var _this44 = this;
              if (this.div) return this.div;
              var t, e;
              if (this.width) {
                t = this.x;
                e = this.y;
              }
              _get(_getPrototypeOf(InkEditor.prototype), "render", this).call(this);
              InkEditor._l10nPromise.get("editor_ink2_aria_label").then(function (t) {
                var _this44$div;
                return (_this44$div = _this44.div) === null || _this44$div === void 0 ? void 0 : _this44$div.setAttribute("aria-label", t);
              });
              var _classPrivateMethodGe = _classPrivateMethodGet(this, _he, _he2).call(this),
                _classPrivateMethodGe2 = _slicedToArray(_classPrivateMethodGe, 4),
                s = _classPrivateMethodGe2[0],
                n = _classPrivateMethodGe2[1],
                i = _classPrivateMethodGe2[2],
                a = _classPrivateMethodGe2[3];
              this.setAt(s, n, 0, 0);
              this.setDims(i, a);
              _classPrivateMethodGet(this, _oe, _oe2).call(this);
              if (this.width) {
                var _this$parentDimension9 = _slicedToArray(this.parentDimensions, 2),
                  _s61 = _this$parentDimension9[0],
                  _n42 = _this$parentDimension9[1];
                this.setAt(t * _s61, e * _n42, this.width * _s61, this.height * _n42);
                _classPrivateFieldSet(this, _Jt, !0);
                _classPrivateMethodGet(this, _ce, _ce2).call(this);
                this.setDims(this.width * _s61, this.height * _n42);
                _classPrivateMethodGet(this, _re, _re2).call(this);
                _classPrivateMethodGet(this, _Ae, _Ae2).call(this);
                this.div.classList.add("disabled");
              } else {
                this.div.classList.add("editing");
                this.enableEditMode();
              }
              _classPrivateMethodGet(this, _le, _le2).call(this);
              return this.div;
            }
          }, {
            key: "setDimensions",
            value: function setDimensions(t, e) {
              var s = Math.round(t),
                n = Math.round(e);
              if (_classPrivateFieldGet(this, _te) === s && _classPrivateFieldGet(this, _ee) === n) return;
              _classPrivateFieldSet(this, _te, s);
              _classPrivateFieldSet(this, _ee, n);
              this.canvas.style.visibility = "hidden";
              if (_classPrivateFieldGet(this, _Ht) && Math.abs(_classPrivateFieldGet(this, _Ht) - t / e) > .01) {
                e = Math.ceil(t / _classPrivateFieldGet(this, _Ht));
                this.setDims(t, e);
              }
              var _this$parentDimension10 = _slicedToArray(this.parentDimensions, 2),
                i = _this$parentDimension10[0],
                a = _this$parentDimension10[1];
              this.width = t / i;
              this.height = e / a;
              _classPrivateFieldGet(this, _Kt) && _classPrivateMethodGet(this, _e75, _e76).call(this, t, e);
              _classPrivateMethodGet(this, _ce, _ce2).call(this);
              _classPrivateMethodGet(this, _re, _re2).call(this);
              this.canvas.style.visibility = "visible";
            }
          }, {
            key: "serialize",
            value: function serialize() {
              if (this.isEmpty()) return null;
              var t = this.getRect(0, 0),
                e = this.rotation % 180 == 0 ? t[3] - t[1] : t[2] - t[0],
                s = i.AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);
              return {
                annotationType: n.AnnotationEditorType.INK,
                color: s,
                thickness: this.thickness,
                opacity: this.opacity,
                paths: _classPrivateMethodGet(this, _ve, _ve2).call(this, this.scaleFactor / this.parentScale, this.translationX, this.translationY, e),
                pageIndex: this.pageIndex,
                rect: t,
                rotation: this.rotation
              };
            }
          }], [{
            key: "initialize",
            value: function initialize(t) {
              this._l10nPromise = new Map(["editor_ink_canvas_aria_label", "editor_ink2_aria_label"].map(function (e) {
                return [e, t.get(e)];
              }));
            }
          }, {
            key: "updateDefaultParams",
            value: function updateDefaultParams(t, e) {
              switch (t) {
                case n.AnnotationEditorParamsType.INK_THICKNESS:
                  InkEditor._defaultThickness = e;
                  break;
                case n.AnnotationEditorParamsType.INK_COLOR:
                  InkEditor._defaultColor = e;
                  break;
                case n.AnnotationEditorParamsType.INK_OPACITY:
                  InkEditor._defaultOpacity = e / 100;
              }
            }
          }, {
            key: "defaultPropertiesToUpdate",
            get: function get() {
              return [[n.AnnotationEditorParamsType.INK_THICKNESS, InkEditor._defaultThickness], [n.AnnotationEditorParamsType.INK_COLOR, InkEditor._defaultColor || i.AnnotationEditor._defaultLineColor], [n.AnnotationEditorParamsType.INK_OPACITY, Math.round(100 * InkEditor._defaultOpacity)]];
            }
          }, {
            key: "deserialize",
            value: function deserialize(t, e, s) {
              var _n$Util3;
              var i = _get(_getPrototypeOf(InkEditor), "deserialize", this).call(this, t, e, s);
              i.thickness = t.thickness;
              i.color = (_n$Util3 = n.Util).makeHexColor.apply(_n$Util3, _toConsumableArray(t.color));
              i.opacity = t.opacity;
              var _i$pageDimensions = _slicedToArray(i.pageDimensions, 2),
                a = _i$pageDimensions[0],
                r = _i$pageDimensions[1],
                l = i.width * a,
                c = i.height * r,
                h = i.parentScale,
                d = t.thickness / 2;
              _classPrivateFieldSet(i, _Ht, l / c);
              _classPrivateFieldSet(i, _Kt, !0);
              _classPrivateFieldSet(i, _te, Math.round(l));
              _classPrivateFieldSet(i, _ee, Math.round(c));
              var _iterator85 = _createForOfIteratorHelper(t.paths),
                _step85;
              try {
                for (_iterator85.s(); !(_step85 = _iterator85.n()).done;) {
                  var _e77 = _step85.value.bezier;
                  var _t111 = [];
                  i.paths.push(_t111);
                  var _s62 = h * (_e77[0] - d),
                    _n43 = h * (c - _e77[1] - d);
                  for (var _i39 = 2, _a17 = _e77.length; _i39 < _a17; _i39 += 6) {
                    var _a18 = h * (_e77[_i39] - d),
                      _r16 = h * (c - _e77[_i39 + 1] - d),
                      _o8 = h * (_e77[_i39 + 2] - d),
                      _l8 = h * (c - _e77[_i39 + 3] - d),
                      _u8 = h * (_e77[_i39 + 4] - d),
                      p = h * (c - _e77[_i39 + 5] - d);
                    _t111.push([[_s62, _n43], [_a18, _r16], [_o8, _l8], [_u8, p]]);
                    _s62 = _u8;
                    _n43 = p;
                  }
                  var _a19 = _classStaticPrivateMethodGet(this, InkEditor, _me).call(this, _t111);
                  i.bezierPath2D.push(_a19);
                }
              } catch (err) {
                _iterator85.e(err);
              } finally {
                _iterator85.f();
              }
              var u = _classPrivateMethodGet(i, _Ee, _Ee2).call(i);
              _classPrivateFieldSet(i, _zt, Math.max(o, u[2] - u[0]));
              _classPrivateFieldSet(i, _Gt, Math.max(o, u[3] - u[1]));
              _classPrivateMethodGet(i, _e75, _e76).call(i, l, c);
              return i;
            }
          }]);
          return InkEditor;
        }(i.AnnotationEditor);
        function _ne2(t) {
          var _this45 = this;
          var e = this.thickness;
          this.addCommands({
            cmd: function cmd() {
              _this45.thickness = t;
              _classPrivateMethodGet(_this45, _ae, _ae2).call(_this45);
            },
            undo: function undo() {
              _this45.thickness = e;
              _classPrivateMethodGet(_this45, _ae, _ae2).call(_this45);
            },
            mustExec: !0,
            type: n.AnnotationEditorParamsType.INK_THICKNESS,
            overwriteIfSameType: !0,
            keepUndo: !0
          });
        }
        function _Bt4(t) {
          var _this46 = this;
          var e = this.color;
          this.addCommands({
            cmd: function cmd() {
              _this46.color = t;
              _classPrivateMethodGet(_this46, _re, _re2).call(_this46);
            },
            undo: function undo() {
              _this46.color = e;
              _classPrivateMethodGet(_this46, _re, _re2).call(_this46);
            },
            mustExec: !0,
            type: n.AnnotationEditorParamsType.INK_COLOR,
            overwriteIfSameType: !0,
            keepUndo: !0
          });
        }
        function _ie2(t) {
          var _this47 = this;
          t /= 100;
          var e = this.opacity;
          this.addCommands({
            cmd: function cmd() {
              _this47.opacity = t;
              _classPrivateMethodGet(_this47, _re, _re2).call(_this47);
            },
            undo: function undo() {
              _this47.opacity = e;
              _classPrivateMethodGet(_this47, _re, _re2).call(_this47);
            },
            mustExec: !0,
            type: n.AnnotationEditorParamsType.INK_OPACITY,
            overwriteIfSameType: !0,
            keepUndo: !0
          });
        }
        function _he2() {
          var t = this.parentRotation,
            _this$parentDimension11 = _slicedToArray(this.parentDimensions, 2),
            e = _this$parentDimension11[0],
            s = _this$parentDimension11[1];
          switch (t) {
            case 90:
              return [0, s, s, e];
            case 180:
              return [e, s, e, s];
            case 270:
              return [e, 0, s, e];
            default:
              return [0, 0, e, s];
          }
        }
        function _de2() {
          var t = this.ctx,
            e = this.color,
            s = this.opacity,
            n = this.thickness,
            i = this.parentScale,
            a = this.scaleFactor;
          t.lineWidth = n * i / a;
          t.lineCap = "round";
          t.lineJoin = "round";
          t.miterLimit = 10;
          t.strokeStyle = "".concat(e).concat((0, r.opacityToHex)(s));
        }
        function _ue2(t, e) {
          var _this48 = this;
          this.isEditing = !0;
          if (!_classPrivateFieldGet(this, _Jt)) {
            var _this$opacity2;
            _classPrivateFieldSet(this, _Jt, !0);
            _classPrivateMethodGet(this, _ce, _ce2).call(this);
            this.thickness || (this.thickness = InkEditor._defaultThickness);
            this.color || (this.color = InkEditor._defaultColor || i.AnnotationEditor._defaultLineColor);
            (_this$opacity2 = this.opacity) !== null && _this$opacity2 !== void 0 ? _this$opacity2 : this.opacity = InkEditor._defaultOpacity;
          }
          this.currentPath.push([t, e]);
          _classPrivateFieldSet(this, _Qt, null);
          _classPrivateMethodGet(this, _de, _de2).call(this);
          this.ctx.beginPath();
          this.ctx.moveTo(t, e);
          _classPrivateFieldSet(this, _se, function () {
            if (_classPrivateFieldGet(_this48, _se)) {
              if (_classPrivateFieldGet(_this48, _Qt)) {
                var _this48$ctx;
                if (_this48.isEmpty()) {
                  _this48.ctx.setTransform(1, 0, 0, 1, 0, 0);
                  _this48.ctx.clearRect(0, 0, _this48.canvas.width, _this48.canvas.height);
                } else _classPrivateMethodGet(_this48, _re, _re2).call(_this48);
                (_this48$ctx = _this48.ctx).lineTo.apply(_this48$ctx, _toConsumableArray(_classPrivateFieldGet(_this48, _Qt)));
                _classPrivateFieldSet(_this48, _Qt, null);
                _this48.ctx.stroke();
              }
              window.requestAnimationFrame(_classPrivateFieldGet(_this48, _se));
            }
          });
          window.requestAnimationFrame(_classPrivateFieldGet(this, _se));
        }
        function _pe2(t, e) {
          var _this$currentPath$at = this.currentPath.at(-1),
            _this$currentPath$at2 = _slicedToArray(_this$currentPath$at, 2),
            s = _this$currentPath$at2[0],
            n = _this$currentPath$at2[1];
          if (t !== s || e !== n) {
            this.currentPath.push([t, e]);
            _classPrivateFieldSet(this, _Qt, [t, e]);
          }
        }
        function _ge2(t, e) {
          var _this49 = this;
          this.ctx.closePath();
          _classPrivateFieldSet(this, _se, null);
          t = Math.min(Math.max(t, 0), this.canvas.width);
          e = Math.min(Math.max(e, 0), this.canvas.height);
          var _this$currentPath$at3 = this.currentPath.at(-1),
            _this$currentPath$at4 = _slicedToArray(_this$currentPath$at3, 2),
            s = _this$currentPath$at4[0],
            n = _this$currentPath$at4[1];
          t === s && e === n || this.currentPath.push([t, e]);
          var i;
          if (1 !== this.currentPath.length) i = (0, a.fitCurve)(this.currentPath, 30, null);else {
            var _s63 = [t, e];
            i = [[_s63, _s63.slice(), _s63.slice(), _s63]];
          }
          var r = _classStaticPrivateMethodGet(InkEditor, InkEditor, _me).call(InkEditor, i);
          this.currentPath.length = 0;
          this.addCommands({
            cmd: function cmd() {
              _this49.paths.push(i);
              _this49.bezierPath2D.push(r);
              _this49.rebuild();
            },
            undo: function undo() {
              _this49.paths.pop();
              _this49.bezierPath2D.pop();
              if (0 === _this49.paths.length) _this49.remove();else {
                if (!_this49.canvas) {
                  _classPrivateMethodGet(_this49, _oe, _oe2).call(_this49);
                  _classPrivateMethodGet(_this49, _le, _le2).call(_this49);
                }
                _classPrivateMethodGet(_this49, _ae, _ae2).call(_this49);
              }
            },
            mustExec: !0
          });
        }
        function _re2() {
          if (this.isEmpty()) {
            _classPrivateMethodGet(this, _fe, _fe2).call(this);
            return;
          }
          _classPrivateMethodGet(this, _de, _de2).call(this);
          var t = this.canvas,
            e = this.ctx;
          e.setTransform(1, 0, 0, 1, 0, 0);
          e.clearRect(0, 0, t.width, t.height);
          _classPrivateMethodGet(this, _fe, _fe2).call(this);
          var _iterator86 = _createForOfIteratorHelper(this.bezierPath2D),
            _step86;
          try {
            for (_iterator86.s(); !(_step86 = _iterator86.n()).done;) {
              var _t112 = _step86.value;
              e.stroke(_t112);
            }
          } catch (err) {
            _iterator86.e(err);
          } finally {
            _iterator86.f();
          }
        }
        function _be2(t) {
          _classPrivateMethodGet(this, _ge, _ge2).call(this, t.offsetX, t.offsetY);
          this.canvas.removeEventListener("pointerleave", _classPrivateFieldGet(this, _Xt));
          this.canvas.removeEventListener("pointermove", _classPrivateFieldGet(this, _Vt));
          this.addToAnnotationStorage();
        }
        function _oe2() {
          var _this50 = this;
          this.canvas = document.createElement("canvas");
          this.canvas.width = this.canvas.height = 0;
          this.canvas.className = "inkEditorCanvas";
          InkEditor._l10nPromise.get("editor_ink_canvas_aria_label").then(function (t) {
            var _this50$canvas;
            return (_this50$canvas = _this50.canvas) === null || _this50$canvas === void 0 ? void 0 : _this50$canvas.setAttribute("aria-label", t);
          });
          this.div.append(this.canvas);
          this.ctx = this.canvas.getContext("2d");
        }
        function _le2() {
          var _this51 = this;
          var t = null;
          _classPrivateFieldSet(this, _Zt, new ResizeObserver(function (e) {
            var s = e[0].contentRect;
            if (s.width && s.height) {
              null !== t && clearTimeout(t);
              t = setTimeout(function () {
                _this51.fixDims();
                t = null;
              }, 100);
              _this51.setDimensions(s.width, s.height);
            }
          }));
          _classPrivateFieldGet(this, _Zt).observe(this.div);
        }
        function _ce2() {
          if (!_classPrivateFieldGet(this, _Jt)) return;
          var _this$parentDimension12 = _slicedToArray(this.parentDimensions, 2),
            t = _this$parentDimension12[0],
            e = _this$parentDimension12[1];
          this.canvas.width = Math.ceil(this.width * t);
          this.canvas.height = Math.ceil(this.height * e);
          _classPrivateMethodGet(this, _fe, _fe2).call(this);
        }
        function _e76(t, e) {
          var s = _classPrivateMethodGet(this, _ye, _ye2).call(this),
            n = (t - s) / _classPrivateFieldGet(this, _zt),
            i = (e - s) / _classPrivateFieldGet(this, _Gt);
          this.scaleFactor = Math.min(n, i);
        }
        function _fe2() {
          var t = _classPrivateMethodGet(this, _ye, _ye2).call(this) / 2;
          this.ctx.setTransform(this.scaleFactor, 0, 0, this.scaleFactor, this.translationX * this.scaleFactor + t, this.translationY * this.scaleFactor + t);
        }
        function _me(t) {
          var e = new Path2D();
          for (var _s64 = 0, _n44 = t.length; _s64 < _n44; _s64++) {
            var _t$_s = _slicedToArray(t[_s64], 4),
              _n45 = _t$_s[0],
              _i40 = _t$_s[1],
              _a20 = _t$_s[2],
              _r17 = _t$_s[3];
            0 === _s64 && e.moveTo.apply(e, _toConsumableArray(_n45));
            e.bezierCurveTo(_i40[0], _i40[1], _a20[0], _a20[1], _r17[0], _r17[1]);
          }
          return e;
        }
        function _ve2(t, e, s, n) {
          var i = [],
            a = this.thickness / 2;
          var r, o;
          var _iterator87 = _createForOfIteratorHelper(this.paths),
            _step87;
          try {
            for (_iterator87.s(); !(_step87 = _iterator87.n()).done;) {
              var l = _step87.value;
              r = [];
              o = [];
              for (var _i41 = 0, c = l.length; _i41 < c; _i41++) {
                var _l$_i = _slicedToArray(l[_i41], 4),
                  _c6 = _l$_i[0],
                  h = _l$_i[1],
                  d = _l$_i[2],
                  u = _l$_i[3],
                  p = t * (_c6[0] + e) + a,
                  g = n - t * (_c6[1] + s) - a,
                  m = t * (h[0] + e) + a,
                  f = n - t * (h[1] + s) - a,
                  b = t * (d[0] + e) + a,
                  A = n - t * (d[1] + s) - a,
                  _ = t * (u[0] + e) + a,
                  y = n - t * (u[1] + s) - a;
                if (0 === _i41) {
                  r.push(p, g);
                  o.push(p, g);
                }
                r.push(m, f, b, A, _, y);
                _classPrivateMethodGet(this, _Se, _Se2).call(this, p, g, m, f, b, A, _, y, 4, o);
              }
              i.push({
                bezier: r,
                points: o
              });
            }
          } catch (err) {
            _iterator87.e(err);
          } finally {
            _iterator87.f();
          }
          return i;
        }
        function _Se2(t, e, s, n, i, a, r, o, l, c) {
          if (_classPrivateMethodGet(this, _xe, _xe2).call(this, t, e, s, n, i, a, r, o)) c.push(r, o);else {
            for (var h = 1; h < l - 1; h++) {
              var d = h / l,
                u = 1 - d;
              var p = d * t + u * s,
                g = d * e + u * n,
                m = d * s + u * i,
                f = d * n + u * a;
              p = d * p + u * m;
              g = d * g + u * f;
              m = d * m + u * (d * i + u * r);
              f = d * f + u * (d * a + u * o);
              p = d * p + u * m;
              g = d * g + u * f;
              c.push(p, g);
            }
            c.push(r, o);
          }
        }
        function _xe2(t, e, s, n, i, a, r, o) {
          var l = Math.pow(3 * s - 2 * t - r, 2),
            c = Math.pow(3 * n - 2 * e - o, 2),
            h = Math.pow(3 * i - t - 2 * r, 2),
            d = Math.pow(3 * a - e - 2 * o, 2);
          return Math.max(l, h) + Math.max(c, d) <= 10;
        }
        function _Ee2() {
          var t = 1 / 0,
            e = -1 / 0,
            s = 1 / 0,
            i = -1 / 0;
          var _iterator88 = _createForOfIteratorHelper(this.paths),
            _step88;
          try {
            for (_iterator88.s(); !(_step88 = _iterator88.n()).done;) {
              var _a21 = _step88.value;
              var _iterator89 = _createForOfIteratorHelper(_a21),
                _step89;
              try {
                for (_iterator89.s(); !(_step89 = _iterator89.n()).done;) {
                  var _n$Util4;
                  var _step89$value = _slicedToArray(_step89.value, 4),
                    _r18 = _step89$value[0],
                    _o9 = _step89$value[1],
                    l = _step89$value[2],
                    c = _step89$value[3];
                  var _a22 = (_n$Util4 = n.Util).bezierBoundingBox.apply(_n$Util4, _toConsumableArray(_r18).concat(_toConsumableArray(_o9), _toConsumableArray(l), _toConsumableArray(c)));
                  t = Math.min(t, _a22[0]);
                  s = Math.min(s, _a22[1]);
                  e = Math.max(e, _a22[2]);
                  i = Math.max(i, _a22[3]);
                }
              } catch (err) {
                _iterator89.e(err);
              } finally {
                _iterator89.f();
              }
            }
          } catch (err) {
            _iterator88.e(err);
          } finally {
            _iterator88.f();
          }
          return [t, s, e, i];
        }
        function _ye2() {
          return _classPrivateFieldGet(this, _Kt) ? Math.ceil(this.thickness * this.parentScale) : 0;
        }
        function _ae2() {
          var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
          if (this.isEmpty()) return;
          if (!_classPrivateFieldGet(this, _Kt)) {
            _classPrivateMethodGet(this, _re, _re2).call(this);
            return;
          }
          var e = _classPrivateMethodGet(this, _Ee, _Ee2).call(this),
            s = _classPrivateMethodGet(this, _ye, _ye2).call(this);
          _classPrivateFieldSet(this, _zt, Math.max(o, e[2] - e[0]));
          _classPrivateFieldSet(this, _Gt, Math.max(o, e[3] - e[1]));
          var n = Math.ceil(s + _classPrivateFieldGet(this, _zt) * this.scaleFactor),
            i = Math.ceil(s + _classPrivateFieldGet(this, _Gt) * this.scaleFactor),
            _this$parentDimension13 = _slicedToArray(this.parentDimensions, 2),
            a = _this$parentDimension13[0],
            r = _this$parentDimension13[1];
          this.width = n / a;
          this.height = i / r;
          _classPrivateFieldSet(this, _Ht, n / i);
          _classPrivateMethodGet(this, _Ae, _Ae2).call(this);
          var l = this.translationX,
            c = this.translationY;
          this.translationX = -e[0];
          this.translationY = -e[1];
          _classPrivateMethodGet(this, _ce, _ce2).call(this);
          _classPrivateMethodGet(this, _re, _re2).call(this);
          _classPrivateFieldSet(this, _te, n);
          _classPrivateFieldSet(this, _ee, i);
          this.setDims(n, i);
          var h = t ? s / this.scaleFactor / 2 : 0;
          this.translate(l - this.translationX - h, c - this.translationY - h);
        }
        function _Ae2() {
          var t = this.div.style;
          if (_classPrivateFieldGet(this, _Ht) >= 1) {
            t.minHeight = "16px";
            t.minWidth = "".concat(Math.round(_classPrivateFieldGet(this, _Ht) * o), "px");
          } else {
            t.minWidth = "16px";
            t.minHeight = "".concat(Math.round(o / _classPrivateFieldGet(this, _Ht)), "px");
          }
        }
        _defineProperty(InkEditor, "_defaultColor", null);
        _defineProperty(InkEditor, "_defaultOpacity", 1);
        _defineProperty(InkEditor, "_defaultThickness", 1);
        _defineProperty(InkEditor, "_l10nPromise", void 0);
        _defineProperty(InkEditor, "_type", "ink");
        e.InkEditor = InkEditor;
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.fitCurve = void 0;
        var n = s(26);
        e.fitCurve = n;
      }, function (t) {
        function fitCubic(t, e, s, n, i) {
          var a, r, o, l, c, h, d, u, p, g, m, f, b;
          if (2 === t.length) {
            f = maths.vectorLen(maths.subtract(t[0], t[1])) / 3;
            return [a = [t[0], maths.addArrays(t[0], maths.mulItems(e, f)), maths.addArrays(t[1], maths.mulItems(s, f)), t[1]]];
          }
          r = function chordLengthParameterize(t) {
            var e,
              s,
              n,
              i = [];
            t.forEach(function (t, a) {
              e = a ? s + maths.vectorLen(maths.subtract(t, n)) : 0;
              i.push(e);
              s = e;
              n = t;
            });
            i = i.map(function (t) {
              return t / s;
            });
            return i;
          }(t);
          var _generateAndReport = generateAndReport(t, r, r, e, s, i);
          var _generateAndReport2 = _slicedToArray(_generateAndReport, 3);
          a = _generateAndReport2[0];
          l = _generateAndReport2[1];
          h = _generateAndReport2[2];
          if (0 === l || l < n) return [a];
          if (l < n * n) {
            o = r;
            c = l;
            d = h;
            for (b = 0; b < 20; b++) {
              o = reparameterize(a, t, o);
              var _generateAndReport3 = generateAndReport(t, r, o, e, s, i);
              var _generateAndReport4 = _slicedToArray(_generateAndReport3, 3);
              a = _generateAndReport4[0];
              l = _generateAndReport4[1];
              h = _generateAndReport4[2];
              if (l < n) return [a];
              if (h === d) {
                var _t113 = l / c;
                if (_t113 > .9999 && _t113 < 1.0001) break;
              }
              c = l;
              d = h;
            }
          }
          m = [];
          if ((u = maths.subtract(t[h - 1], t[h + 1])).every(function (t) {
            return 0 === t;
          })) {
            u = maths.subtract(t[h - 1], t[h]);
            var _ref60 = [-u[1], u[0]];
            u[0] = _ref60[0];
            u[1] = _ref60[1];
          }
          p = maths.normalize(u);
          g = maths.mulItems(p, -1);
          return m = (m = m.concat(fitCubic(t.slice(0, h + 1), e, p, n, i))).concat(fitCubic(t.slice(h), g, s, n, i));
        }
        function generateAndReport(t, e, s, n, i, a) {
          var r, o, l;
          r = function generateBezier(t, e, s, n) {
            var i,
              a,
              r,
              o,
              l,
              c,
              h,
              d,
              u,
              p,
              g,
              m,
              f,
              b,
              A,
              _,
              y,
              v = t[0],
              S = t[t.length - 1];
            i = [v, null, null, S];
            a = maths.zeros_Xx2x2(e.length);
            for (f = 0, b = e.length; f < b; f++) {
              y = 1 - (_ = e[f]);
              (r = a[f])[0] = maths.mulItems(s, 3 * _ * (y * y));
              r[1] = maths.mulItems(n, 3 * y * (_ * _));
            }
            o = [[0, 0], [0, 0]];
            l = [0, 0];
            for (f = 0, b = t.length; f < b; f++) {
              _ = e[f];
              r = a[f];
              o[0][0] += maths.dot(r[0], r[0]);
              o[0][1] += maths.dot(r[0], r[1]);
              o[1][0] += maths.dot(r[0], r[1]);
              o[1][1] += maths.dot(r[1], r[1]);
              A = maths.subtract(t[f], bezier.q([v, v, S, S], _));
              l[0] += maths.dot(r[0], A);
              l[1] += maths.dot(r[1], A);
            }
            c = o[0][0] * o[1][1] - o[1][0] * o[0][1];
            h = o[0][0] * l[1] - o[1][0] * l[0];
            d = l[0] * o[1][1] - l[1] * o[0][1];
            u = 0 === c ? 0 : d / c;
            p = 0 === c ? 0 : h / c;
            m = maths.vectorLen(maths.subtract(v, S));
            if (u < (g = 1e-6 * m) || p < g) {
              i[1] = maths.addArrays(v, maths.mulItems(s, m / 3));
              i[2] = maths.addArrays(S, maths.mulItems(n, m / 3));
            } else {
              i[1] = maths.addArrays(v, maths.mulItems(s, u));
              i[2] = maths.addArrays(S, maths.mulItems(n, p));
            }
            return i;
          }(t, s, n, i);
          var _computeMaxError = function computeMaxError(t, e, s) {
            var n, i, a, r, o, l, c, h;
            i = 0;
            a = Math.floor(t.length / 2);
            var d = mapTtoRelativeDistances(e, 10);
            for (o = 0, l = t.length; o < l; o++) {
              c = t[o];
              h = find_t(e, s[o], d, 10);
              if ((n = (r = maths.subtract(bezier.q(e, h), c))[0] * r[0] + r[1] * r[1]) > i) {
                i = n;
                a = o;
              }
            }
            return [i, a];
          }(t, r, e);
          var _computeMaxError2 = _slicedToArray(_computeMaxError, 2);
          o = _computeMaxError2[0];
          l = _computeMaxError2[1];
          a && a({
            bez: r,
            points: t,
            params: e,
            maxErr: o,
            maxPoint: l
          });
          return [r, o, l];
        }
        function reparameterize(t, e, s) {
          return s.map(function (s, n) {
            return newtonRaphsonRootFind(t, e[n], s);
          });
        }
        function newtonRaphsonRootFind(t, e, s) {
          var n = maths.subtract(bezier.q(t, s), e),
            i = bezier.qprime(t, s),
            a = maths.mulMatrix(n, i),
            r = maths.sum(maths.squareItems(i)) + 2 * maths.mulMatrix(n, bezier.qprimeprime(t, s));
          return 0 === r ? s : s - a / r;
        }
        var mapTtoRelativeDistances = function mapTtoRelativeDistances(t, e) {
          for (var s, n = [0], i = t[0], a = 0, r = 1; r <= e; r++) {
            s = bezier.q(t, r / e);
            a += maths.vectorLen(maths.subtract(s, i));
            n.push(a);
            i = s;
          }
          return n = n.map(function (t) {
            return t / a;
          });
        };
        function find_t(t, e, s, n) {
          if (e < 0) return 0;
          if (e > 1) return 1;
          for (var i, a, r, o, l = 1; l <= n; l++) if (e <= s[l]) {
            r = (l - 1) / n;
            a = l / n;
            o = (e - (i = s[l - 1])) / (s[l] - i) * (a - r) + r;
            break;
          }
          return o;
        }
        function createTangent(t, e) {
          return maths.normalize(maths.subtract(t, e));
        }
        var maths = /*#__PURE__*/function () {
          function maths() {
            _classCallCheck(this, maths);
          }
          _createClass(maths, null, [{
            key: "zeros_Xx2x2",
            value: function zeros_Xx2x2(t) {
              for (var e = []; t--;) e.push([0, 0]);
              return e;
            }
          }, {
            key: "mulItems",
            value: function mulItems(t, e) {
              return t.map(function (t) {
                return t * e;
              });
            }
          }, {
            key: "mulMatrix",
            value: function mulMatrix(t, e) {
              return t.reduce(function (t, s, n) {
                return t + s * e[n];
              }, 0);
            }
          }, {
            key: "subtract",
            value: function subtract(t, e) {
              return t.map(function (t, s) {
                return t - e[s];
              });
            }
          }, {
            key: "addArrays",
            value: function addArrays(t, e) {
              return t.map(function (t, s) {
                return t + e[s];
              });
            }
          }, {
            key: "addItems",
            value: function addItems(t, e) {
              return t.map(function (t) {
                return t + e;
              });
            }
          }, {
            key: "sum",
            value: function sum(t) {
              return t.reduce(function (t, e) {
                return t + e;
              });
            }
          }, {
            key: "dot",
            value: function dot(t, e) {
              return maths.mulMatrix(t, e);
            }
          }, {
            key: "vectorLen",
            value: function vectorLen(t) {
              return Math.hypot.apply(Math, _toConsumableArray(t));
            }
          }, {
            key: "divItems",
            value: function divItems(t, e) {
              return t.map(function (t) {
                return t / e;
              });
            }
          }, {
            key: "squareItems",
            value: function squareItems(t) {
              return t.map(function (t) {
                return t * t;
              });
            }
          }, {
            key: "normalize",
            value: function normalize(t) {
              return this.divItems(t, this.vectorLen(t));
            }
          }]);
          return maths;
        }();
        var bezier = /*#__PURE__*/function () {
          function bezier() {
            _classCallCheck(this, bezier);
          }
          _createClass(bezier, null, [{
            key: "q",
            value: function q(t, e) {
              var s = 1 - e,
                n = maths.mulItems(t[0], s * s * s),
                i = maths.mulItems(t[1], 3 * s * s * e),
                a = maths.mulItems(t[2], 3 * s * e * e),
                r = maths.mulItems(t[3], e * e * e);
              return maths.addArrays(maths.addArrays(n, i), maths.addArrays(a, r));
            }
          }, {
            key: "qprime",
            value: function qprime(t, e) {
              var s = 1 - e,
                n = maths.mulItems(maths.subtract(t[1], t[0]), 3 * s * s),
                i = maths.mulItems(maths.subtract(t[2], t[1]), 6 * s * e),
                a = maths.mulItems(maths.subtract(t[3], t[2]), 3 * e * e);
              return maths.addArrays(maths.addArrays(n, i), a);
            }
          }, {
            key: "qprimeprime",
            value: function qprimeprime(t, e) {
              return maths.addArrays(maths.mulItems(maths.addArrays(maths.subtract(t[2], maths.mulItems(t[1], 2)), t[0]), 6 * (1 - e)), maths.mulItems(maths.addArrays(maths.subtract(t[3], maths.mulItems(t[2], 2)), t[1]), 6 * e));
            }
          }]);
          return bezier;
        }();
        t.exports = function fitCurve(t, e, s) {
          if (!Array.isArray(t)) throw new TypeError("First argument should be an array");
          t.forEach(function (e) {
            if (!Array.isArray(e) || e.some(function (t) {
              return "number" != typeof t;
            }) || e.length !== t[0].length) throw Error("Each point should be an array of numbers. Each point should have the same amount of numbers.");
          });
          if ((t = t.filter(function (e, s) {
            return 0 === s || !e.every(function (e, n) {
              return e === t[s - 1][n];
            });
          })).length < 2) return [];
          var n = t.length,
            i = createTangent(t[1], t[0]),
            a = createTangent(t[n - 2], t[n - 1]);
          return fitCubic(t, i, a, e, s);
        };
        t.exports.fitCubic = fitCubic;
        t.exports.createTangent = createTangent;
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.AnnotationLayer = void 0;
        var n = s(1),
          i = s(6),
          a = s(3),
          r = s(28),
          o = s(29);
        var l = 1e3,
          c = new WeakSet();
        function getRectDims(t) {
          return {
            width: t[2] - t[0],
            height: t[3] - t[1]
          };
        }
        var AnnotationElementFactory = /*#__PURE__*/function () {
          function AnnotationElementFactory() {
            _classCallCheck(this, AnnotationElementFactory);
          }
          _createClass(AnnotationElementFactory, null, [{
            key: "create",
            value: function create(t) {
              switch (t.data.annotationType) {
                case n.AnnotationType.LINK:
                  return new LinkAnnotationElement(t);
                case n.AnnotationType.TEXT:
                  return new TextAnnotationElement(t);
                case n.AnnotationType.WIDGET:
                  switch (t.data.fieldType) {
                    case "Tx":
                      return new TextWidgetAnnotationElement(t);
                    case "Btn":
                      return t.data.radioButton ? new RadioButtonWidgetAnnotationElement(t) : t.data.checkBox ? new CheckboxWidgetAnnotationElement(t) : new PushButtonWidgetAnnotationElement(t);
                    case "Ch":
                      return new ChoiceWidgetAnnotationElement(t);
                  }
                  return new WidgetAnnotationElement(t);
                case n.AnnotationType.POPUP:
                  return new PopupAnnotationElement(t);
                case n.AnnotationType.FREETEXT:
                  return new FreeTextAnnotationElement(t);
                case n.AnnotationType.LINE:
                  return new LineAnnotationElement(t);
                case n.AnnotationType.SQUARE:
                  return new SquareAnnotationElement(t);
                case n.AnnotationType.CIRCLE:
                  return new CircleAnnotationElement(t);
                case n.AnnotationType.POLYLINE:
                  return new PolylineAnnotationElement(t);
                case n.AnnotationType.CARET:
                  return new CaretAnnotationElement(t);
                case n.AnnotationType.INK:
                  return new InkAnnotationElement(t);
                case n.AnnotationType.POLYGON:
                  return new PolygonAnnotationElement(t);
                case n.AnnotationType.HIGHLIGHT:
                  return new HighlightAnnotationElement(t);
                case n.AnnotationType.UNDERLINE:
                  return new UnderlineAnnotationElement(t);
                case n.AnnotationType.SQUIGGLY:
                  return new SquigglyAnnotationElement(t);
                case n.AnnotationType.STRIKEOUT:
                  return new StrikeOutAnnotationElement(t);
                case n.AnnotationType.STAMP:
                  return new StampAnnotationElement(t);
                case n.AnnotationType.FILEATTACHMENT:
                  return new FileAttachmentAnnotationElement(t);
                default:
                  return new AnnotationElement(t);
              }
            }
          }]);
          return AnnotationElementFactory;
        }();
        var AnnotationElement = /*#__PURE__*/function () {
          function AnnotationElement(t) {
            var _ref61 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
              _ref61$isRenderable = _ref61.isRenderable,
              e = _ref61$isRenderable === void 0 ? !1 : _ref61$isRenderable,
              _ref61$ignoreBorder = _ref61.ignoreBorder,
              s = _ref61$ignoreBorder === void 0 ? !1 : _ref61$ignoreBorder,
              _ref61$createQuadrila = _ref61.createQuadrilaterals,
              n = _ref61$createQuadrila === void 0 ? !1 : _ref61$createQuadrila;
            _classCallCheck(this, AnnotationElement);
            this.isRenderable = e;
            this.data = t.data;
            this.layer = t.layer;
            this.page = t.page;
            this.viewport = t.viewport;
            this.linkService = t.linkService;
            this.downloadManager = t.downloadManager;
            this.imageResourcesPath = t.imageResourcesPath;
            this.renderForms = t.renderForms;
            this.svgFactory = t.svgFactory;
            this.annotationStorage = t.annotationStorage;
            this.enableScripting = t.enableScripting;
            this.hasJSActions = t.hasJSActions;
            this._fieldObjects = t.fieldObjects;
            e && (this.container = this._createContainer(s));
            n && (this.quadrilaterals = this._createQuadrilaterals(s));
          }
          _createClass(AnnotationElement, [{
            key: "_createContainer",
            value: function _createContainer() {
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              var e = this.data,
                s = this.page,
                i = this.viewport,
                a = document.createElement("section");
              a.setAttribute("data-annotation-id", e.id);
              var _i$rawDims = i.rawDims,
                r = _i$rawDims.pageWidth,
                o = _i$rawDims.pageHeight,
                l = _i$rawDims.pageX,
                c = _i$rawDims.pageY,
                _getRectDims = getRectDims(e.rect),
                h = _getRectDims.width,
                d = _getRectDims.height,
                u = n.Util.normalizeRect([e.rect[0], s.view[3] - e.rect[1] + s.view[1], e.rect[2], s.view[3] - e.rect[3] + s.view[1]]);
              if (!t && e.borderStyle.width > 0) {
                a.style.borderWidth = "".concat(e.borderStyle.width, "px");
                var _t114 = e.borderStyle.horizontalCornerRadius,
                  _s65 = e.borderStyle.verticalCornerRadius;
                if (_t114 > 0 || _s65 > 0) {
                  var _e78 = "calc(".concat(_t114, "px * var(--scale-factor)) / calc(").concat(_s65, "px * var(--scale-factor))");
                  a.style.borderRadius = _e78;
                } else if (this instanceof RadioButtonWidgetAnnotationElement) {
                  var _t115 = "calc(".concat(h, "px * var(--scale-factor)) / calc(").concat(d, "px * var(--scale-factor))");
                  a.style.borderRadius = _t115;
                }
                switch (e.borderStyle.style) {
                  case n.AnnotationBorderStyleType.SOLID:
                    a.style.borderStyle = "solid";
                    break;
                  case n.AnnotationBorderStyleType.DASHED:
                    a.style.borderStyle = "dashed";
                    break;
                  case n.AnnotationBorderStyleType.BEVELED:
                    (0, n.warn)("Unimplemented border style: beveled");
                    break;
                  case n.AnnotationBorderStyleType.INSET:
                    (0, n.warn)("Unimplemented border style: inset");
                    break;
                  case n.AnnotationBorderStyleType.UNDERLINE:
                    a.style.borderBottomStyle = "solid";
                }
                var _i42 = e.borderColor || null;
                _i42 ? a.style.borderColor = n.Util.makeHexColor(0 | _i42[0], 0 | _i42[1], 0 | _i42[2]) : a.style.borderWidth = 0;
              }
              a.style.left = 100 * (u[0] - l) / r + "%";
              a.style.top = 100 * (u[1] - c) / o + "%";
              var p = e.rotation;
              if (e.hasOwnCanvas || 0 === p) {
                a.style.width = 100 * h / r + "%";
                a.style.height = 100 * d / o + "%";
              } else this.setRotation(p, a);
              return a;
            }
          }, {
            key: "setRotation",
            value: function setRotation(t) {
              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;
              var _this$viewport$rawDim2 = this.viewport.rawDims,
                s = _this$viewport$rawDim2.pageWidth,
                n = _this$viewport$rawDim2.pageHeight,
                _getRectDims2 = getRectDims(this.data.rect),
                i = _getRectDims2.width,
                a = _getRectDims2.height;
              var r, o;
              if (t % 180 == 0) {
                r = 100 * i / s;
                o = 100 * a / n;
              } else {
                r = 100 * a / s;
                o = 100 * i / n;
              }
              e.style.width = "".concat(r, "%");
              e.style.height = "".concat(o, "%");
              e.setAttribute("data-main-rotation", (360 - t) % 360);
            }
          }, {
            key: "_commonActions",
            get: function get() {
              var _this52 = this;
              var setColor = function setColor(t, e, s) {
                var n = s.detail[t];
                s.target.style[e] = r.ColorConverters["".concat(n[0], "_HTML")](n.slice(1));
              };
              return (0, n.shadow)(this, "_commonActions", {
                display: function display(t) {
                  var e = t.detail.display % 2 == 1;
                  _this52.container.style.visibility = e ? "hidden" : "visible";
                  _this52.annotationStorage.setValue(_this52.data.id, {
                    hidden: e,
                    print: 0 === t.detail.display || 3 === t.detail.display
                  });
                },
                print: function print(t) {
                  _this52.annotationStorage.setValue(_this52.data.id, {
                    print: t.detail.print
                  });
                },
                hidden: function hidden(t) {
                  _this52.container.style.visibility = t.detail.hidden ? "hidden" : "visible";
                  _this52.annotationStorage.setValue(_this52.data.id, {
                    hidden: t.detail.hidden
                  });
                },
                focus: function focus(t) {
                  setTimeout(function () {
                    return t.target.focus({
                      preventScroll: !1
                    });
                  }, 0);
                },
                userName: function userName(t) {
                  t.target.title = t.detail.userName;
                },
                readonly: function readonly(t) {
                  t.detail.readonly ? t.target.setAttribute("readonly", "") : t.target.removeAttribute("readonly");
                },
                required: function required(t) {
                  _this52._setRequired(t.target, t.detail.required);
                },
                bgColor: function bgColor(t) {
                  setColor("bgColor", "backgroundColor", t);
                },
                fillColor: function fillColor(t) {
                  setColor("fillColor", "backgroundColor", t);
                },
                fgColor: function fgColor(t) {
                  setColor("fgColor", "color", t);
                },
                textColor: function textColor(t) {
                  setColor("textColor", "color", t);
                },
                borderColor: function borderColor(t) {
                  setColor("borderColor", "borderColor", t);
                },
                strokeColor: function strokeColor(t) {
                  setColor("strokeColor", "borderColor", t);
                },
                rotation: function rotation(t) {
                  var e = t.detail.rotation;
                  _this52.setRotation(e);
                  _this52.annotationStorage.setValue(_this52.data.id, {
                    rotation: e
                  });
                }
              });
            }
          }, {
            key: "_dispatchEventFromSandbox",
            value: function _dispatchEventFromSandbox(t, e) {
              var s = this._commonActions;
              for (var _i43 = 0, _Object$keys = Object.keys(e.detail); _i43 < _Object$keys.length; _i43++) {
                var _ref62;
                var _n46 = _Object$keys[_i43];
                (_ref62 = t[_n46] || s[_n46]) === null || _ref62 === void 0 ? void 0 : _ref62(e);
              }
            }
          }, {
            key: "_setDefaultPropertiesFromJS",
            value: function _setDefaultPropertiesFromJS(t) {
              if (!this.enableScripting) return;
              var e = this.annotationStorage.getRawValue(this.data.id);
              if (!e) return;
              var s = this._commonActions;
              for (var _i44 = 0, _Object$entries2 = Object.entries(e); _i44 < _Object$entries2.length; _i44++) {
                var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i44], 2),
                  _n47 = _Object$entries2$_i[0],
                  _i45 = _Object$entries2$_i[1];
                var _a23 = s[_n47];
                if (_a23) {
                  _a23({
                    detail: _defineProperty({}, _n47, _i45),
                    target: t
                  });
                  delete e[_n47];
                }
              }
            }
          }, {
            key: "_createQuadrilaterals",
            value: function _createQuadrilaterals() {
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              if (!this.data.quadPoints) return null;
              var e = [],
                s = this.data.rect;
              var _iterator90 = _createForOfIteratorHelper(this.data.quadPoints),
                _step90;
              try {
                for (_iterator90.s(); !(_step90 = _iterator90.n()).done;) {
                  var _s66 = _step90.value;
                  this.data.rect = [_s66[2].x, _s66[2].y, _s66[1].x, _s66[1].y];
                  e.push(this._createContainer(t));
                }
              } catch (err) {
                _iterator90.e(err);
              } finally {
                _iterator90.f();
              }
              this.data.rect = s;
              return e;
            }
          }, {
            key: "_createPopup",
            value: function _createPopup(t, e) {
              var s = this.container;
              if (this.quadrilaterals) {
                t = t || this.quadrilaterals;
                s = this.quadrilaterals[0];
              }
              if (!t) {
                (t = document.createElement("div")).className = "popupTriggerArea";
                s.append(t);
              }
              var n = new PopupElement({
                container: s,
                trigger: t,
                color: e.color,
                titleObj: e.titleObj,
                modificationDate: e.modificationDate,
                contentsObj: e.contentsObj,
                richText: e.richText,
                hideWrapper: !0
              }).render();
              n.style.left = "100%";
              s.append(n);
            }
          }, {
            key: "_renderQuadrilaterals",
            value: function _renderQuadrilaterals(t) {
              var _iterator91 = _createForOfIteratorHelper(this.quadrilaterals),
                _step91;
              try {
                for (_iterator91.s(); !(_step91 = _iterator91.n()).done;) {
                  var _e79 = _step91.value;
                  _e79.className = t;
                }
              } catch (err) {
                _iterator91.e(err);
              } finally {
                _iterator91.f();
              }
              return this.quadrilaterals;
            }
          }, {
            key: "render",
            value: function render() {
              (0, n.unreachable)("Abstract method `AnnotationElement.render` called");
            }
          }, {
            key: "_getElementsByName",
            value: function _getElementsByName(t) {
              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
              var s = [];
              if (this._fieldObjects) {
                var _i46 = this._fieldObjects[t];
                if (_i46) {
                  var _iterator92 = _createForOfIteratorHelper(_i46),
                    _step92;
                  try {
                    for (_iterator92.s(); !(_step92 = _iterator92.n()).done;) {
                      var _step92$value = _step92.value,
                        _t116 = _step92$value.page,
                        _a24 = _step92$value.id,
                        _r19 = _step92$value.exportValues;
                      if (-1 === _t116) continue;
                      if (_a24 === e) continue;
                      var _i47 = "string" == typeof _r19 ? _r19 : null,
                        _o10 = document.querySelector("[data-element-id=\"".concat(_a24, "\"]"));
                      !_o10 || c.has(_o10) ? s.push({
                        id: _a24,
                        exportValue: _i47,
                        domElement: _o10
                      }) : (0, n.warn)("_getElementsByName - element not allowed: ".concat(_a24));
                    }
                  } catch (err) {
                    _iterator92.e(err);
                  } finally {
                    _iterator92.f();
                  }
                }
                return s;
              }
              var _iterator93 = _createForOfIteratorHelper(document.getElementsByName(t)),
                _step93;
              try {
                for (_iterator93.s(); !(_step93 = _iterator93.n()).done;) {
                  var _n48 = _step93.value;
                  var _t117 = _n48.exportValue,
                    _i48 = _n48.getAttribute("data-element-id");
                  _i48 !== e && c.has(_n48) && s.push({
                    id: _i48,
                    exportValue: _t117,
                    domElement: _n48
                  });
                }
              } catch (err) {
                _iterator93.e(err);
              } finally {
                _iterator93.f();
              }
              return s;
            }
          }]);
          return AnnotationElement;
        }();
        var _Pe = /*#__PURE__*/new WeakSet();
        var _Ce = /*#__PURE__*/new WeakSet();
        var LinkAnnotationElement = /*#__PURE__*/function (_AnnotationElement) {
          _inherits(LinkAnnotationElement, _AnnotationElement);
          var _super22 = _createSuper(LinkAnnotationElement);
          function LinkAnnotationElement(_t118) {
            var _this53;
            var _e80 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
            _classCallCheck(this, LinkAnnotationElement);
            _this53 = _super22.call(this, _t118, {
              isRenderable: !0,
              ignoreBorder: !!(_e80 !== null && _e80 !== void 0 && _e80.ignoreBorder),
              createQuadrilaterals: !0
            });
            _classPrivateMethodInitSpec(_assertThisInitialized(_this53), _Ce);
            _classPrivateMethodInitSpec(_assertThisInitialized(_this53), _Pe);
            _this53.isTooltipOnly = _t118.data.isTooltipOnly;
            return _this53;
          }
          _createClass(LinkAnnotationElement, [{
            key: "render",
            value: function render() {
              var t = this.data,
                e = this.linkService,
                s = document.createElement("a");
              s.setAttribute("data-element-id", t.id);
              var n = !1;
              if (t.url) {
                e.addLinkAttributes(s, t.url, t.newWindow);
                n = !0;
              } else if (t.action) {
                this._bindNamedAction(s, t.action);
                n = !0;
              } else if (t.attachment) {
                this._bindAttachment(s, t.attachment);
                n = !0;
              } else if (t.setOCGState) {
                _classPrivateMethodGet(this, _Ce, _Ce2).call(this, s, t.setOCGState);
                n = !0;
              } else if (t.dest) {
                this._bindLink(s, t.dest);
                n = !0;
              } else {
                if (t.actions && (t.actions.Action || t.actions["Mouse Up"] || t.actions["Mouse Down"]) && this.enableScripting && this.hasJSActions) {
                  this._bindJSAction(s, t);
                  n = !0;
                }
                if (t.resetForm) {
                  this._bindResetFormAction(s, t.resetForm);
                  n = !0;
                } else if (this.isTooltipOnly && !n) {
                  this._bindLink(s, "");
                  n = !0;
                }
              }
              if (this.quadrilaterals) return this._renderQuadrilaterals("linkAnnotation").map(function (t, e) {
                var n = 0 === e ? s : s.cloneNode();
                t.append(n);
                return t;
              });
              this.container.className = "linkAnnotation";
              n && this.container.append(s);
              return this.container;
            }
          }, {
            key: "_bindLink",
            value: function _bindLink(t, e) {
              var _this54 = this;
              t.href = this.linkService.getDestinationHash(e);
              t.onclick = function () {
                e && _this54.linkService.goToDestination(e);
                return !1;
              };
              (e || "" === e) && _classPrivateMethodGet(this, _Pe, _Pe2).call(this);
            }
          }, {
            key: "_bindNamedAction",
            value: function _bindNamedAction(t, e) {
              var _this55 = this;
              t.href = this.linkService.getAnchorUrl("");
              t.onclick = function () {
                _this55.linkService.executeNamedAction(e);
                return !1;
              };
              _classPrivateMethodGet(this, _Pe, _Pe2).call(this);
            }
          }, {
            key: "_bindAttachment",
            value: function _bindAttachment(t, e) {
              var _this56 = this;
              t.href = this.linkService.getAnchorUrl("");
              t.onclick = function () {
                var _this56$downloadManag;
                (_this56$downloadManag = _this56.downloadManager) === null || _this56$downloadManag === void 0 ? void 0 : _this56$downloadManag.openOrDownloadData(_this56.container, e.content, e.filename);
                return !1;
              };
              _classPrivateMethodGet(this, _Pe, _Pe2).call(this);
            }
          }, {
            key: "_bindJSAction",
            value: function _bindJSAction(t, e) {
              var _this57 = this;
              t.href = this.linkService.getAnchorUrl("");
              var s = new Map([["Action", "onclick"], ["Mouse Up", "onmouseup"], ["Mouse Down", "onmousedown"]]);
              var _loop = function _loop() {
                var n = _Object$keys2[_i49];
                var i = s.get(n);
                i && (t[i] = function () {
                  var _this57$linkService$e;
                  (_this57$linkService$e = _this57.linkService.eventBus) === null || _this57$linkService$e === void 0 ? void 0 : _this57$linkService$e.dispatch("dispatcheventinsandbox", {
                    source: _this57,
                    detail: {
                      id: e.id,
                      name: n
                    }
                  });
                  return !1;
                });
              };
              for (var _i49 = 0, _Object$keys2 = Object.keys(e.actions); _i49 < _Object$keys2.length; _i49++) {
                _loop();
              }
              t.onclick || (t.onclick = function () {
                return !1;
              });
              _classPrivateMethodGet(this, _Pe, _Pe2).call(this);
            }
          }, {
            key: "_bindResetFormAction",
            value: function _bindResetFormAction(t, e) {
              var _this58 = this;
              var s = t.onclick;
              s || (t.href = this.linkService.getAnchorUrl(""));
              _classPrivateMethodGet(this, _Pe, _Pe2).call(this);
              if (this._fieldObjects) t.onclick = function () {
                var _this58$linkService$e;
                s === null || s === void 0 ? void 0 : s();
                var t = e.fields,
                  i = e.refs,
                  a = e.include,
                  r = [];
                if (0 !== t.length || 0 !== i.length) {
                  var _e81 = new Set(i);
                  var _iterator94 = _createForOfIteratorHelper(t),
                    _step94;
                  try {
                    for (_iterator94.s(); !(_step94 = _iterator94.n()).done;) {
                      var _s68 = _step94.value;
                      var _t120 = _this58._fieldObjects[_s68] || [];
                      var _iterator96 = _createForOfIteratorHelper(_t120),
                        _step96;
                      try {
                        for (_iterator96.s(); !(_step96 = _iterator96.n()).done;) {
                          var _s69 = _step96.value.id;
                          _e81.add(_s69);
                        }
                      } catch (err) {
                        _iterator96.e(err);
                      } finally {
                        _iterator96.f();
                      }
                    }
                  } catch (err) {
                    _iterator94.e(err);
                  } finally {
                    _iterator94.f();
                  }
                  for (var _i50 = 0, _Object$values = Object.values(_this58._fieldObjects); _i50 < _Object$values.length; _i50++) {
                    var _t119 = _Object$values[_i50];
                    var _iterator95 = _createForOfIteratorHelper(_t119),
                      _step95;
                    try {
                      for (_iterator95.s(); !(_step95 = _iterator95.n()).done;) {
                        var _s67 = _step95.value;
                        _e81.has(_s67.id) === a && r.push(_s67);
                      }
                    } catch (err) {
                      _iterator95.e(err);
                    } finally {
                      _iterator95.f();
                    }
                  }
                } else for (var _i51 = 0, _Object$values2 = Object.values(_this58._fieldObjects); _i51 < _Object$values2.length; _i51++) {
                  var _t121 = _Object$values2[_i51];
                  r.push.apply(r, _toConsumableArray(_t121));
                }
                var o = _this58.annotationStorage,
                  l = [];
                for (var _i52 = 0, _r20 = r; _i52 < _r20.length; _i52++) {
                  var _t122 = _r20[_i52];
                  var _e82 = _t122.id;
                  l.push(_e82);
                  switch (_t122.type) {
                    case "text":
                      {
                        var _s70 = _t122.defaultValue || "";
                        o.setValue(_e82, {
                          value: _s70
                        });
                        break;
                      }
                    case "checkbox":
                    case "radiobutton":
                      {
                        var _s71 = _t122.defaultValue === _t122.exportValues;
                        o.setValue(_e82, {
                          value: _s71
                        });
                        break;
                      }
                    case "combobox":
                    case "listbox":
                      {
                        var _s72 = _t122.defaultValue || "";
                        o.setValue(_e82, {
                          value: _s72
                        });
                        break;
                      }
                    default:
                      continue;
                  }
                  var _s73 = document.querySelector("[data-element-id=\"".concat(_e82, "\"]"));
                  _s73 && (c.has(_s73) ? _s73.dispatchEvent(new Event("resetform")) : (0, n.warn)("_bindResetFormAction - element not allowed: ".concat(_e82)));
                }
                _this58.enableScripting && ((_this58$linkService$e = _this58.linkService.eventBus) === null || _this58$linkService$e === void 0 ? void 0 : _this58$linkService$e.dispatch("dispatcheventinsandbox", {
                  source: _this58,
                  detail: {
                    id: "app",
                    ids: l,
                    name: "ResetForm"
                  }
                }));
                return !1;
              };else {
                (0, n.warn)('_bindResetFormAction - "resetForm" action not supported, ensure that the `fieldObjects` parameter is provided.');
                s || (t.onclick = function () {
                  return !1;
                });
              }
            }
          }]);
          return LinkAnnotationElement;
        }(AnnotationElement);
        function _Pe2() {
          this.container.setAttribute("data-internal-link", "");
        }
        function _Ce2(t, e) {
          var _this70 = this;
          t.href = this.linkService.getAnchorUrl("");
          t.onclick = function () {
            _this70.linkService.executeSetOCGState(e);
            return !1;
          };
          _classPrivateMethodGet(this, _Pe, _Pe2).call(this);
        }
        var TextAnnotationElement = /*#__PURE__*/function (_AnnotationElement2) {
          _inherits(TextAnnotationElement, _AnnotationElement2);
          var _super23 = _createSuper(TextAnnotationElement);
          function TextAnnotationElement(t) {
            var _t$data$titleObj, _t$data$contentsObj, _t$data$richText;
            _classCallCheck(this, TextAnnotationElement);
            return _super23.call(this, t, {
              isRenderable: !!(t.data.hasPopup || (_t$data$titleObj = t.data.titleObj) !== null && _t$data$titleObj !== void 0 && _t$data$titleObj.str || (_t$data$contentsObj = t.data.contentsObj) !== null && _t$data$contentsObj !== void 0 && _t$data$contentsObj.str || (_t$data$richText = t.data.richText) !== null && _t$data$richText !== void 0 && _t$data$richText.str)
            });
          }
          _createClass(TextAnnotationElement, [{
            key: "render",
            value: function render() {
              this.container.className = "textAnnotation";
              var t = document.createElement("img");
              t.src = this.imageResourcesPath + "annotation-" + this.data.name.toLowerCase() + ".svg";
              t.alt = "[{{type}} Annotation]";
              t.dataset.l10nId = "text_annotation_type";
              t.dataset.l10nArgs = JSON.stringify({
                type: this.data.name
              });
              this.data.hasPopup || this._createPopup(t, this.data);
              this.container.append(t);
              return this.container;
            }
          }]);
          return TextAnnotationElement;
        }(AnnotationElement);
        var WidgetAnnotationElement = /*#__PURE__*/function (_AnnotationElement3) {
          _inherits(WidgetAnnotationElement, _AnnotationElement3);
          var _super24 = _createSuper(WidgetAnnotationElement);
          function WidgetAnnotationElement() {
            _classCallCheck(this, WidgetAnnotationElement);
            return _super24.apply(this, arguments);
          }
          _createClass(WidgetAnnotationElement, [{
            key: "render",
            value: function render() {
              this.data.alternativeText && (this.container.title = this.data.alternativeText);
              return this.container;
            }
          }, {
            key: "_getKeyModifier",
            value: function _getKeyModifier(t) {
              var _n$FeatureTest$platfo = n.FeatureTest.platform,
                e = _n$FeatureTest$platfo.isWin,
                s = _n$FeatureTest$platfo.isMac;
              return e && t.ctrlKey || s && t.metaKey;
            }
          }, {
            key: "_setEventListener",
            value: function _setEventListener(t, e, s, n) {
              var _this59 = this;
              e.includes("mouse") ? t.addEventListener(e, function (t) {
                var _this59$linkService$e;
                (_this59$linkService$e = _this59.linkService.eventBus) === null || _this59$linkService$e === void 0 ? void 0 : _this59$linkService$e.dispatch("dispatcheventinsandbox", {
                  source: _this59,
                  detail: {
                    id: _this59.data.id,
                    name: s,
                    value: n(t),
                    shift: t.shiftKey,
                    modifier: _this59._getKeyModifier(t)
                  }
                });
              }) : t.addEventListener(e, function (t) {
                var _this59$linkService$e2;
                (_this59$linkService$e2 = _this59.linkService.eventBus) === null || _this59$linkService$e2 === void 0 ? void 0 : _this59$linkService$e2.dispatch("dispatcheventinsandbox", {
                  source: _this59,
                  detail: {
                    id: _this59.data.id,
                    name: s,
                    value: n(t)
                  }
                });
              });
            }
          }, {
            key: "_setEventListeners",
            value: function _setEventListeners(t, e, s) {
              var _iterator97 = _createForOfIteratorHelper(e),
                _step97;
              try {
                for (_iterator97.s(); !(_step97 = _iterator97.n()).done;) {
                  var _this$data$actions;
                  var _step97$value = _slicedToArray(_step97.value, 2),
                    _n49 = _step97$value[0],
                    _i53 = _step97$value[1];
                  ("Action" === _i53 || ((_this$data$actions = this.data.actions) === null || _this$data$actions === void 0 ? void 0 : _this$data$actions[_i53])) && this._setEventListener(t, _n49, _i53, s);
                }
              } catch (err) {
                _iterator97.e(err);
              } finally {
                _iterator97.f();
              }
            }
          }, {
            key: "_setBackgroundColor",
            value: function _setBackgroundColor(t) {
              var e = this.data.backgroundColor || null;
              t.style.backgroundColor = null === e ? "transparent" : n.Util.makeHexColor(e[0], e[1], e[2]);
            }
          }, {
            key: "_setTextStyle",
            value: function _setTextStyle(t) {
              var e = ["left", "center", "right"],
                s = this.data.defaultAppearanceData.fontColor,
                i = this.data.defaultAppearanceData.fontSize || 9,
                a = t.style;
              var r;
              var roundToOneDecimal = function roundToOneDecimal(t) {
                return Math.round(10 * t) / 10;
              };
              if (this.data.multiLine) {
                var _t123 = Math.abs(this.data.rect[3] - this.data.rect[1] - 2),
                  _e83 = _t123 / (Math.round(_t123 / (n.LINE_FACTOR * i)) || 1);
                r = Math.min(i, roundToOneDecimal(_e83 / n.LINE_FACTOR));
              } else {
                var _t124 = Math.abs(this.data.rect[3] - this.data.rect[1] - 2);
                r = Math.min(i, roundToOneDecimal(_t124 / n.LINE_FACTOR));
              }
              a.fontSize = "calc(".concat(r, "px * var(--scale-factor))");
              a.color = n.Util.makeHexColor(s[0], s[1], s[2]);
              null !== this.data.textAlignment && (a.textAlign = e[this.data.textAlignment]);
            }
          }, {
            key: "_setRequired",
            value: function _setRequired(t, e) {
              e ? t.setAttribute("required", !0) : t.removeAttribute("required");
              t.setAttribute("aria-required", e);
            }
          }]);
          return WidgetAnnotationElement;
        }(AnnotationElement);
        var TextWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem) {
          _inherits(TextWidgetAnnotationElement, _WidgetAnnotationElem);
          var _super25 = _createSuper(TextWidgetAnnotationElement);
          function TextWidgetAnnotationElement(t) {
            _classCallCheck(this, TextWidgetAnnotationElement);
            return _super25.call(this, t, {
              isRenderable: t.renderForms || !t.data.hasAppearance && !!t.data.fieldValue
            });
          }
          _createClass(TextWidgetAnnotationElement, [{
            key: "setPropertyOnSiblings",
            value: function setPropertyOnSiblings(t, e, s, n) {
              var i = this.annotationStorage;
              var _iterator98 = _createForOfIteratorHelper(this._getElementsByName(t.name, t.id)),
                _step98;
              try {
                for (_iterator98.s(); !(_step98 = _iterator98.n()).done;) {
                  var _a25 = _step98.value;
                  _a25.domElement && (_a25.domElement[e] = s);
                  i.setValue(_a25.id, _defineProperty({}, n, s));
                }
              } catch (err) {
                _iterator98.e(err);
              } finally {
                _iterator98.f();
              }
            }
          }, {
            key: "render",
            value: function render() {
              var _this60 = this;
              var t = this.annotationStorage,
                e = this.data.id;
              this.container.className = "textWidgetAnnotation";
              var s = null;
              if (this.renderForms) {
                var _n50 = t.getValue(e, {
                  value: this.data.fieldValue
                });
                var _i54 = _n50.formattedValue || _n50.value || "";
                var _a26 = t.getValue(e, {
                  charLimit: this.data.maxLen
                }).charLimit;
                _a26 && _i54.length > _a26 && (_i54 = _i54.slice(0, _a26));
                var _r21 = {
                  userValue: _i54,
                  formattedValue: null,
                  lastCommittedValue: null,
                  commitKey: 1
                };
                if (this.data.multiLine) {
                  s = document.createElement("textarea");
                  s.textContent = _i54;
                  this.data.doNotScroll && (s.style.overflowY = "hidden");
                } else {
                  s = document.createElement("input");
                  s.type = "text";
                  s.setAttribute("value", _i54);
                  this.data.doNotScroll && (s.style.overflowX = "hidden");
                }
                c.add(s);
                s.setAttribute("data-element-id", e);
                s.disabled = this.data.readOnly;
                s.name = this.data.fieldName;
                s.tabIndex = l;
                this._setRequired(s, this.data.required);
                _a26 && (s.maxLength = _a26);
                s.addEventListener("input", function (n) {
                  t.setValue(e, {
                    value: n.target.value
                  });
                  _this60.setPropertyOnSiblings(s, "value", n.target.value, "value");
                });
                s.addEventListener("resetform", function (t) {
                  var _this60$data$defaultF;
                  var e = (_this60$data$defaultF = _this60.data.defaultFieldValue) !== null && _this60$data$defaultF !== void 0 ? _this60$data$defaultF : "";
                  s.value = _r21.userValue = e;
                  _r21.formattedValue = null;
                });
                var blurListener = function blurListener(t) {
                  var e = _r21.formattedValue;
                  null != e && (t.target.value = e);
                  t.target.scrollLeft = 0;
                };
                if (this.enableScripting && this.hasJSActions) {
                  var _this$data$actions2;
                  s.addEventListener("focus", function (t) {
                    var e = t.target;
                    _r21.userValue && (e.value = _r21.userValue);
                    _r21.lastCommittedValue = e.value;
                    _r21.commitKey = 1;
                  });
                  s.addEventListener("updatefromsandbox", function (s) {
                    var n = {
                      value: function value(s) {
                        var _s$detail$value;
                        _r21.userValue = (_s$detail$value = s.detail.value) !== null && _s$detail$value !== void 0 ? _s$detail$value : "";
                        t.setValue(e, {
                          value: _r21.userValue.toString()
                        });
                        s.target.value = _r21.userValue;
                      },
                      formattedValue: function formattedValue(s) {
                        var n = s.detail.formattedValue;
                        _r21.formattedValue = n;
                        null != n && s.target !== document.activeElement && (s.target.value = n);
                        t.setValue(e, {
                          formattedValue: n
                        });
                      },
                      selRange: function selRange(t) {
                        var _t$target;
                        (_t$target = t.target).setSelectionRange.apply(_t$target, _toConsumableArray(t.detail.selRange));
                      },
                      charLimit: function charLimit(s) {
                        var n = s.detail.charLimit,
                          i = s.target;
                        if (0 === n) {
                          i.removeAttribute("maxLength");
                          return;
                        }
                        i.setAttribute("maxLength", n);
                        var a = _r21.userValue;
                        if (a && !(a.length <= n)) {
                          var _this60$linkService$e;
                          a = a.slice(0, n);
                          i.value = _r21.userValue = a;
                          t.setValue(e, {
                            value: a
                          });
                          (_this60$linkService$e = _this60.linkService.eventBus) === null || _this60$linkService$e === void 0 ? void 0 : _this60$linkService$e.dispatch("dispatcheventinsandbox", {
                            source: _this60,
                            detail: {
                              id: e,
                              name: "Keystroke",
                              value: a,
                              willCommit: !0,
                              commitKey: 1,
                              selStart: i.selectionStart,
                              selEnd: i.selectionEnd
                            }
                          });
                        }
                      }
                    };
                    _this60._dispatchEventFromSandbox(n, s);
                  });
                  s.addEventListener("keydown", function (t) {
                    _r21.commitKey = 1;
                    var s = -1;
                    "Escape" === t.key ? s = 0 : "Enter" !== t.key || _this60.data.multiLine ? "Tab" === t.key && (_r21.commitKey = 3) : s = 2;
                    if (-1 === s) return;
                    var n = t.target.value;
                    if (_r21.lastCommittedValue !== n) {
                      var _this60$linkService$e2;
                      _r21.lastCommittedValue = n;
                      _r21.userValue = n;
                      (_this60$linkService$e2 = _this60.linkService.eventBus) === null || _this60$linkService$e2 === void 0 ? void 0 : _this60$linkService$e2.dispatch("dispatcheventinsandbox", {
                        source: _this60,
                        detail: {
                          id: e,
                          name: "Keystroke",
                          value: n,
                          willCommit: !0,
                          commitKey: s,
                          selStart: t.target.selectionStart,
                          selEnd: t.target.selectionEnd
                        }
                      });
                    }
                  });
                  var _n51 = blurListener;
                  blurListener = null;
                  s.addEventListener("blur", function (t) {
                    var _this60$linkService$e3;
                    if (!t.relatedTarget) return;
                    var s = t.target.value;
                    _r21.userValue = s;
                    _r21.lastCommittedValue !== s && ((_this60$linkService$e3 = _this60.linkService.eventBus) === null || _this60$linkService$e3 === void 0 ? void 0 : _this60$linkService$e3.dispatch("dispatcheventinsandbox", {
                      source: _this60,
                      detail: {
                        id: e,
                        name: "Keystroke",
                        value: s,
                        willCommit: !0,
                        commitKey: _r21.commitKey,
                        selStart: t.target.selectionStart,
                        selEnd: t.target.selectionEnd
                      }
                    }));
                    _n51(t);
                  });
                  ((_this$data$actions2 = this.data.actions) === null || _this$data$actions2 === void 0 ? void 0 : _this$data$actions2.Keystroke) && s.addEventListener("beforeinput", function (t) {
                    var _this60$linkService$e4;
                    _r21.lastCommittedValue = null;
                    var s = t.data,
                      n = t.target,
                      i = n.value,
                      a = n.selectionStart,
                      o = n.selectionEnd;
                    var l = a,
                      c = o;
                    switch (t.inputType) {
                      case "deleteWordBackward":
                        {
                          var _t125 = i.substring(0, a).match(/\w*[^\w]*$/);
                          _t125 && (l -= _t125[0].length);
                          break;
                        }
                      case "deleteWordForward":
                        {
                          var _t126 = i.substring(a).match(/^[^\w]*\w*/);
                          _t126 && (c += _t126[0].length);
                          break;
                        }
                      case "deleteContentBackward":
                        a === o && (l -= 1);
                        break;
                      case "deleteContentForward":
                        a === o && (c += 1);
                    }
                    t.preventDefault();
                    (_this60$linkService$e4 = _this60.linkService.eventBus) === null || _this60$linkService$e4 === void 0 ? void 0 : _this60$linkService$e4.dispatch("dispatcheventinsandbox", {
                      source: _this60,
                      detail: {
                        id: e,
                        name: "Keystroke",
                        value: i,
                        change: s || "",
                        willCommit: !1,
                        selStart: l,
                        selEnd: c
                      }
                    });
                  });
                  this._setEventListeners(s, [["focus", "Focus"], ["blur", "Blur"], ["mousedown", "Mouse Down"], ["mouseenter", "Mouse Enter"], ["mouseleave", "Mouse Exit"], ["mouseup", "Mouse Up"]], function (t) {
                    return t.target.value;
                  });
                }
                blurListener && s.addEventListener("blur", blurListener);
                if (this.data.comb) {
                  var _t127 = (this.data.rect[2] - this.data.rect[0]) / _a26;
                  s.classList.add("comb");
                  s.style.letterSpacing = "calc(".concat(_t127, "px * var(--scale-factor) - 1ch)");
                }
              } else {
                s = document.createElement("div");
                s.textContent = this.data.fieldValue;
                s.style.verticalAlign = "middle";
                s.style.display = "table-cell";
              }
              this._setTextStyle(s);
              this._setBackgroundColor(s);
              this._setDefaultPropertiesFromJS(s);
              this.container.append(s);
              return this.container;
            }
          }]);
          return TextWidgetAnnotationElement;
        }(WidgetAnnotationElement);
        var CheckboxWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem2) {
          _inherits(CheckboxWidgetAnnotationElement, _WidgetAnnotationElem2);
          var _super26 = _createSuper(CheckboxWidgetAnnotationElement);
          function CheckboxWidgetAnnotationElement(t) {
            _classCallCheck(this, CheckboxWidgetAnnotationElement);
            return _super26.call(this, t, {
              isRenderable: t.renderForms
            });
          }
          _createClass(CheckboxWidgetAnnotationElement, [{
            key: "render",
            value: function render() {
              var _this61 = this;
              var t = this.annotationStorage,
                e = this.data,
                s = e.id;
              var n = t.getValue(s, {
                value: e.exportValue === e.fieldValue
              }).value;
              if ("string" == typeof n) {
                n = "Off" !== n;
                t.setValue(s, {
                  value: n
                });
              }
              this.container.className = "buttonWidgetAnnotation checkBox";
              var i = document.createElement("input");
              c.add(i);
              i.setAttribute("data-element-id", s);
              i.disabled = e.readOnly;
              this._setRequired(i, this.data.required);
              i.type = "checkbox";
              i.name = e.fieldName;
              n && i.setAttribute("checked", !0);
              i.setAttribute("exportValue", e.exportValue);
              i.tabIndex = l;
              i.addEventListener("change", function (n) {
                var _n$target = n.target,
                  i = _n$target.name,
                  a = _n$target.checked;
                var _iterator99 = _createForOfIteratorHelper(_this61._getElementsByName(i, s)),
                  _step99;
                try {
                  for (_iterator99.s(); !(_step99 = _iterator99.n()).done;) {
                    var _n52 = _step99.value;
                    var _s74 = a && _n52.exportValue === e.exportValue;
                    _n52.domElement && (_n52.domElement.checked = _s74);
                    t.setValue(_n52.id, {
                      value: _s74
                    });
                  }
                } catch (err) {
                  _iterator99.e(err);
                } finally {
                  _iterator99.f();
                }
                t.setValue(s, {
                  value: a
                });
              });
              i.addEventListener("resetform", function (t) {
                var s = e.defaultFieldValue || "Off";
                t.target.checked = s === e.exportValue;
              });
              if (this.enableScripting && this.hasJSActions) {
                i.addEventListener("updatefromsandbox", function (e) {
                  var n = {
                    value: function value(e) {
                      e.target.checked = "Off" !== e.detail.value;
                      t.setValue(s, {
                        value: e.target.checked
                      });
                    }
                  };
                  _this61._dispatchEventFromSandbox(n, e);
                });
                this._setEventListeners(i, [["change", "Validate"], ["change", "Action"], ["focus", "Focus"], ["blur", "Blur"], ["mousedown", "Mouse Down"], ["mouseenter", "Mouse Enter"], ["mouseleave", "Mouse Exit"], ["mouseup", "Mouse Up"]], function (t) {
                  return t.target.checked;
                });
              }
              this._setBackgroundColor(i);
              this._setDefaultPropertiesFromJS(i);
              this.container.append(i);
              return this.container;
            }
          }]);
          return CheckboxWidgetAnnotationElement;
        }(WidgetAnnotationElement);
        var RadioButtonWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem3) {
          _inherits(RadioButtonWidgetAnnotationElement, _WidgetAnnotationElem3);
          var _super27 = _createSuper(RadioButtonWidgetAnnotationElement);
          function RadioButtonWidgetAnnotationElement(t) {
            _classCallCheck(this, RadioButtonWidgetAnnotationElement);
            return _super27.call(this, t, {
              isRenderable: t.renderForms
            });
          }
          _createClass(RadioButtonWidgetAnnotationElement, [{
            key: "render",
            value: function render() {
              var _this62 = this;
              this.container.className = "buttonWidgetAnnotation radioButton";
              var t = this.annotationStorage,
                e = this.data,
                s = e.id;
              var n = t.getValue(s, {
                value: e.fieldValue === e.buttonValue
              }).value;
              if ("string" == typeof n) {
                n = n !== e.buttonValue;
                t.setValue(s, {
                  value: n
                });
              }
              var i = document.createElement("input");
              c.add(i);
              i.setAttribute("data-element-id", s);
              i.disabled = e.readOnly;
              this._setRequired(i, this.data.required);
              i.type = "radio";
              i.name = e.fieldName;
              n && i.setAttribute("checked", !0);
              i.tabIndex = l;
              i.addEventListener("change", function (e) {
                var _e$target = e.target,
                  n = _e$target.name,
                  i = _e$target.checked;
                var _iterator100 = _createForOfIteratorHelper(_this62._getElementsByName(n, s)),
                  _step100;
                try {
                  for (_iterator100.s(); !(_step100 = _iterator100.n()).done;) {
                    var _e84 = _step100.value;
                    t.setValue(_e84.id, {
                      value: !1
                    });
                  }
                } catch (err) {
                  _iterator100.e(err);
                } finally {
                  _iterator100.f();
                }
                t.setValue(s, {
                  value: i
                });
              });
              i.addEventListener("resetform", function (t) {
                var s = e.defaultFieldValue;
                t.target.checked = null != s && s === e.buttonValue;
              });
              if (this.enableScripting && this.hasJSActions) {
                var _n53 = e.buttonValue;
                i.addEventListener("updatefromsandbox", function (e) {
                  var i = {
                    value: function value(e) {
                      var i = _n53 === e.detail.value;
                      var _iterator101 = _createForOfIteratorHelper(_this62._getElementsByName(e.target.name)),
                        _step101;
                      try {
                        for (_iterator101.s(); !(_step101 = _iterator101.n()).done;) {
                          var _n54 = _step101.value;
                          var _e85 = i && _n54.id === s;
                          _n54.domElement && (_n54.domElement.checked = _e85);
                          t.setValue(_n54.id, {
                            value: _e85
                          });
                        }
                      } catch (err) {
                        _iterator101.e(err);
                      } finally {
                        _iterator101.f();
                      }
                    }
                  };
                  _this62._dispatchEventFromSandbox(i, e);
                });
                this._setEventListeners(i, [["change", "Validate"], ["change", "Action"], ["focus", "Focus"], ["blur", "Blur"], ["mousedown", "Mouse Down"], ["mouseenter", "Mouse Enter"], ["mouseleave", "Mouse Exit"], ["mouseup", "Mouse Up"]], function (t) {
                  return t.target.checked;
                });
              }
              this._setBackgroundColor(i);
              this._setDefaultPropertiesFromJS(i);
              this.container.append(i);
              return this.container;
            }
          }]);
          return RadioButtonWidgetAnnotationElement;
        }(WidgetAnnotationElement);
        var PushButtonWidgetAnnotationElement = /*#__PURE__*/function (_LinkAnnotationElemen) {
          _inherits(PushButtonWidgetAnnotationElement, _LinkAnnotationElemen);
          var _super28 = _createSuper(PushButtonWidgetAnnotationElement);
          function PushButtonWidgetAnnotationElement(t) {
            _classCallCheck(this, PushButtonWidgetAnnotationElement);
            return _super28.call(this, t, {
              ignoreBorder: t.data.hasAppearance
            });
          }
          _createClass(PushButtonWidgetAnnotationElement, [{
            key: "render",
            value: function render() {
              var _this63 = this;
              var t = _get(_getPrototypeOf(PushButtonWidgetAnnotationElement.prototype), "render", this).call(this);
              t.className = "buttonWidgetAnnotation pushButton";
              this.data.alternativeText && (t.title = this.data.alternativeText);
              var e = t.lastChild;
              if (this.enableScripting && this.hasJSActions && e) {
                this._setDefaultPropertiesFromJS(e);
                e.addEventListener("updatefromsandbox", function (t) {
                  _this63._dispatchEventFromSandbox({}, t);
                });
              }
              return t;
            }
          }]);
          return PushButtonWidgetAnnotationElement;
        }(LinkAnnotationElement);
        var ChoiceWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem4) {
          _inherits(ChoiceWidgetAnnotationElement, _WidgetAnnotationElem4);
          var _super29 = _createSuper(ChoiceWidgetAnnotationElement);
          function ChoiceWidgetAnnotationElement(t) {
            _classCallCheck(this, ChoiceWidgetAnnotationElement);
            return _super29.call(this, t, {
              isRenderable: t.renderForms
            });
          }
          _createClass(ChoiceWidgetAnnotationElement, [{
            key: "render",
            value: function render() {
              var _this64 = this;
              this.container.className = "choiceWidgetAnnotation";
              var t = this.annotationStorage,
                e = this.data.id,
                s = t.getValue(e, {
                  value: this.data.fieldValue
                }),
                n = document.createElement("select");
              c.add(n);
              n.setAttribute("data-element-id", e);
              n.disabled = this.data.readOnly;
              this._setRequired(n, this.data.required);
              n.name = this.data.fieldName;
              n.tabIndex = l;
              var i = this.data.combo && this.data.options.length > 0;
              if (!this.data.combo) {
                n.size = this.data.options.length;
                this.data.multiSelect && (n.multiple = !0);
              }
              n.addEventListener("resetform", function (t) {
                var e = _this64.data.defaultFieldValue;
                var _iterator102 = _createForOfIteratorHelper(n.options),
                  _step102;
                try {
                  for (_iterator102.s(); !(_step102 = _iterator102.n()).done;) {
                    var _t128 = _step102.value;
                    _t128.selected = _t128.value === e;
                  }
                } catch (err) {
                  _iterator102.e(err);
                } finally {
                  _iterator102.f();
                }
              });
              var _iterator103 = _createForOfIteratorHelper(this.data.options),
                _step103;
              try {
                for (_iterator103.s(); !(_step103 = _iterator103.n()).done;) {
                  var _t133 = _step103.value;
                  var _e87 = document.createElement("option");
                  _e87.textContent = _t133.displayValue;
                  _e87.value = _t133.exportValue;
                  if (s.value.includes(_t133.exportValue)) {
                    _e87.setAttribute("selected", !0);
                    i = !1;
                  }
                  n.append(_e87);
                }
              } catch (err) {
                _iterator103.e(err);
              } finally {
                _iterator103.f();
              }
              var _a27 = null;
              if (i) {
                var _t129 = document.createElement("option");
                _t129.value = " ";
                _t129.setAttribute("hidden", !0);
                _t129.setAttribute("selected", !0);
                n.prepend(_t129);
                _a27 = function a() {
                  _t129.remove();
                  n.removeEventListener("input", _a27);
                  _a27 = null;
                };
                n.addEventListener("input", _a27);
              }
              var getValue = function getValue(t) {
                var e = t ? "value" : "textContent",
                  s = n.options,
                  i = n.multiple;
                return i ? Array.prototype.filter.call(s, function (t) {
                  return t.selected;
                }).map(function (t) {
                  return t[e];
                }) : -1 === s.selectedIndex ? null : s[s.selectedIndex][e];
              };
              var r = getValue(!1);
              var getItems = function getItems(t) {
                var e = t.target.options;
                return Array.prototype.map.call(e, function (t) {
                  return {
                    displayValue: t.textContent,
                    exportValue: t.value
                  };
                });
              };
              if (this.enableScripting && this.hasJSActions) {
                n.addEventListener("updatefromsandbox", function (s) {
                  var i = {
                    value: function value(s) {
                      var _a28;
                      (_a28 = _a27) === null || _a28 === void 0 ? void 0 : _a28();
                      var i = s.detail.value,
                        o = new Set(Array.isArray(i) ? i : [i]);
                      var _iterator104 = _createForOfIteratorHelper(n.options),
                        _step104;
                      try {
                        for (_iterator104.s(); !(_step104 = _iterator104.n()).done;) {
                          var _t130 = _step104.value;
                          _t130.selected = o.has(_t130.value);
                        }
                      } catch (err) {
                        _iterator104.e(err);
                      } finally {
                        _iterator104.f();
                      }
                      t.setValue(e, {
                        value: getValue(!0)
                      });
                      r = getValue(!1);
                    },
                    multipleSelection: function multipleSelection(t) {
                      n.multiple = !0;
                    },
                    remove: function remove(s) {
                      var i = n.options,
                        a = s.detail.remove;
                      i[a].selected = !1;
                      n.remove(a);
                      if (i.length > 0) {
                        -1 === Array.prototype.findIndex.call(i, function (t) {
                          return t.selected;
                        }) && (i[0].selected = !0);
                      }
                      t.setValue(e, {
                        value: getValue(!0),
                        items: getItems(s)
                      });
                      r = getValue(!1);
                    },
                    clear: function clear(s) {
                      for (; 0 !== n.length;) n.remove(0);
                      t.setValue(e, {
                        value: null,
                        items: []
                      });
                      r = getValue(!1);
                    },
                    insert: function insert(s) {
                      var _s$detail$insert = s.detail.insert,
                        i = _s$detail$insert.index,
                        a = _s$detail$insert.displayValue,
                        o = _s$detail$insert.exportValue,
                        l = n.children[i],
                        c = document.createElement("option");
                      c.textContent = a;
                      c.value = o;
                      l ? l.before(c) : n.append(c);
                      t.setValue(e, {
                        value: getValue(!0),
                        items: getItems(s)
                      });
                      r = getValue(!1);
                    },
                    items: function items(s) {
                      var i = s.detail.items;
                      for (; 0 !== n.length;) n.remove(0);
                      var _iterator105 = _createForOfIteratorHelper(i),
                        _step105;
                      try {
                        for (_iterator105.s(); !(_step105 = _iterator105.n()).done;) {
                          var _t131 = _step105.value;
                          var _e86 = _t131.displayValue,
                            _s75 = _t131.exportValue,
                            _i55 = document.createElement("option");
                          _i55.textContent = _e86;
                          _i55.value = _s75;
                          n.append(_i55);
                        }
                      } catch (err) {
                        _iterator105.e(err);
                      } finally {
                        _iterator105.f();
                      }
                      n.options.length > 0 && (n.options[0].selected = !0);
                      t.setValue(e, {
                        value: getValue(!0),
                        items: getItems(s)
                      });
                      r = getValue(!1);
                    },
                    indices: function indices(s) {
                      var n = new Set(s.detail.indices);
                      var _iterator106 = _createForOfIteratorHelper(s.target.options),
                        _step106;
                      try {
                        for (_iterator106.s(); !(_step106 = _iterator106.n()).done;) {
                          var _t132 = _step106.value;
                          _t132.selected = n.has(_t132.index);
                        }
                      } catch (err) {
                        _iterator106.e(err);
                      } finally {
                        _iterator106.f();
                      }
                      t.setValue(e, {
                        value: getValue(!0)
                      });
                      r = getValue(!1);
                    },
                    editable: function editable(t) {
                      t.target.disabled = !t.detail.editable;
                    }
                  };
                  _this64._dispatchEventFromSandbox(i, s);
                });
                n.addEventListener("input", function (s) {
                  var _this64$linkService$e;
                  var n = getValue(!0);
                  t.setValue(e, {
                    value: n
                  });
                  s.preventDefault();
                  (_this64$linkService$e = _this64.linkService.eventBus) === null || _this64$linkService$e === void 0 ? void 0 : _this64$linkService$e.dispatch("dispatcheventinsandbox", {
                    source: _this64,
                    detail: {
                      id: e,
                      name: "Keystroke",
                      value: r,
                      changeEx: n,
                      willCommit: !1,
                      commitKey: 1,
                      keyDown: !1
                    }
                  });
                });
                this._setEventListeners(n, [["focus", "Focus"], ["blur", "Blur"], ["mousedown", "Mouse Down"], ["mouseenter", "Mouse Enter"], ["mouseleave", "Mouse Exit"], ["mouseup", "Mouse Up"], ["input", "Action"]], function (t) {
                  return t.target.checked;
                });
              } else n.addEventListener("input", function (s) {
                t.setValue(e, {
                  value: getValue(!0)
                });
              });
              this.data.combo && this._setTextStyle(n);
              this._setBackgroundColor(n);
              this._setDefaultPropertiesFromJS(n);
              this.container.append(n);
              return this.container;
            }
          }]);
          return ChoiceWidgetAnnotationElement;
        }(WidgetAnnotationElement);
        var PopupAnnotationElement = /*#__PURE__*/function (_AnnotationElement4) {
          _inherits(PopupAnnotationElement, _AnnotationElement4);
          var _super30 = _createSuper(PopupAnnotationElement);
          function PopupAnnotationElement(t) {
            var _e$titleObj, _e$contentsObj, _e$richText;
            _classCallCheck(this, PopupAnnotationElement);
            var e = t.data;
            return _super30.call(this, t, {
              isRenderable: !PopupAnnotationElement.IGNORE_TYPES.has(e.parentType) && !!((_e$titleObj = e.titleObj) !== null && _e$titleObj !== void 0 && _e$titleObj.str || (_e$contentsObj = e.contentsObj) !== null && _e$contentsObj !== void 0 && _e$contentsObj.str || (_e$richText = e.richText) !== null && _e$richText !== void 0 && _e$richText.str)
            });
          }
          _createClass(PopupAnnotationElement, [{
            key: "render",
            value: function render() {
              this.container.className = "popupAnnotation";
              var t = this.layer.querySelectorAll("[data-annotation-id=\"".concat(this.data.parentId, "\"]"));
              if (0 === t.length) return this.container;
              var e = new PopupElement({
                  container: this.container,
                  trigger: Array.from(t),
                  color: this.data.color,
                  titleObj: this.data.titleObj,
                  modificationDate: this.data.modificationDate,
                  contentsObj: this.data.contentsObj,
                  richText: this.data.richText
                }),
                s = this.page,
                i = n.Util.normalizeRect([this.data.parentRect[0], s.view[3] - this.data.parentRect[1] + s.view[1], this.data.parentRect[2], s.view[3] - this.data.parentRect[3] + s.view[1]]),
                a = i[0] + this.data.parentRect[2] - this.data.parentRect[0],
                r = i[1],
                _this$viewport$rawDim3 = this.viewport.rawDims,
                o = _this$viewport$rawDim3.pageWidth,
                l = _this$viewport$rawDim3.pageHeight,
                c = _this$viewport$rawDim3.pageX,
                h = _this$viewport$rawDim3.pageY;
              this.container.style.left = 100 * (a - c) / o + "%";
              this.container.style.top = 100 * (r - h) / l + "%";
              this.container.append(e.render());
              return this.container;
            }
          }]);
          return PopupAnnotationElement;
        }(AnnotationElement);
        _defineProperty(PopupAnnotationElement, "IGNORE_TYPES", new Set(["Line", "Square", "Circle", "PolyLine", "Polygon", "Ink"]));
        var PopupElement = /*#__PURE__*/function () {
          function PopupElement(t) {
            _classCallCheck(this, PopupElement);
            this.container = t.container;
            this.trigger = t.trigger;
            this.color = t.color;
            this.titleObj = t.titleObj;
            this.modificationDate = t.modificationDate;
            this.contentsObj = t.contentsObj;
            this.richText = t.richText;
            this.hideWrapper = t.hideWrapper || !1;
            this.pinned = !1;
          }
          _createClass(PopupElement, [{
            key: "render",
            value: function render() {
              var _this$richText, _this$contentsObj;
              var t = document.createElement("div");
              t.className = "popupWrapper";
              this.hideElement = this.hideWrapper ? t : this.container;
              this.hideElement.hidden = !0;
              var e = document.createElement("div");
              e.className = "popup";
              var s = this.color;
              if (s) {
                var _t134 = .7 * (255 - s[0]) + s[0],
                  _i56 = .7 * (255 - s[1]) + s[1],
                  _a29 = .7 * (255 - s[2]) + s[2];
                e.style.backgroundColor = n.Util.makeHexColor(0 | _t134, 0 | _i56, 0 | _a29);
              }
              var a = document.createElement("h1");
              a.dir = this.titleObj.dir;
              a.textContent = this.titleObj.str;
              e.append(a);
              var r = i.PDFDateString.toDateObject(this.modificationDate);
              if (r) {
                var _t135 = document.createElement("span");
                _t135.className = "popupDate";
                _t135.textContent = "{{date}}, {{time}}";
                _t135.dataset.l10nId = "annotation_date_string";
                _t135.dataset.l10nArgs = JSON.stringify({
                  date: r.toLocaleDateString(),
                  time: r.toLocaleTimeString()
                });
                e.append(_t135);
              }
              if (!((_this$richText = this.richText) !== null && _this$richText !== void 0 && _this$richText.str) || (_this$contentsObj = this.contentsObj) !== null && _this$contentsObj !== void 0 && _this$contentsObj.str && this.contentsObj.str !== this.richText.str) {
                var _t136 = this._formatContents(this.contentsObj);
                e.append(_t136);
              } else {
                o.XfaLayer.render({
                  xfaHtml: this.richText.html,
                  intent: "richText",
                  div: e
                });
                e.lastChild.className = "richText popupContent";
              }
              Array.isArray(this.trigger) || (this.trigger = [this.trigger]);
              var _iterator107 = _createForOfIteratorHelper(this.trigger),
                _step107;
              try {
                for (_iterator107.s(); !(_step107 = _iterator107.n()).done;) {
                  var _t137 = _step107.value;
                  _t137.addEventListener("click", this._toggle.bind(this));
                  _t137.addEventListener("mouseover", this._show.bind(this, !1));
                  _t137.addEventListener("mouseout", this._hide.bind(this, !1));
                }
              } catch (err) {
                _iterator107.e(err);
              } finally {
                _iterator107.f();
              }
              e.addEventListener("click", this._hide.bind(this, !0));
              t.append(e);
              return t;
            }
          }, {
            key: "_formatContents",
            value: function _formatContents(_ref63) {
              var t = _ref63.str,
                e = _ref63.dir;
              var s = document.createElement("p");
              s.className = "popupContent";
              s.dir = e;
              var n = t.split(/(?:\r\n?|\n)/);
              for (var _t138 = 0, _e88 = n.length; _t138 < _e88; ++_t138) {
                var _i57 = n[_t138];
                s.append(document.createTextNode(_i57));
                _t138 < _e88 - 1 && s.append(document.createElement("br"));
              }
              return s;
            }
          }, {
            key: "_toggle",
            value: function _toggle() {
              this.pinned ? this._hide(!0) : this._show(!0);
            }
          }, {
            key: "_show",
            value: function _show() {
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              t && (this.pinned = !0);
              if (this.hideElement.hidden) {
                this.hideElement.hidden = !1;
                this.container.style.zIndex = parseInt(this.container.style.zIndex) + 1e3;
              }
            }
          }, {
            key: "_hide",
            value: function _hide() {
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;
              t && (this.pinned = !1);
              if (!this.hideElement.hidden && !this.pinned) {
                this.hideElement.hidden = !0;
                this.container.style.zIndex = parseInt(this.container.style.zIndex) - 1e3;
              }
            }
          }]);
          return PopupElement;
        }();
        var FreeTextAnnotationElement = /*#__PURE__*/function (_AnnotationElement5) {
          _inherits(FreeTextAnnotationElement, _AnnotationElement5);
          var _super31 = _createSuper(FreeTextAnnotationElement);
          function FreeTextAnnotationElement(t) {
            var _t$data$titleObj2, _t$data$contentsObj2, _t$data$richText2;
            var _this65;
            _classCallCheck(this, FreeTextAnnotationElement);
            _this65 = _super31.call(this, t, {
              isRenderable: !!(t.data.hasPopup || (_t$data$titleObj2 = t.data.titleObj) !== null && _t$data$titleObj2 !== void 0 && _t$data$titleObj2.str || (_t$data$contentsObj2 = t.data.contentsObj) !== null && _t$data$contentsObj2 !== void 0 && _t$data$contentsObj2.str || (_t$data$richText2 = t.data.richText) !== null && _t$data$richText2 !== void 0 && _t$data$richText2.str),
              ignoreBorder: !0
            });
            _this65.textContent = t.data.textContent;
            return _this65;
          }
          _createClass(FreeTextAnnotationElement, [{
            key: "render",
            value: function render() {
              this.container.className = "freeTextAnnotation";
              if (this.textContent) {
                var _t139 = document.createElement("div");
                _t139.className = "annotationTextContent";
                _t139.setAttribute("role", "comment");
                var _iterator108 = _createForOfIteratorHelper(this.textContent),
                  _step108;
                try {
                  for (_iterator108.s(); !(_step108 = _iterator108.n()).done;) {
                    var _e89 = _step108.value;
                    var _s76 = document.createElement("span");
                    _s76.textContent = _e89;
                    _t139.append(_s76);
                  }
                } catch (err) {
                  _iterator108.e(err);
                } finally {
                  _iterator108.f();
                }
                this.container.append(_t139);
              }
              this.data.hasPopup || this._createPopup(null, this.data);
              return this.container;
            }
          }]);
          return FreeTextAnnotationElement;
        }(AnnotationElement);
        var LineAnnotationElement = /*#__PURE__*/function (_AnnotationElement6) {
          _inherits(LineAnnotationElement, _AnnotationElement6);
          var _super32 = _createSuper(LineAnnotationElement);
          function LineAnnotationElement(t) {
            var _t$data$titleObj3, _t$data$contentsObj3, _t$data$richText3;
            _classCallCheck(this, LineAnnotationElement);
            return _super32.call(this, t, {
              isRenderable: !!(t.data.hasPopup || (_t$data$titleObj3 = t.data.titleObj) !== null && _t$data$titleObj3 !== void 0 && _t$data$titleObj3.str || (_t$data$contentsObj3 = t.data.contentsObj) !== null && _t$data$contentsObj3 !== void 0 && _t$data$contentsObj3.str || (_t$data$richText3 = t.data.richText) !== null && _t$data$richText3 !== void 0 && _t$data$richText3.str),
              ignoreBorder: !0
            });
          }
          _createClass(LineAnnotationElement, [{
            key: "render",
            value: function render() {
              this.container.className = "lineAnnotation";
              var t = this.data,
                _getRectDims3 = getRectDims(t.rect),
                e = _getRectDims3.width,
                s = _getRectDims3.height,
                n = this.svgFactory.create(e, s, !0),
                i = this.svgFactory.createElement("svg:line");
              i.setAttribute("x1", t.rect[2] - t.lineCoordinates[0]);
              i.setAttribute("y1", t.rect[3] - t.lineCoordinates[1]);
              i.setAttribute("x2", t.rect[2] - t.lineCoordinates[2]);
              i.setAttribute("y2", t.rect[3] - t.lineCoordinates[3]);
              i.setAttribute("stroke-width", t.borderStyle.width || 1);
              i.setAttribute("stroke", "transparent");
              i.setAttribute("fill", "transparent");
              n.append(i);
              this.container.append(n);
              this._createPopup(i, t);
              return this.container;
            }
          }]);
          return LineAnnotationElement;
        }(AnnotationElement);
        var SquareAnnotationElement = /*#__PURE__*/function (_AnnotationElement7) {
          _inherits(SquareAnnotationElement, _AnnotationElement7);
          var _super33 = _createSuper(SquareAnnotationElement);
          function SquareAnnotationElement(t) {
            var _t$data$titleObj4, _t$data$contentsObj4, _t$data$richText4;
            _classCallCheck(this, SquareAnnotationElement);
            return _super33.call(this, t, {
              isRenderable: !!(t.data.hasPopup || (_t$data$titleObj4 = t.data.titleObj) !== null && _t$data$titleObj4 !== void 0 && _t$data$titleObj4.str || (_t$data$contentsObj4 = t.data.contentsObj) !== null && _t$data$contentsObj4 !== void 0 && _t$data$contentsObj4.str || (_t$data$richText4 = t.data.richText) !== null && _t$data$richText4 !== void 0 && _t$data$richText4.str),
              ignoreBorder: !0
            });
          }
          _createClass(SquareAnnotationElement, [{
            key: "render",
            value: function render() {
              this.container.className = "squareAnnotation";
              var t = this.data,
                _getRectDims4 = getRectDims(t.rect),
                e = _getRectDims4.width,
                s = _getRectDims4.height,
                n = this.svgFactory.create(e, s, !0),
                i = t.borderStyle.width,
                a = this.svgFactory.createElement("svg:rect");
              a.setAttribute("x", i / 2);
              a.setAttribute("y", i / 2);
              a.setAttribute("width", e - i);
              a.setAttribute("height", s - i);
              a.setAttribute("stroke-width", i || 1);
              a.setAttribute("stroke", "transparent");
              a.setAttribute("fill", "transparent");
              n.append(a);
              this.container.append(n);
              this._createPopup(a, t);
              return this.container;
            }
          }]);
          return SquareAnnotationElement;
        }(AnnotationElement);
        var CircleAnnotationElement = /*#__PURE__*/function (_AnnotationElement8) {
          _inherits(CircleAnnotationElement, _AnnotationElement8);
          var _super34 = _createSuper(CircleAnnotationElement);
          function CircleAnnotationElement(t) {
            var _t$data$titleObj5, _t$data$contentsObj5, _t$data$richText5;
            _classCallCheck(this, CircleAnnotationElement);
            return _super34.call(this, t, {
              isRenderable: !!(t.data.hasPopup || (_t$data$titleObj5 = t.data.titleObj) !== null && _t$data$titleObj5 !== void 0 && _t$data$titleObj5.str || (_t$data$contentsObj5 = t.data.contentsObj) !== null && _t$data$contentsObj5 !== void 0 && _t$data$contentsObj5.str || (_t$data$richText5 = t.data.richText) !== null && _t$data$richText5 !== void 0 && _t$data$richText5.str),
              ignoreBorder: !0
            });
          }
          _createClass(CircleAnnotationElement, [{
            key: "render",
            value: function render() {
              this.container.className = "circleAnnotation";
              var t = this.data,
                _getRectDims5 = getRectDims(t.rect),
                e = _getRectDims5.width,
                s = _getRectDims5.height,
                n = this.svgFactory.create(e, s, !0),
                i = t.borderStyle.width,
                a = this.svgFactory.createElement("svg:ellipse");
              a.setAttribute("cx", e / 2);
              a.setAttribute("cy", s / 2);
              a.setAttribute("rx", e / 2 - i / 2);
              a.setAttribute("ry", s / 2 - i / 2);
              a.setAttribute("stroke-width", i || 1);
              a.setAttribute("stroke", "transparent");
              a.setAttribute("fill", "transparent");
              n.append(a);
              this.container.append(n);
              this._createPopup(a, t);
              return this.container;
            }
          }]);
          return CircleAnnotationElement;
        }(AnnotationElement);
        var PolylineAnnotationElement = /*#__PURE__*/function (_AnnotationElement9) {
          _inherits(PolylineAnnotationElement, _AnnotationElement9);
          var _super35 = _createSuper(PolylineAnnotationElement);
          function PolylineAnnotationElement(t) {
            var _t$data$titleObj6, _t$data$contentsObj6, _t$data$richText6;
            var _this66;
            _classCallCheck(this, PolylineAnnotationElement);
            _this66 = _super35.call(this, t, {
              isRenderable: !!(t.data.hasPopup || (_t$data$titleObj6 = t.data.titleObj) !== null && _t$data$titleObj6 !== void 0 && _t$data$titleObj6.str || (_t$data$contentsObj6 = t.data.contentsObj) !== null && _t$data$contentsObj6 !== void 0 && _t$data$contentsObj6.str || (_t$data$richText6 = t.data.richText) !== null && _t$data$richText6 !== void 0 && _t$data$richText6.str),
              ignoreBorder: !0
            });
            _this66.containerClassName = "polylineAnnotation";
            _this66.svgElementName = "svg:polyline";
            return _this66;
          }
          _createClass(PolylineAnnotationElement, [{
            key: "render",
            value: function render() {
              this.container.className = this.containerClassName;
              var t = this.data,
                _getRectDims6 = getRectDims(t.rect),
                e = _getRectDims6.width,
                s = _getRectDims6.height,
                n = this.svgFactory.create(e, s, !0);
              var i = [];
              var _iterator109 = _createForOfIteratorHelper(t.vertices),
                _step109;
              try {
                for (_iterator109.s(); !(_step109 = _iterator109.n()).done;) {
                  var _e90 = _step109.value;
                  var _s77 = _e90.x - t.rect[0],
                    _n55 = t.rect[3] - _e90.y;
                  i.push(_s77 + "," + _n55);
                }
              } catch (err) {
                _iterator109.e(err);
              } finally {
                _iterator109.f();
              }
              i = i.join(" ");
              var a = this.svgFactory.createElement(this.svgElementName);
              a.setAttribute("points", i);
              a.setAttribute("stroke-width", t.borderStyle.width || 1);
              a.setAttribute("stroke", "transparent");
              a.setAttribute("fill", "transparent");
              n.append(a);
              this.container.append(n);
              this._createPopup(a, t);
              return this.container;
            }
          }]);
          return PolylineAnnotationElement;
        }(AnnotationElement);
        var PolygonAnnotationElement = /*#__PURE__*/function (_PolylineAnnotationEl) {
          _inherits(PolygonAnnotationElement, _PolylineAnnotationEl);
          var _super36 = _createSuper(PolygonAnnotationElement);
          function PolygonAnnotationElement(t) {
            var _this67;
            _classCallCheck(this, PolygonAnnotationElement);
            _this67 = _super36.call(this, t);
            _this67.containerClassName = "polygonAnnotation";
            _this67.svgElementName = "svg:polygon";
            return _this67;
          }
          return _createClass(PolygonAnnotationElement);
        }(PolylineAnnotationElement);
        var CaretAnnotationElement = /*#__PURE__*/function (_AnnotationElement10) {
          _inherits(CaretAnnotationElement, _AnnotationElement10);
          var _super37 = _createSuper(CaretAnnotationElement);
          function CaretAnnotationElement(t) {
            var _t$data$titleObj7, _t$data$contentsObj7, _t$data$richText7;
            _classCallCheck(this, CaretAnnotationElement);
            return _super37.call(this, t, {
              isRenderable: !!(t.data.hasPopup || (_t$data$titleObj7 = t.data.titleObj) !== null && _t$data$titleObj7 !== void 0 && _t$data$titleObj7.str || (_t$data$contentsObj7 = t.data.contentsObj) !== null && _t$data$contentsObj7 !== void 0 && _t$data$contentsObj7.str || (_t$data$richText7 = t.data.richText) !== null && _t$data$richText7 !== void 0 && _t$data$richText7.str),
              ignoreBorder: !0
            });
          }
          _createClass(CaretAnnotationElement, [{
            key: "render",
            value: function render() {
              this.container.className = "caretAnnotation";
              this.data.hasPopup || this._createPopup(null, this.data);
              return this.container;
            }
          }]);
          return CaretAnnotationElement;
        }(AnnotationElement);
        var InkAnnotationElement = /*#__PURE__*/function (_AnnotationElement11) {
          _inherits(InkAnnotationElement, _AnnotationElement11);
          var _super38 = _createSuper(InkAnnotationElement);
          function InkAnnotationElement(t) {
            var _t$data$titleObj8, _t$data$contentsObj8, _t$data$richText8;
            var _this68;
            _classCallCheck(this, InkAnnotationElement);
            _this68 = _super38.call(this, t, {
              isRenderable: !!(t.data.hasPopup || (_t$data$titleObj8 = t.data.titleObj) !== null && _t$data$titleObj8 !== void 0 && _t$data$titleObj8.str || (_t$data$contentsObj8 = t.data.contentsObj) !== null && _t$data$contentsObj8 !== void 0 && _t$data$contentsObj8.str || (_t$data$richText8 = t.data.richText) !== null && _t$data$richText8 !== void 0 && _t$data$richText8.str),
              ignoreBorder: !0
            });
            _this68.containerClassName = "inkAnnotation";
            _this68.svgElementName = "svg:polyline";
            return _this68;
          }
          _createClass(InkAnnotationElement, [{
            key: "render",
            value: function render() {
              this.container.className = this.containerClassName;
              var t = this.data,
                _getRectDims7 = getRectDims(t.rect),
                e = _getRectDims7.width,
                s = _getRectDims7.height,
                n = this.svgFactory.create(e, s, !0);
              var _iterator110 = _createForOfIteratorHelper(t.inkLists),
                _step110;
              try {
                for (_iterator110.s(); !(_step110 = _iterator110.n()).done;) {
                  var _e91 = _step110.value;
                  var _s78 = [];
                  var _iterator111 = _createForOfIteratorHelper(_e91),
                    _step111;
                  try {
                    for (_iterator111.s(); !(_step111 = _iterator111.n()).done;) {
                      var _n56 = _step111.value;
                      var _e92 = _n56.x - t.rect[0],
                        _i59 = t.rect[3] - _n56.y;
                      _s78.push("".concat(_e92, ",").concat(_i59));
                    }
                  } catch (err) {
                    _iterator111.e(err);
                  } finally {
                    _iterator111.f();
                  }
                  _s78 = _s78.join(" ");
                  var _i58 = this.svgFactory.createElement(this.svgElementName);
                  _i58.setAttribute("points", _s78);
                  _i58.setAttribute("stroke-width", t.borderStyle.width || 1);
                  _i58.setAttribute("stroke", "transparent");
                  _i58.setAttribute("fill", "transparent");
                  this._createPopup(_i58, t);
                  n.append(_i58);
                }
              } catch (err) {
                _iterator110.e(err);
              } finally {
                _iterator110.f();
              }
              this.container.append(n);
              return this.container;
            }
          }]);
          return InkAnnotationElement;
        }(AnnotationElement);
        var HighlightAnnotationElement = /*#__PURE__*/function (_AnnotationElement12) {
          _inherits(HighlightAnnotationElement, _AnnotationElement12);
          var _super39 = _createSuper(HighlightAnnotationElement);
          function HighlightAnnotationElement(t) {
            var _t$data$titleObj9, _t$data$contentsObj9, _t$data$richText9;
            _classCallCheck(this, HighlightAnnotationElement);
            return _super39.call(this, t, {
              isRenderable: !!(t.data.hasPopup || (_t$data$titleObj9 = t.data.titleObj) !== null && _t$data$titleObj9 !== void 0 && _t$data$titleObj9.str || (_t$data$contentsObj9 = t.data.contentsObj) !== null && _t$data$contentsObj9 !== void 0 && _t$data$contentsObj9.str || (_t$data$richText9 = t.data.richText) !== null && _t$data$richText9 !== void 0 && _t$data$richText9.str),
              ignoreBorder: !0,
              createQuadrilaterals: !0
            });
          }
          _createClass(HighlightAnnotationElement, [{
            key: "render",
            value: function render() {
              this.data.hasPopup || this._createPopup(null, this.data);
              if (this.quadrilaterals) return this._renderQuadrilaterals("highlightAnnotation");
              this.container.className = "highlightAnnotation";
              return this.container;
            }
          }]);
          return HighlightAnnotationElement;
        }(AnnotationElement);
        var UnderlineAnnotationElement = /*#__PURE__*/function (_AnnotationElement13) {
          _inherits(UnderlineAnnotationElement, _AnnotationElement13);
          var _super40 = _createSuper(UnderlineAnnotationElement);
          function UnderlineAnnotationElement(t) {
            var _t$data$titleObj10, _t$data$contentsObj10, _t$data$richText10;
            _classCallCheck(this, UnderlineAnnotationElement);
            return _super40.call(this, t, {
              isRenderable: !!(t.data.hasPopup || (_t$data$titleObj10 = t.data.titleObj) !== null && _t$data$titleObj10 !== void 0 && _t$data$titleObj10.str || (_t$data$contentsObj10 = t.data.contentsObj) !== null && _t$data$contentsObj10 !== void 0 && _t$data$contentsObj10.str || (_t$data$richText10 = t.data.richText) !== null && _t$data$richText10 !== void 0 && _t$data$richText10.str),
              ignoreBorder: !0,
              createQuadrilaterals: !0
            });
          }
          _createClass(UnderlineAnnotationElement, [{
            key: "render",
            value: function render() {
              this.data.hasPopup || this._createPopup(null, this.data);
              if (this.quadrilaterals) return this._renderQuadrilaterals("underlineAnnotation");
              this.container.className = "underlineAnnotation";
              return this.container;
            }
          }]);
          return UnderlineAnnotationElement;
        }(AnnotationElement);
        var SquigglyAnnotationElement = /*#__PURE__*/function (_AnnotationElement14) {
          _inherits(SquigglyAnnotationElement, _AnnotationElement14);
          var _super41 = _createSuper(SquigglyAnnotationElement);
          function SquigglyAnnotationElement(t) {
            var _t$data$titleObj11, _t$data$contentsObj11, _t$data$richText11;
            _classCallCheck(this, SquigglyAnnotationElement);
            return _super41.call(this, t, {
              isRenderable: !!(t.data.hasPopup || (_t$data$titleObj11 = t.data.titleObj) !== null && _t$data$titleObj11 !== void 0 && _t$data$titleObj11.str || (_t$data$contentsObj11 = t.data.contentsObj) !== null && _t$data$contentsObj11 !== void 0 && _t$data$contentsObj11.str || (_t$data$richText11 = t.data.richText) !== null && _t$data$richText11 !== void 0 && _t$data$richText11.str),
              ignoreBorder: !0,
              createQuadrilaterals: !0
            });
          }
          _createClass(SquigglyAnnotationElement, [{
            key: "render",
            value: function render() {
              this.data.hasPopup || this._createPopup(null, this.data);
              if (this.quadrilaterals) return this._renderQuadrilaterals("squigglyAnnotation");
              this.container.className = "squigglyAnnotation";
              return this.container;
            }
          }]);
          return SquigglyAnnotationElement;
        }(AnnotationElement);
        var StrikeOutAnnotationElement = /*#__PURE__*/function (_AnnotationElement15) {
          _inherits(StrikeOutAnnotationElement, _AnnotationElement15);
          var _super42 = _createSuper(StrikeOutAnnotationElement);
          function StrikeOutAnnotationElement(t) {
            var _t$data$titleObj12, _t$data$contentsObj12, _t$data$richText12;
            _classCallCheck(this, StrikeOutAnnotationElement);
            return _super42.call(this, t, {
              isRenderable: !!(t.data.hasPopup || (_t$data$titleObj12 = t.data.titleObj) !== null && _t$data$titleObj12 !== void 0 && _t$data$titleObj12.str || (_t$data$contentsObj12 = t.data.contentsObj) !== null && _t$data$contentsObj12 !== void 0 && _t$data$contentsObj12.str || (_t$data$richText12 = t.data.richText) !== null && _t$data$richText12 !== void 0 && _t$data$richText12.str),
              ignoreBorder: !0,
              createQuadrilaterals: !0
            });
          }
          _createClass(StrikeOutAnnotationElement, [{
            key: "render",
            value: function render() {
              this.data.hasPopup || this._createPopup(null, this.data);
              if (this.quadrilaterals) return this._renderQuadrilaterals("strikeoutAnnotation");
              this.container.className = "strikeoutAnnotation";
              return this.container;
            }
          }]);
          return StrikeOutAnnotationElement;
        }(AnnotationElement);
        var StampAnnotationElement = /*#__PURE__*/function (_AnnotationElement16) {
          _inherits(StampAnnotationElement, _AnnotationElement16);
          var _super43 = _createSuper(StampAnnotationElement);
          function StampAnnotationElement(t) {
            var _t$data$titleObj13, _t$data$contentsObj13, _t$data$richText13;
            _classCallCheck(this, StampAnnotationElement);
            return _super43.call(this, t, {
              isRenderable: !!(t.data.hasPopup || (_t$data$titleObj13 = t.data.titleObj) !== null && _t$data$titleObj13 !== void 0 && _t$data$titleObj13.str || (_t$data$contentsObj13 = t.data.contentsObj) !== null && _t$data$contentsObj13 !== void 0 && _t$data$contentsObj13.str || (_t$data$richText13 = t.data.richText) !== null && _t$data$richText13 !== void 0 && _t$data$richText13.str),
              ignoreBorder: !0
            });
          }
          _createClass(StampAnnotationElement, [{
            key: "render",
            value: function render() {
              this.container.className = "stampAnnotation";
              this.data.hasPopup || this._createPopup(null, this.data);
              return this.container;
            }
          }]);
          return StampAnnotationElement;
        }(AnnotationElement);
        var FileAttachmentAnnotationElement = /*#__PURE__*/function (_AnnotationElement17) {
          _inherits(FileAttachmentAnnotationElement, _AnnotationElement17);
          var _super44 = _createSuper(FileAttachmentAnnotationElement);
          function FileAttachmentAnnotationElement(t) {
            var _this69$linkService$e;
            var _this69;
            _classCallCheck(this, FileAttachmentAnnotationElement);
            _this69 = _super44.call(this, t, {
              isRenderable: !0
            });
            var _this69$data$file = _this69.data.file,
              e = _this69$data$file.filename,
              s = _this69$data$file.content;
            _this69.filename = (0, i.getFilenameFromUrl)(e, !0);
            _this69.content = s;
            (_this69$linkService$e = _this69.linkService.eventBus) === null || _this69$linkService$e === void 0 ? void 0 : _this69$linkService$e.dispatch("fileattachmentannotation", {
              source: _assertThisInitialized(_this69),
              filename: e,
              content: s
            });
            return _this69;
          }
          _createClass(FileAttachmentAnnotationElement, [{
            key: "render",
            value: function render() {
              var _this$data$titleObj, _this$data$contentsOb;
              this.container.className = "fileAttachmentAnnotation";
              var t;
              if (this.data.hasAppearance) t = document.createElement("div");else {
                t = document.createElement("img");
                t.src = "".concat(this.imageResourcesPath, "annotation-").concat(/paperclip/i.test(this.data.name) ? "paperclip" : "pushpin", ".svg");
              }
              t.className = "popupTriggerArea";
              t.addEventListener("dblclick", this._download.bind(this));
              !this.data.hasPopup && (((_this$data$titleObj = this.data.titleObj) === null || _this$data$titleObj === void 0 ? void 0 : _this$data$titleObj.str) || ((_this$data$contentsOb = this.data.contentsObj) === null || _this$data$contentsOb === void 0 ? void 0 : _this$data$contentsOb.str) || this.data.richText) && this._createPopup(t, this.data);
              this.container.append(t);
              return this.container;
            }
          }, {
            key: "_download",
            value: function _download() {
              var _this$downloadManager;
              (_this$downloadManager = this.downloadManager) === null || _this$downloadManager === void 0 ? void 0 : _this$downloadManager.openOrDownloadData(this.container, this.content, this.filename);
            }
          }]);
          return FileAttachmentAnnotationElement;
        }(AnnotationElement);
        var AnnotationLayer = /*#__PURE__*/function () {
          function AnnotationLayer() {
            _classCallCheck(this, AnnotationLayer);
          }
          _createClass(AnnotationLayer, null, [{
            key: "render",
            value: function render(t) {
              var e = t.annotations,
                s = t.div,
                r = t.viewport,
                o = t.accessibilityManager;
              (0, i.setLayerDimensions)(s, r);
              var l = {
                data: null,
                layer: s,
                page: t.page,
                viewport: r,
                linkService: t.linkService,
                downloadManager: t.downloadManager,
                imageResourcesPath: t.imageResourcesPath || "",
                renderForms: !1 !== t.renderForms,
                svgFactory: new i.DOMSVGFactory(),
                annotationStorage: t.annotationStorage || new a.AnnotationStorage(),
                enableScripting: !0 === t.enableScripting,
                hasJSActions: t.hasJSActions,
                fieldObjects: t.fieldObjects
              };
              var c = 0;
              var _iterator112 = _createForOfIteratorHelper(e),
                _step112;
              try {
                for (_iterator112.s(); !(_step112 = _iterator112.n()).done;) {
                  var _t140 = _step112.value;
                  if (_t140.annotationType !== n.AnnotationType.POPUP) {
                    var _getRectDims8 = getRectDims(_t140.rect),
                      _e93 = _getRectDims8.width,
                      _s79 = _getRectDims8.height;
                    if (_e93 <= 0 || _s79 <= 0) continue;
                  }
                  l.data = _t140;
                  var _e94 = AnnotationElementFactory.create(l);
                  if (!_e94.isRenderable) continue;
                  var _i60 = _e94.render();
                  _t140.hidden && (_i60.style.visibility = "hidden");
                  if (Array.isArray(_i60)) {
                    var _iterator113 = _createForOfIteratorHelper(_i60),
                      _step113;
                    try {
                      for (_iterator113.s(); !(_step113 = _iterator113.n()).done;) {
                        var _e95 = _step113.value;
                        _e95.style.zIndex = c++;
                        _classStaticPrivateMethodGet(AnnotationLayer, AnnotationLayer, _Te).call(AnnotationLayer, _e95, _t140.id, s, o);
                      }
                    } catch (err) {
                      _iterator113.e(err);
                    } finally {
                      _iterator113.f();
                    }
                  } else {
                    _i60.style.zIndex = c++;
                    _e94 instanceof PopupAnnotationElement ? s.prepend(_i60) : _classStaticPrivateMethodGet(AnnotationLayer, AnnotationLayer, _Te).call(AnnotationLayer, _i60, _t140.id, s, o);
                  }
                }
              } catch (err) {
                _iterator112.e(err);
              } finally {
                _iterator112.f();
              }
              _classStaticPrivateMethodGet(this, AnnotationLayer, _we).call(this, s, t.annotationCanvasMap);
            }
          }, {
            key: "update",
            value: function update(t) {
              var e = t.annotationCanvasMap,
                s = t.div,
                n = t.viewport;
              (0, i.setLayerDimensions)(s, {
                rotation: n.rotation
              });
              _classStaticPrivateMethodGet(this, AnnotationLayer, _we).call(this, s, e);
              s.hidden = !1;
            }
          }]);
          return AnnotationLayer;
        }();
        function _Te(t, e, s, n) {
          var a = t.firstChild || t;
          a.id = "".concat(i.AnnotationPrefix).concat(e);
          s.append(t);
          n === null || n === void 0 ? void 0 : n.moveElementInDOM(s, t, a, !1);
        }
        function _we(t, e) {
          if (e) {
            var _iterator114 = _createForOfIteratorHelper(e),
              _step114;
            try {
              for (_iterator114.s(); !(_step114 = _iterator114.n()).done;) {
                var _step114$value = _slicedToArray(_step114.value, 2),
                  _s80 = _step114$value[0],
                  _n57 = _step114$value[1];
                var _e96 = t.querySelector("[data-annotation-id=\"".concat(_s80, "\"]"));
                if (!_e96) continue;
                var _i61 = _e96.firstChild;
                _i61 ? "CANVAS" === _i61.nodeName ? _i61.replaceWith(_n57) : _i61.before(_n57) : _e96.append(_n57);
              }
            } catch (err) {
              _iterator114.e(err);
            } finally {
              _iterator114.f();
            }
            e.clear();
          }
        }
        e.AnnotationLayer = AnnotationLayer;
      }, function (t, e) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.ColorConverters = void 0;
        function makeColorComp(t) {
          return Math.floor(255 * Math.max(0, Math.min(1, t))).toString(16).padStart(2, "0");
        }
        e.ColorConverters = /*#__PURE__*/function () {
          function ColorConverters() {
            _classCallCheck(this, ColorConverters);
          }
          _createClass(ColorConverters, null, [{
            key: "CMYK_G",
            value: function CMYK_G(_ref64) {
              var _ref65 = _slicedToArray(_ref64, 4),
                t = _ref65[0],
                e = _ref65[1],
                s = _ref65[2],
                n = _ref65[3];
              return ["G", 1 - Math.min(1, .3 * t + .59 * s + .11 * e + n)];
            }
          }, {
            key: "G_CMYK",
            value: function G_CMYK(_ref66) {
              var _ref67 = _slicedToArray(_ref66, 1),
                t = _ref67[0];
              return ["CMYK", 0, 0, 0, 1 - t];
            }
          }, {
            key: "G_RGB",
            value: function G_RGB(_ref68) {
              var _ref69 = _slicedToArray(_ref68, 1),
                t = _ref69[0];
              return ["RGB", t, t, t];
            }
          }, {
            key: "G_HTML",
            value: function G_HTML(_ref70) {
              var _ref71 = _slicedToArray(_ref70, 1),
                t = _ref71[0];
              var e = makeColorComp(t);
              return "#".concat(e).concat(e).concat(e);
            }
          }, {
            key: "RGB_G",
            value: function RGB_G(_ref72) {
              var _ref73 = _slicedToArray(_ref72, 3),
                t = _ref73[0],
                e = _ref73[1],
                s = _ref73[2];
              return ["G", .3 * t + .59 * e + .11 * s];
            }
          }, {
            key: "RGB_HTML",
            value: function RGB_HTML(_ref74) {
              var _ref75 = _slicedToArray(_ref74, 3),
                t = _ref75[0],
                e = _ref75[1],
                s = _ref75[2];
              return "#".concat(makeColorComp(t)).concat(makeColorComp(e)).concat(makeColorComp(s));
            }
          }, {
            key: "T_HTML",
            value: function T_HTML() {
              return "#00000000";
            }
          }, {
            key: "CMYK_RGB",
            value: function CMYK_RGB(_ref76) {
              var _ref77 = _slicedToArray(_ref76, 4),
                t = _ref77[0],
                e = _ref77[1],
                s = _ref77[2],
                n = _ref77[3];
              return ["RGB", 1 - Math.min(1, t + n), 1 - Math.min(1, s + n), 1 - Math.min(1, e + n)];
            }
          }, {
            key: "CMYK_HTML",
            value: function CMYK_HTML(t) {
              var e = this.CMYK_RGB(t).slice(1);
              return this.RGB_HTML(e);
            }
          }, {
            key: "RGB_CMYK",
            value: function RGB_CMYK(_ref78) {
              var _ref79 = _slicedToArray(_ref78, 3),
                t = _ref79[0],
                e = _ref79[1],
                s = _ref79[2];
              var n = 1 - t,
                i = 1 - e,
                a = 1 - s;
              return ["CMYK", n, i, a, Math.min(n, i, a)];
            }
          }]);
          return ColorConverters;
        }();
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.XfaLayer = void 0;
        var n = s(19);
        e.XfaLayer = /*#__PURE__*/function () {
          function XfaLayer() {
            _classCallCheck(this, XfaLayer);
          }
          _createClass(XfaLayer, null, [{
            key: "setupStorage",
            value: function setupStorage(t, e, s, n, i) {
              var a = n.getValue(e, {
                value: null
              });
              switch (s.name) {
                case "textarea":
                  null !== a.value && (t.textContent = a.value);
                  if ("print" === i) break;
                  t.addEventListener("input", function (t) {
                    n.setValue(e, {
                      value: t.target.value
                    });
                  });
                  break;
                case "input":
                  if ("radio" === s.attributes.type || "checkbox" === s.attributes.type) {
                    a.value === s.attributes.xfaOn ? t.setAttribute("checked", !0) : a.value === s.attributes.xfaOff && t.removeAttribute("checked");
                    if ("print" === i) break;
                    t.addEventListener("change", function (t) {
                      n.setValue(e, {
                        value: t.target.checked ? t.target.getAttribute("xfaOn") : t.target.getAttribute("xfaOff")
                      });
                    });
                  } else {
                    null !== a.value && t.setAttribute("value", a.value);
                    if ("print" === i) break;
                    t.addEventListener("input", function (t) {
                      n.setValue(e, {
                        value: t.target.value
                      });
                    });
                  }
                  break;
                case "select":
                  if (null !== a.value) {
                    var _iterator115 = _createForOfIteratorHelper(s.children),
                      _step115;
                    try {
                      for (_iterator115.s(); !(_step115 = _iterator115.n()).done;) {
                        var _t141 = _step115.value;
                        _t141.attributes.value === a.value && (_t141.attributes.selected = !0);
                      }
                    } catch (err) {
                      _iterator115.e(err);
                    } finally {
                      _iterator115.f();
                    }
                  }
                  t.addEventListener("input", function (t) {
                    var s = t.target.options,
                      i = -1 === s.selectedIndex ? "" : s[s.selectedIndex].value;
                    n.setValue(e, {
                      value: i
                    });
                  });
              }
            }
          }, {
            key: "setAttributes",
            value: function setAttributes(_ref80) {
              var t = _ref80.html,
                e = _ref80.element,
                _ref80$storage = _ref80.storage,
                s = _ref80$storage === void 0 ? null : _ref80$storage,
                n = _ref80.intent,
                i = _ref80.linkService;
              var a = e.attributes,
                r = t instanceof HTMLAnchorElement;
              "radio" === a.type && (a.name = "".concat(a.name, "-").concat(n));
              for (var _i62 = 0, _Object$entries3 = Object.entries(a); _i62 < _Object$entries3.length; _i62++) {
                var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i62], 2),
                  _e97 = _Object$entries3$_i[0],
                  _s81 = _Object$entries3$_i[1];
                if (null != _s81) switch (_e97) {
                  case "class":
                    _s81.length && t.setAttribute(_e97, _s81.join(" "));
                    break;
                  case "dataId":
                    break;
                  case "id":
                    t.setAttribute("data-element-id", _s81);
                    break;
                  case "style":
                    Object.assign(t.style, _s81);
                    break;
                  case "textContent":
                    t.textContent = _s81;
                    break;
                  default:
                    (!r || "href" !== _e97 && "newWindow" !== _e97) && t.setAttribute(_e97, _s81);
                }
              }
              r && i.addLinkAttributes(t, a.href, a.newWindow);
              s && a.dataId && this.setupStorage(t, a.dataId, e, s);
            }
          }, {
            key: "render",
            value: function render(t) {
              var e = t.annotationStorage,
                s = t.linkService,
                i = t.xfaHtml,
                a = t.intent || "display",
                r = document.createElement(i.name);
              i.attributes && this.setAttributes({
                html: r,
                element: i,
                intent: a,
                linkService: s
              });
              var o = [[i, -1, r]],
                l = t.div;
              l.append(r);
              if (t.viewport) {
                var _e98 = "matrix(".concat(t.viewport.transform.join(","), ")");
                l.style.transform = _e98;
              }
              "richText" !== a && l.setAttribute("class", "xfaLayer xfaFont");
              var c = [];
              for (; o.length > 0;) {
                var _l9$attributes;
                var _o$at = o.at(-1),
                  _o$at2 = _slicedToArray(_o$at, 3),
                  _t142 = _o$at2[0],
                  _i63 = _o$at2[1],
                  _r22 = _o$at2[2];
                if (_i63 + 1 === _t142.children.length) {
                  o.pop();
                  continue;
                }
                var _l9 = _t142.children[++o.at(-1)[1]];
                if (null === _l9) continue;
                var h = _l9.name;
                if ("#text" === h) {
                  var _t143 = document.createTextNode(_l9.value);
                  c.push(_t143);
                  _r22.append(_t143);
                  continue;
                }
                var d = void 0;
                d = _l9 !== null && _l9 !== void 0 && (_l9$attributes = _l9.attributes) !== null && _l9$attributes !== void 0 && _l9$attributes.xmlns ? document.createElementNS(_l9.attributes.xmlns, h) : document.createElement(h);
                _r22.append(d);
                _l9.attributes && this.setAttributes({
                  html: d,
                  element: _l9,
                  storage: e,
                  intent: a,
                  linkService: s
                });
                if (_l9.children && _l9.children.length > 0) o.push([_l9, -1, d]);else if (_l9.value) {
                  var _t144 = document.createTextNode(_l9.value);
                  n.XfaText.shouldBuildText(h) && c.push(_t144);
                  d.append(_t144);
                }
              }
              var _iterator116 = _createForOfIteratorHelper(l.querySelectorAll(".xfaNonInteractive input, .xfaNonInteractive textarea")),
                _step116;
              try {
                for (_iterator116.s(); !(_step116 = _iterator116.n()).done;) {
                  var _t145 = _step116.value;
                  _t145.setAttribute("readOnly", !0);
                }
              } catch (err) {
                _iterator116.e(err);
              } finally {
                _iterator116.f();
              }
              return {
                textDivs: c
              };
            }
          }, {
            key: "update",
            value: function update(t) {
              var e = "matrix(".concat(t.viewport.transform.join(","), ")");
              t.div.style.transform = e;
              t.div.hidden = !1;
            }
          }]);
          return XfaLayer;
        }();
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.SVGGraphics = void 0;
        var n = s(6),
          i = s(1),
          a = s(10);
        var r = /*#__PURE__*/_createClass(function r() {
          _classCallCheck(this, r);
          (0, i.unreachable)("Not implemented: SVGGraphics");
        });
        e.SVGGraphics = r;
        {
          var opListToTree = function opListToTree(t) {
            var e = [];
            var s = [];
            var _iterator117 = _createForOfIteratorHelper(t),
              _step117;
            try {
              for (_iterator117.s(); !(_step117 = _iterator117.n()).done;) {
                var _n58 = _step117.value;
                if ("save" !== _n58.fn) "restore" === _n58.fn ? e = s.pop() : e.push(_n58);else {
                  e.push({
                    fnId: 92,
                    fn: "group",
                    items: []
                  });
                  s.push(e);
                  e = e.at(-1).items;
                }
              }
            } catch (err) {
              _iterator117.e(err);
            } finally {
              _iterator117.f();
            }
            return e;
          };
          var pf = function pf(t) {
            if (Number.isInteger(t)) return t.toString();
            var e = t.toFixed(10);
            var s = e.length - 1;
            if ("0" !== e[s]) return e;
            do {
              s--;
            } while ("0" === e[s]);
            return e.substring(0, "." === e[s] ? s : s + 1);
          };
          var pm = function pm(t) {
            if (0 === t[4] && 0 === t[5]) {
              if (0 === t[1] && 0 === t[2]) return 1 === t[0] && 1 === t[3] ? "" : "scale(".concat(pf(t[0]), " ").concat(pf(t[3]), ")");
              if (t[0] === t[3] && t[1] === -t[2]) {
                return "rotate(".concat(pf(180 * Math.acos(t[0]) / Math.PI), ")");
              }
            } else if (1 === t[0] && 0 === t[1] && 0 === t[2] && 1 === t[3]) return "translate(".concat(pf(t[4]), " ").concat(pf(t[5]), ")");
            return "matrix(".concat(pf(t[0]), " ").concat(pf(t[1]), " ").concat(pf(t[2]), " ").concat(pf(t[3]), " ").concat(pf(t[4]), " ").concat(pf(t[5]), ")");
          };
          var o = {
              fontStyle: "normal",
              fontWeight: "normal",
              fillColor: "#000000"
            },
            l = "http://www.w3.org/XML/1998/namespace",
            c = "http://www.w3.org/1999/xlink",
            h = ["butt", "round", "square"],
            d = ["miter", "round", "bevel"],
            createObjectURL = function createObjectURL(t) {
              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
              var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
              if (URL.createObjectURL && "undefined" != typeof Blob && !s) return URL.createObjectURL(new Blob([t], {
                type: e
              }));
              var n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
              var i = "data:".concat(e, ";base64,");
              for (var _e99 = 0, _s82 = t.length; _e99 < _s82; _e99 += 3) {
                var _a30 = 255 & t[_e99],
                  _r23 = 255 & t[_e99 + 1],
                  _o11 = 255 & t[_e99 + 2];
                i += n[_a30 >> 2] + n[(3 & _a30) << 4 | _r23 >> 4] + n[_e99 + 1 < _s82 ? (15 & _r23) << 2 | _o11 >> 6 : 64] + n[_e99 + 2 < _s82 ? 63 & _o11 : 64];
              }
              return i;
            },
            u = function () {
              var t = new Uint8Array([137, 80, 78, 71, 13, 10, 26, 10]),
                e = new Int32Array(256);
              for (var _t146 = 0; _t146 < 256; _t146++) {
                var _s83 = _t146;
                for (var _t147 = 0; _t147 < 8; _t147++) _s83 = 1 & _s83 ? 3988292384 ^ _s83 >> 1 & 2147483647 : _s83 >> 1 & 2147483647;
                e[_t146] = _s83;
              }
              function writePngChunk(t, s, n, i) {
                var a = i;
                var r = s.length;
                n[a] = r >> 24 & 255;
                n[a + 1] = r >> 16 & 255;
                n[a + 2] = r >> 8 & 255;
                n[a + 3] = 255 & r;
                a += 4;
                n[a] = 255 & t.charCodeAt(0);
                n[a + 1] = 255 & t.charCodeAt(1);
                n[a + 2] = 255 & t.charCodeAt(2);
                n[a + 3] = 255 & t.charCodeAt(3);
                a += 4;
                n.set(s, a);
                a += s.length;
                var o = function crc32(t, s, n) {
                  var i = -1;
                  for (var _a31 = s; _a31 < n; _a31++) {
                    var _s84 = 255 & (i ^ t[_a31]);
                    i = i >>> 8 ^ e[_s84];
                  }
                  return -1 ^ i;
                }(n, i + 4, a);
                n[a] = o >> 24 & 255;
                n[a + 1] = o >> 16 & 255;
                n[a + 2] = o >> 8 & 255;
                n[a + 3] = 255 & o;
              }
              function deflateSyncUncompressed(t) {
                var e = t.length;
                var s = 65535,
                  n = Math.ceil(e / s),
                  i = new Uint8Array(2 + e + 5 * n + 4);
                var a = 0;
                i[a++] = 120;
                i[a++] = 156;
                var r = 0;
                for (; e > s;) {
                  i[a++] = 0;
                  i[a++] = 255;
                  i[a++] = 255;
                  i[a++] = 0;
                  i[a++] = 0;
                  i.set(t.subarray(r, r + s), a);
                  a += s;
                  r += s;
                  e -= s;
                }
                i[a++] = 1;
                i[a++] = 255 & e;
                i[a++] = e >> 8 & 255;
                i[a++] = 255 & ~e;
                i[a++] = (65535 & ~e) >> 8 & 255;
                i.set(t.subarray(r), a);
                a += t.length - r;
                var o = function adler32(t, e, s) {
                  var n = 1,
                    i = 0;
                  for (var _a32 = e; _a32 < s; ++_a32) {
                    n = (n + (255 & t[_a32])) % 65521;
                    i = (i + n) % 65521;
                  }
                  return i << 16 | n;
                }(t, 0, t.length);
                i[a++] = o >> 24 & 255;
                i[a++] = o >> 16 & 255;
                i[a++] = o >> 8 & 255;
                i[a++] = 255 & o;
                return i;
              }
              function encode(e, s, n, r) {
                var o = e.width,
                  l = e.height;
                var c, h, d;
                var u = e.data;
                switch (s) {
                  case i.ImageKind.GRAYSCALE_1BPP:
                    h = 0;
                    c = 1;
                    d = o + 7 >> 3;
                    break;
                  case i.ImageKind.RGB_24BPP:
                    h = 2;
                    c = 8;
                    d = 3 * o;
                    break;
                  case i.ImageKind.RGBA_32BPP:
                    h = 6;
                    c = 8;
                    d = 4 * o;
                    break;
                  default:
                    throw new Error("invalid format");
                }
                var p = new Uint8Array((1 + d) * l);
                var g = 0,
                  m = 0;
                for (var _t148 = 0; _t148 < l; ++_t148) {
                  p[g++] = 0;
                  p.set(u.subarray(m, m + d), g);
                  m += d;
                  g += d;
                }
                if (s === i.ImageKind.GRAYSCALE_1BPP && r) {
                  g = 0;
                  for (var _t149 = 0; _t149 < l; _t149++) {
                    g++;
                    for (var _t150 = 0; _t150 < d; _t150++) p[g++] ^= 255;
                  }
                }
                var f = new Uint8Array([o >> 24 & 255, o >> 16 & 255, o >> 8 & 255, 255 & o, l >> 24 & 255, l >> 16 & 255, l >> 8 & 255, 255 & l, c, h, 0, 0, 0]),
                  b = function deflateSync(t) {
                    if (!a.isNodeJS) return deflateSyncUncompressed(t);
                    try {
                      var _e100;
                      _e100 = parseInt(process.versions.node) >= 8 ? t : Buffer.from(t);
                      var _s85 = require("zlib").deflateSync(_e100, {
                        level: 9
                      });
                      return _s85 instanceof Uint8Array ? _s85 : new Uint8Array(_s85);
                    } catch (t) {
                      (0, i.warn)("Not compressing PNG because zlib.deflateSync is unavailable: " + t);
                    }
                    return deflateSyncUncompressed(t);
                  }(p),
                  A = t.length + 36 + f.length + b.length,
                  _ = new Uint8Array(A);
                var y = 0;
                _.set(t, y);
                y += t.length;
                writePngChunk("IHDR", f, _, y);
                y += 12 + f.length;
                writePngChunk("IDATA", b, _, y);
                y += 12 + b.length;
                writePngChunk("IEND", new Uint8Array(0), _, y);
                return createObjectURL(_, "image/png", n);
              }
              return function convertImgDataToPng(t, e, s) {
                return encode(t, void 0 === t.kind ? i.ImageKind.GRAYSCALE_1BPP : t.kind, e, s);
              };
            }();
          var SVGExtraState = /*#__PURE__*/function () {
            function SVGExtraState() {
              _classCallCheck(this, SVGExtraState);
              this.fontSizeScale = 1;
              this.fontWeight = o.fontWeight;
              this.fontSize = 0;
              this.textMatrix = i.IDENTITY_MATRIX;
              this.fontMatrix = i.FONT_IDENTITY_MATRIX;
              this.leading = 0;
              this.textRenderingMode = i.TextRenderingMode.FILL;
              this.textMatrixScale = 1;
              this.x = 0;
              this.y = 0;
              this.lineX = 0;
              this.lineY = 0;
              this.charSpacing = 0;
              this.wordSpacing = 0;
              this.textHScale = 1;
              this.textRise = 0;
              this.fillColor = o.fillColor;
              this.strokeColor = "#000000";
              this.fillAlpha = 1;
              this.strokeAlpha = 1;
              this.lineWidth = 1;
              this.lineJoin = "";
              this.lineCap = "";
              this.miterLimit = 0;
              this.dashArray = [];
              this.dashPhase = 0;
              this.dependencies = [];
              this.activeClipUrl = null;
              this.clipGroup = null;
              this.maskId = "";
            }
            _createClass(SVGExtraState, [{
              key: "clone",
              value: function clone() {
                return Object.create(this);
              }
            }, {
              key: "setCurrentPoint",
              value: function setCurrentPoint(t, e) {
                this.x = t;
                this.y = e;
              }
            }]);
            return SVGExtraState;
          }();
          var p = 0,
            g = 0,
            m = 0;
          e.SVGGraphics = r = /*#__PURE__*/function () {
            function r(t, e) {
              var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
              _classCallCheck(this, r);
              (0, n.deprecated)("The SVG back-end is no longer maintained and *may* be removed in the future.");
              this.svgFactory = new n.DOMSVGFactory();
              this.current = new SVGExtraState();
              this.transformMatrix = i.IDENTITY_MATRIX;
              this.transformStack = [];
              this.extraStack = [];
              this.commonObjs = t;
              this.objs = e;
              this.pendingClip = null;
              this.pendingEOFill = !1;
              this.embedFonts = !1;
              this.embeddedFonts = Object.create(null);
              this.cssStyle = null;
              this.forceDataSchema = !!s;
              this._operatorIdMapping = [];
              for (var _t151 in i.OPS) this._operatorIdMapping[i.OPS[_t151]] = _t151;
            }
            _createClass(r, [{
              key: "getObject",
              value: function getObject(t) {
                var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
                return "string" == typeof t ? t.startsWith("g_") ? this.commonObjs.get(t) : this.objs.get(t) : e;
              }
            }, {
              key: "save",
              value: function save() {
                this.transformStack.push(this.transformMatrix);
                var t = this.current;
                this.extraStack.push(t);
                this.current = t.clone();
              }
            }, {
              key: "restore",
              value: function restore() {
                this.transformMatrix = this.transformStack.pop();
                this.current = this.extraStack.pop();
                this.pendingClip = null;
                this.tgrp = null;
              }
            }, {
              key: "group",
              value: function group(t) {
                this.save();
                this.executeOpTree(t);
                this.restore();
              }
            }, {
              key: "loadDependencies",
              value: function loadDependencies(t) {
                var _this71 = this;
                var e = t.fnArray,
                  s = t.argsArray;
                for (var _t152 = 0, _n59 = e.length; _t152 < _n59; _t152++) if (e[_t152] === i.OPS.dependency) {
                  var _iterator118 = _createForOfIteratorHelper(s[_t152]),
                    _step118;
                  try {
                    var _loop2 = function _loop2() {
                      var e = _step118.value;
                      var t = e.startsWith("g_") ? _this71.commonObjs : _this71.objs,
                        s = new Promise(function (s) {
                          t.get(e, s);
                        });
                      _this71.current.dependencies.push(s);
                    };
                    for (_iterator118.s(); !(_step118 = _iterator118.n()).done;) {
                      _loop2();
                    }
                  } catch (err) {
                    _iterator118.e(err);
                  } finally {
                    _iterator118.f();
                  }
                }
                return Promise.all(this.current.dependencies);
              }
            }, {
              key: "transform",
              value: function transform(t, e, s, n, a, _r24) {
                var o = [t, e, s, n, a, _r24];
                this.transformMatrix = i.Util.transform(this.transformMatrix, o);
                this.tgrp = null;
              }
            }, {
              key: "getSVG",
              value: function getSVG(t, e) {
                var _this72 = this;
                this.viewport = e;
                var s = this._initialize(e);
                return this.loadDependencies(t).then(function () {
                  _this72.transformMatrix = i.IDENTITY_MATRIX;
                  _this72.executeOpTree(_this72.convertOpList(t));
                  return s;
                });
              }
            }, {
              key: "convertOpList",
              value: function convertOpList(t) {
                var e = this._operatorIdMapping,
                  s = t.argsArray,
                  n = t.fnArray,
                  i = [];
                for (var _t153 = 0, _a33 = n.length; _t153 < _a33; _t153++) {
                  var _a34 = n[_t153];
                  i.push({
                    fnId: _a34,
                    fn: e[_a34],
                    args: s[_t153]
                  });
                }
                return opListToTree(i);
              }
            }, {
              key: "executeOpTree",
              value: function executeOpTree(t) {
                var _iterator119 = _createForOfIteratorHelper(t),
                  _step119;
                try {
                  for (_iterator119.s(); !(_step119 = _iterator119.n()).done;) {
                    var _e101 = _step119.value;
                    var _t154 = _e101.fn,
                      _s86 = _e101.fnId,
                      _n60 = _e101.args;
                    switch (0 | _s86) {
                      case i.OPS.beginText:
                        this.beginText();
                        break;
                      case i.OPS.dependency:
                        break;
                      case i.OPS.setLeading:
                        this.setLeading(_n60);
                        break;
                      case i.OPS.setLeadingMoveText:
                        this.setLeadingMoveText(_n60[0], _n60[1]);
                        break;
                      case i.OPS.setFont:
                        this.setFont(_n60);
                        break;
                      case i.OPS.showText:
                      case i.OPS.showSpacedText:
                        this.showText(_n60[0]);
                        break;
                      case i.OPS.endText:
                        this.endText();
                        break;
                      case i.OPS.moveText:
                        this.moveText(_n60[0], _n60[1]);
                        break;
                      case i.OPS.setCharSpacing:
                        this.setCharSpacing(_n60[0]);
                        break;
                      case i.OPS.setWordSpacing:
                        this.setWordSpacing(_n60[0]);
                        break;
                      case i.OPS.setHScale:
                        this.setHScale(_n60[0]);
                        break;
                      case i.OPS.setTextMatrix:
                        this.setTextMatrix(_n60[0], _n60[1], _n60[2], _n60[3], _n60[4], _n60[5]);
                        break;
                      case i.OPS.setTextRise:
                        this.setTextRise(_n60[0]);
                        break;
                      case i.OPS.setTextRenderingMode:
                        this.setTextRenderingMode(_n60[0]);
                        break;
                      case i.OPS.setLineWidth:
                        this.setLineWidth(_n60[0]);
                        break;
                      case i.OPS.setLineJoin:
                        this.setLineJoin(_n60[0]);
                        break;
                      case i.OPS.setLineCap:
                        this.setLineCap(_n60[0]);
                        break;
                      case i.OPS.setMiterLimit:
                        this.setMiterLimit(_n60[0]);
                        break;
                      case i.OPS.setFillRGBColor:
                        this.setFillRGBColor(_n60[0], _n60[1], _n60[2]);
                        break;
                      case i.OPS.setStrokeRGBColor:
                        this.setStrokeRGBColor(_n60[0], _n60[1], _n60[2]);
                        break;
                      case i.OPS.setStrokeColorN:
                        this.setStrokeColorN(_n60);
                        break;
                      case i.OPS.setFillColorN:
                        this.setFillColorN(_n60);
                        break;
                      case i.OPS.shadingFill:
                        this.shadingFill(_n60[0]);
                        break;
                      case i.OPS.setDash:
                        this.setDash(_n60[0], _n60[1]);
                        break;
                      case i.OPS.setRenderingIntent:
                        this.setRenderingIntent(_n60[0]);
                        break;
                      case i.OPS.setFlatness:
                        this.setFlatness(_n60[0]);
                        break;
                      case i.OPS.setGState:
                        this.setGState(_n60[0]);
                        break;
                      case i.OPS.fill:
                        this.fill();
                        break;
                      case i.OPS.eoFill:
                        this.eoFill();
                        break;
                      case i.OPS.stroke:
                        this.stroke();
                        break;
                      case i.OPS.fillStroke:
                        this.fillStroke();
                        break;
                      case i.OPS.eoFillStroke:
                        this.eoFillStroke();
                        break;
                      case i.OPS.clip:
                        this.clip("nonzero");
                        break;
                      case i.OPS.eoClip:
                        this.clip("evenodd");
                        break;
                      case i.OPS.paintSolidColorImageMask:
                        this.paintSolidColorImageMask();
                        break;
                      case i.OPS.paintImageXObject:
                        this.paintImageXObject(_n60[0]);
                        break;
                      case i.OPS.paintInlineImageXObject:
                        this.paintInlineImageXObject(_n60[0]);
                        break;
                      case i.OPS.paintImageMaskXObject:
                        this.paintImageMaskXObject(_n60[0]);
                        break;
                      case i.OPS.paintFormXObjectBegin:
                        this.paintFormXObjectBegin(_n60[0], _n60[1]);
                        break;
                      case i.OPS.paintFormXObjectEnd:
                        this.paintFormXObjectEnd();
                        break;
                      case i.OPS.closePath:
                        this.closePath();
                        break;
                      case i.OPS.closeStroke:
                        this.closeStroke();
                        break;
                      case i.OPS.closeFillStroke:
                        this.closeFillStroke();
                        break;
                      case i.OPS.closeEOFillStroke:
                        this.closeEOFillStroke();
                        break;
                      case i.OPS.nextLine:
                        this.nextLine();
                        break;
                      case i.OPS.transform:
                        this.transform(_n60[0], _n60[1], _n60[2], _n60[3], _n60[4], _n60[5]);
                        break;
                      case i.OPS.constructPath:
                        this.constructPath(_n60[0], _n60[1]);
                        break;
                      case i.OPS.endPath:
                        this.endPath();
                        break;
                      case 92:
                        this.group(_e101.items);
                        break;
                      default:
                        (0, i.warn)("Unimplemented operator ".concat(_t154));
                    }
                  }
                } catch (err) {
                  _iterator119.e(err);
                } finally {
                  _iterator119.f();
                }
              }
            }, {
              key: "setWordSpacing",
              value: function setWordSpacing(t) {
                this.current.wordSpacing = t;
              }
            }, {
              key: "setCharSpacing",
              value: function setCharSpacing(t) {
                this.current.charSpacing = t;
              }
            }, {
              key: "nextLine",
              value: function nextLine() {
                this.moveText(0, this.current.leading);
              }
            }, {
              key: "setTextMatrix",
              value: function setTextMatrix(t, e, s, n, i, a) {
                var _r25 = this.current;
                _r25.textMatrix = _r25.lineMatrix = [t, e, s, n, i, a];
                _r25.textMatrixScale = Math.hypot(t, e);
                _r25.x = _r25.lineX = 0;
                _r25.y = _r25.lineY = 0;
                _r25.xcoords = [];
                _r25.ycoords = [];
                _r25.tspan = this.svgFactory.createElement("svg:tspan");
                _r25.tspan.setAttributeNS(null, "font-family", _r25.fontFamily);
                _r25.tspan.setAttributeNS(null, "font-size", "".concat(pf(_r25.fontSize), "px"));
                _r25.tspan.setAttributeNS(null, "y", pf(-_r25.y));
                _r25.txtElement = this.svgFactory.createElement("svg:text");
                _r25.txtElement.append(_r25.tspan);
              }
            }, {
              key: "beginText",
              value: function beginText() {
                var t = this.current;
                t.x = t.lineX = 0;
                t.y = t.lineY = 0;
                t.textMatrix = i.IDENTITY_MATRIX;
                t.lineMatrix = i.IDENTITY_MATRIX;
                t.textMatrixScale = 1;
                t.tspan = this.svgFactory.createElement("svg:tspan");
                t.txtElement = this.svgFactory.createElement("svg:text");
                t.txtgrp = this.svgFactory.createElement("svg:g");
                t.xcoords = [];
                t.ycoords = [];
              }
            }, {
              key: "moveText",
              value: function moveText(t, e) {
                var s = this.current;
                s.x = s.lineX += t;
                s.y = s.lineY += e;
                s.xcoords = [];
                s.ycoords = [];
                s.tspan = this.svgFactory.createElement("svg:tspan");
                s.tspan.setAttributeNS(null, "font-family", s.fontFamily);
                s.tspan.setAttributeNS(null, "font-size", "".concat(pf(s.fontSize), "px"));
                s.tspan.setAttributeNS(null, "y", pf(-s.y));
              }
            }, {
              key: "showText",
              value: function showText(t) {
                var e = this.current,
                  s = e.font,
                  n = e.fontSize;
                if (0 === n) return;
                var a = e.fontSizeScale,
                  _r26 = e.charSpacing,
                  c = e.wordSpacing,
                  h = e.fontDirection,
                  d = e.textHScale * h,
                  u = s.vertical,
                  p = u ? 1 : -1,
                  g = s.defaultVMetrics,
                  m = n * e.fontMatrix[0];
                var f = 0;
                var _iterator120 = _createForOfIteratorHelper(t),
                  _step120;
                try {
                  for (_iterator120.s(); !(_step120 = _iterator120.n()).done;) {
                    var _i64 = _step120.value;
                    if (null === _i64) {
                      f += h * c;
                      continue;
                    }
                    if ("number" == typeof _i64) {
                      f += p * _i64 * n / 1e3;
                      continue;
                    }
                    var _t156 = (_i64.isSpace ? c : 0) + _r26,
                      _o12 = _i64.fontChar;
                    var _l10 = void 0,
                      _d7 = void 0,
                      _b3 = void 0,
                      _A4 = _i64.width;
                    if (u) {
                      var _t157 = void 0;
                      var _e102 = _i64.vmetric || g;
                      _t157 = _i64.vmetric ? _e102[1] : .5 * _A4;
                      _t157 = -_t157 * m;
                      var _s87 = _e102[2] * m;
                      _A4 = _e102 ? -_e102[0] : _A4;
                      _l10 = _t157 / a;
                      _d7 = (f + _s87) / a;
                    } else {
                      _l10 = f / a;
                      _d7 = 0;
                    }
                    if (_i64.isInFont || s.missingFile) {
                      e.xcoords.push(e.x + _l10);
                      u && e.ycoords.push(-e.y + _d7);
                      e.tspan.textContent += _o12;
                    }
                    _b3 = u ? _A4 * m - _t156 * h : _A4 * m + _t156 * h;
                    f += _b3;
                  }
                } catch (err) {
                  _iterator120.e(err);
                } finally {
                  _iterator120.f();
                }
                e.tspan.setAttributeNS(null, "x", e.xcoords.map(pf).join(" "));
                u ? e.tspan.setAttributeNS(null, "y", e.ycoords.map(pf).join(" ")) : e.tspan.setAttributeNS(null, "y", pf(-e.y));
                u ? e.y -= f : e.x += f * d;
                e.tspan.setAttributeNS(null, "font-family", e.fontFamily);
                e.tspan.setAttributeNS(null, "font-size", "".concat(pf(e.fontSize), "px"));
                e.fontStyle !== o.fontStyle && e.tspan.setAttributeNS(null, "font-style", e.fontStyle);
                e.fontWeight !== o.fontWeight && e.tspan.setAttributeNS(null, "font-weight", e.fontWeight);
                var b = e.textRenderingMode & i.TextRenderingMode.FILL_STROKE_MASK;
                if (b === i.TextRenderingMode.FILL || b === i.TextRenderingMode.FILL_STROKE) {
                  e.fillColor !== o.fillColor && e.tspan.setAttributeNS(null, "fill", e.fillColor);
                  e.fillAlpha < 1 && e.tspan.setAttributeNS(null, "fill-opacity", e.fillAlpha);
                } else e.textRenderingMode === i.TextRenderingMode.ADD_TO_PATH ? e.tspan.setAttributeNS(null, "fill", "transparent") : e.tspan.setAttributeNS(null, "fill", "none");
                if (b === i.TextRenderingMode.STROKE || b === i.TextRenderingMode.FILL_STROKE) {
                  var _t155 = 1 / (e.textMatrixScale || 1);
                  this._setStrokeAttributes(e.tspan, _t155);
                }
                var A = e.textMatrix;
                if (0 !== e.textRise) {
                  A = A.slice();
                  A[5] += e.textRise;
                }
                e.txtElement.setAttributeNS(null, "transform", "".concat(pm(A), " scale(").concat(pf(d), ", -1)"));
                e.txtElement.setAttributeNS(l, "xml:space", "preserve");
                e.txtElement.append(e.tspan);
                e.txtgrp.append(e.txtElement);
                this._ensureTransformGroup().append(e.txtElement);
              }
            }, {
              key: "setLeadingMoveText",
              value: function setLeadingMoveText(t, e) {
                this.setLeading(-e);
                this.moveText(t, e);
              }
            }, {
              key: "addFontStyle",
              value: function addFontStyle(t) {
                if (!t.data) throw new Error('addFontStyle: No font data available, ensure that the "fontExtraProperties" API parameter is set.');
                if (!this.cssStyle) {
                  this.cssStyle = this.svgFactory.createElement("svg:style");
                  this.cssStyle.setAttributeNS(null, "type", "text/css");
                  this.defs.append(this.cssStyle);
                }
                var e = createObjectURL(t.data, t.mimetype, this.forceDataSchema);
                this.cssStyle.textContent += "@font-face { font-family: \"".concat(t.loadedName, "\"; src: url(").concat(e, "); }\n");
              }
            }, {
              key: "setFont",
              value: function setFont(t) {
                var e = this.current,
                  s = this.commonObjs.get(t[0]);
                var n = t[1];
                e.font = s;
                if (this.embedFonts && !s.missingFile && !this.embeddedFonts[s.loadedName]) {
                  this.addFontStyle(s);
                  this.embeddedFonts[s.loadedName] = s;
                }
                e.fontMatrix = s.fontMatrix || i.FONT_IDENTITY_MATRIX;
                var a = "normal";
                s.black ? a = "900" : s.bold && (a = "bold");
                var _r27 = s.italic ? "italic" : "normal";
                if (n < 0) {
                  n = -n;
                  e.fontDirection = -1;
                } else e.fontDirection = 1;
                e.fontSize = n;
                e.fontFamily = s.loadedName;
                e.fontWeight = a;
                e.fontStyle = _r27;
                e.tspan = this.svgFactory.createElement("svg:tspan");
                e.tspan.setAttributeNS(null, "y", pf(-e.y));
                e.xcoords = [];
                e.ycoords = [];
              }
            }, {
              key: "endText",
              value: function endText() {
                var _t$txtElement;
                var t = this.current;
                if (t.textRenderingMode & i.TextRenderingMode.ADD_TO_PATH_FLAG && (_t$txtElement = t.txtElement) !== null && _t$txtElement !== void 0 && _t$txtElement.hasChildNodes()) {
                  t.element = t.txtElement;
                  this.clip("nonzero");
                  this.endPath();
                }
              }
            }, {
              key: "setLineWidth",
              value: function setLineWidth(t) {
                t > 0 && (this.current.lineWidth = t);
              }
            }, {
              key: "setLineCap",
              value: function setLineCap(t) {
                this.current.lineCap = h[t];
              }
            }, {
              key: "setLineJoin",
              value: function setLineJoin(t) {
                this.current.lineJoin = d[t];
              }
            }, {
              key: "setMiterLimit",
              value: function setMiterLimit(t) {
                this.current.miterLimit = t;
              }
            }, {
              key: "setStrokeAlpha",
              value: function setStrokeAlpha(t) {
                this.current.strokeAlpha = t;
              }
            }, {
              key: "setStrokeRGBColor",
              value: function setStrokeRGBColor(t, e, s) {
                this.current.strokeColor = i.Util.makeHexColor(t, e, s);
              }
            }, {
              key: "setFillAlpha",
              value: function setFillAlpha(t) {
                this.current.fillAlpha = t;
              }
            }, {
              key: "setFillRGBColor",
              value: function setFillRGBColor(t, e, s) {
                this.current.fillColor = i.Util.makeHexColor(t, e, s);
                this.current.tspan = this.svgFactory.createElement("svg:tspan");
                this.current.xcoords = [];
                this.current.ycoords = [];
              }
            }, {
              key: "setStrokeColorN",
              value: function setStrokeColorN(t) {
                this.current.strokeColor = this._makeColorN_Pattern(t);
              }
            }, {
              key: "setFillColorN",
              value: function setFillColorN(t) {
                this.current.fillColor = this._makeColorN_Pattern(t);
              }
            }, {
              key: "shadingFill",
              value: function shadingFill(t) {
                var e = this.viewport.width,
                  s = this.viewport.height,
                  n = i.Util.inverseTransform(this.transformMatrix),
                  a = i.Util.applyTransform([0, 0], n),
                  _r28 = i.Util.applyTransform([0, s], n),
                  o = i.Util.applyTransform([e, 0], n),
                  l = i.Util.applyTransform([e, s], n),
                  c = Math.min(a[0], _r28[0], o[0], l[0]),
                  h = Math.min(a[1], _r28[1], o[1], l[1]),
                  d = Math.max(a[0], _r28[0], o[0], l[0]),
                  u = Math.max(a[1], _r28[1], o[1], l[1]),
                  p = this.svgFactory.createElement("svg:rect");
                p.setAttributeNS(null, "x", c);
                p.setAttributeNS(null, "y", h);
                p.setAttributeNS(null, "width", d - c);
                p.setAttributeNS(null, "height", u - h);
                p.setAttributeNS(null, "fill", this._makeShadingPattern(t));
                this.current.fillAlpha < 1 && p.setAttributeNS(null, "fill-opacity", this.current.fillAlpha);
                this._ensureTransformGroup().append(p);
              }
            }, {
              key: "_makeColorN_Pattern",
              value: function _makeColorN_Pattern(t) {
                return "TilingPattern" === t[0] ? this._makeTilingPattern(t) : this._makeShadingPattern(t);
              }
            }, {
              key: "_makeTilingPattern",
              value: function _makeTilingPattern(t) {
                var e = t[1],
                  s = t[2],
                  n = t[3] || i.IDENTITY_MATRIX,
                  _t$ = _slicedToArray(t[4], 4),
                  a = _t$[0],
                  _r29 = _t$[1],
                  o = _t$[2],
                  l = _t$[3],
                  c = t[5],
                  h = t[6],
                  d = t[7],
                  u = "shading" + m++,
                  _i$Util$normalizeRect = i.Util.normalizeRect([].concat(_toConsumableArray(i.Util.applyTransform([a, _r29], n)), _toConsumableArray(i.Util.applyTransform([o, l], n)))),
                  _i$Util$normalizeRect2 = _slicedToArray(_i$Util$normalizeRect, 4),
                  p = _i$Util$normalizeRect2[0],
                  g = _i$Util$normalizeRect2[1],
                  f = _i$Util$normalizeRect2[2],
                  b = _i$Util$normalizeRect2[3],
                  _i$Util$singularValue = i.Util.singularValueDecompose2dScale(n),
                  _i$Util$singularValue2 = _slicedToArray(_i$Util$singularValue, 2),
                  A = _i$Util$singularValue2[0],
                  _ = _i$Util$singularValue2[1],
                  y = c * A,
                  v = h * _,
                  S = this.svgFactory.createElement("svg:pattern");
                S.setAttributeNS(null, "id", u);
                S.setAttributeNS(null, "patternUnits", "userSpaceOnUse");
                S.setAttributeNS(null, "width", y);
                S.setAttributeNS(null, "height", v);
                S.setAttributeNS(null, "x", "".concat(p));
                S.setAttributeNS(null, "y", "".concat(g));
                var x = this.svg,
                  E = this.transformMatrix,
                  C = this.current.fillColor,
                  P = this.current.strokeColor,
                  T = this.svgFactory.create(f - p, b - g);
                this.svg = T;
                this.transformMatrix = n;
                if (2 === d) {
                  var _i$Util;
                  var _t158 = (_i$Util = i.Util).makeHexColor.apply(_i$Util, _toConsumableArray(e));
                  this.current.fillColor = _t158;
                  this.current.strokeColor = _t158;
                }
                this.executeOpTree(this.convertOpList(s));
                this.svg = x;
                this.transformMatrix = E;
                this.current.fillColor = C;
                this.current.strokeColor = P;
                S.append(T.childNodes[0]);
                this.defs.append(S);
                return "url(#".concat(u, ")");
              }
            }, {
              key: "_makeShadingPattern",
              value: function _makeShadingPattern(t) {
                "string" == typeof t && (t = this.objs.get(t));
                switch (t[0]) {
                  case "RadialAxial":
                    var _e103 = "shading" + m++,
                      _s88 = t[3];
                    var _n61;
                    switch (t[1]) {
                      case "axial":
                        var _s89 = t[4],
                          _i65 = t[5];
                        _n61 = this.svgFactory.createElement("svg:linearGradient");
                        _n61.setAttributeNS(null, "id", _e103);
                        _n61.setAttributeNS(null, "gradientUnits", "userSpaceOnUse");
                        _n61.setAttributeNS(null, "x1", _s89[0]);
                        _n61.setAttributeNS(null, "y1", _s89[1]);
                        _n61.setAttributeNS(null, "x2", _i65[0]);
                        _n61.setAttributeNS(null, "y2", _i65[1]);
                        break;
                      case "radial":
                        var _a35 = t[4],
                          _r30 = t[5],
                          _o13 = t[6],
                          _l11 = t[7];
                        _n61 = this.svgFactory.createElement("svg:radialGradient");
                        _n61.setAttributeNS(null, "id", _e103);
                        _n61.setAttributeNS(null, "gradientUnits", "userSpaceOnUse");
                        _n61.setAttributeNS(null, "cx", _r30[0]);
                        _n61.setAttributeNS(null, "cy", _r30[1]);
                        _n61.setAttributeNS(null, "r", _l11);
                        _n61.setAttributeNS(null, "fx", _a35[0]);
                        _n61.setAttributeNS(null, "fy", _a35[1]);
                        _n61.setAttributeNS(null, "fr", _o13);
                        break;
                      default:
                        throw new Error("Unknown RadialAxial type: ".concat(t[1]));
                    }
                    var _iterator121 = _createForOfIteratorHelper(_s88),
                      _step121;
                    try {
                      for (_iterator121.s(); !(_step121 = _iterator121.n()).done;) {
                        var _t159 = _step121.value;
                        var _e104 = this.svgFactory.createElement("svg:stop");
                        _e104.setAttributeNS(null, "offset", _t159[0]);
                        _e104.setAttributeNS(null, "stop-color", _t159[1]);
                        _n61.append(_e104);
                      }
                    } catch (err) {
                      _iterator121.e(err);
                    } finally {
                      _iterator121.f();
                    }
                    this.defs.append(_n61);
                    return "url(#".concat(_e103, ")");
                  case "Mesh":
                    (0, i.warn)("Unimplemented pattern Mesh");
                    return null;
                  case "Dummy":
                    return "hotpink";
                  default:
                    throw new Error("Unknown IR type: ".concat(t[0]));
                }
              }
            }, {
              key: "setDash",
              value: function setDash(t, e) {
                this.current.dashArray = t;
                this.current.dashPhase = e;
              }
            }, {
              key: "constructPath",
              value: function constructPath(t, e) {
                var s = this.current;
                var n = s.x,
                  a = s.y,
                  _r31 = [],
                  o = 0;
                var _iterator122 = _createForOfIteratorHelper(t),
                  _step122;
                try {
                  for (_iterator122.s(); !(_step122 = _iterator122.n()).done;) {
                    var _s90 = _step122.value;
                    switch (0 | s) {
                      case i.OPS.rectangle:
                        n = e[o++];
                        a = e[o++];
                        var _t160 = n + e[o++],
                          _s91 = a + e[o++];
                        _r31.push("M", pf(n), pf(a), "L", pf(_t160), pf(a), "L", pf(_t160), pf(_s91), "L", pf(n), pf(_s91), "Z");
                        break;
                      case i.OPS.moveTo:
                        n = e[o++];
                        a = e[o++];
                        _r31.push("M", pf(n), pf(a));
                        break;
                      case i.OPS.lineTo:
                        n = e[o++];
                        a = e[o++];
                        _r31.push("L", pf(n), pf(a));
                        break;
                      case i.OPS.curveTo:
                        n = e[o + 4];
                        a = e[o + 5];
                        _r31.push("C", pf(e[o]), pf(e[o + 1]), pf(e[o + 2]), pf(e[o + 3]), pf(n), pf(a));
                        o += 6;
                        break;
                      case i.OPS.curveTo2:
                        _r31.push("C", pf(n), pf(a), pf(e[o]), pf(e[o + 1]), pf(e[o + 2]), pf(e[o + 3]));
                        n = e[o + 2];
                        a = e[o + 3];
                        o += 4;
                        break;
                      case i.OPS.curveTo3:
                        n = e[o + 2];
                        a = e[o + 3];
                        _r31.push("C", pf(e[o]), pf(e[o + 1]), pf(n), pf(a), pf(n), pf(a));
                        o += 4;
                        break;
                      case i.OPS.closePath:
                        _r31.push("Z");
                    }
                  }
                } catch (err) {
                  _iterator122.e(err);
                } finally {
                  _iterator122.f();
                }
                _r31 = _r31.join(" ");
                if (s.path && t.length > 0 && t[0] !== i.OPS.rectangle && t[0] !== i.OPS.moveTo) _r31 = s.path.getAttributeNS(null, "d") + _r31;else {
                  s.path = this.svgFactory.createElement("svg:path");
                  this._ensureTransformGroup().append(s.path);
                }
                s.path.setAttributeNS(null, "d", _r31);
                s.path.setAttributeNS(null, "fill", "none");
                s.element = s.path;
                s.setCurrentPoint(n, a);
              }
            }, {
              key: "endPath",
              value: function endPath() {
                var t = this.current;
                t.path = null;
                if (!this.pendingClip) return;
                if (!t.element) {
                  this.pendingClip = null;
                  return;
                }
                var e = "clippath" + p++,
                  s = this.svgFactory.createElement("svg:clipPath");
                s.setAttributeNS(null, "id", e);
                s.setAttributeNS(null, "transform", pm(this.transformMatrix));
                var n = t.element.cloneNode(!0);
                "evenodd" === this.pendingClip ? n.setAttributeNS(null, "clip-rule", "evenodd") : n.setAttributeNS(null, "clip-rule", "nonzero");
                this.pendingClip = null;
                s.append(n);
                this.defs.append(s);
                if (t.activeClipUrl) {
                  t.clipGroup = null;
                  var _iterator123 = _createForOfIteratorHelper(this.extraStack),
                    _step123;
                  try {
                    for (_iterator123.s(); !(_step123 = _iterator123.n()).done;) {
                      var _t161 = _step123.value;
                      _t161.clipGroup = null;
                    }
                  } catch (err) {
                    _iterator123.e(err);
                  } finally {
                    _iterator123.f();
                  }
                  s.setAttributeNS(null, "clip-path", t.activeClipUrl);
                }
                t.activeClipUrl = "url(#".concat(e, ")");
                this.tgrp = null;
              }
            }, {
              key: "clip",
              value: function clip(t) {
                this.pendingClip = t;
              }
            }, {
              key: "closePath",
              value: function closePath() {
                var t = this.current;
                if (t.path) {
                  var _e105 = "".concat(t.path.getAttributeNS(null, "d"), "Z");
                  t.path.setAttributeNS(null, "d", _e105);
                }
              }
            }, {
              key: "setLeading",
              value: function setLeading(t) {
                this.current.leading = -t;
              }
            }, {
              key: "setTextRise",
              value: function setTextRise(t) {
                this.current.textRise = t;
              }
            }, {
              key: "setTextRenderingMode",
              value: function setTextRenderingMode(t) {
                this.current.textRenderingMode = t;
              }
            }, {
              key: "setHScale",
              value: function setHScale(t) {
                this.current.textHScale = t / 100;
              }
            }, {
              key: "setRenderingIntent",
              value: function setRenderingIntent(t) {}
            }, {
              key: "setFlatness",
              value: function setFlatness(t) {}
            }, {
              key: "setGState",
              value: function setGState(t) {
                var _iterator124 = _createForOfIteratorHelper(t),
                  _step124;
                try {
                  for (_iterator124.s(); !(_step124 = _iterator124.n()).done;) {
                    var _step124$value = _slicedToArray(_step124.value, 2),
                      _e106 = _step124$value[0],
                      _s92 = _step124$value[1];
                    switch (_e106) {
                      case "LW":
                        this.setLineWidth(_s92);
                        break;
                      case "LC":
                        this.setLineCap(_s92);
                        break;
                      case "LJ":
                        this.setLineJoin(_s92);
                        break;
                      case "ML":
                        this.setMiterLimit(_s92);
                        break;
                      case "D":
                        this.setDash(_s92[0], _s92[1]);
                        break;
                      case "RI":
                        this.setRenderingIntent(_s92);
                        break;
                      case "FL":
                        this.setFlatness(_s92);
                        break;
                      case "Font":
                        this.setFont(_s92);
                        break;
                      case "CA":
                        this.setStrokeAlpha(_s92);
                        break;
                      case "ca":
                        this.setFillAlpha(_s92);
                        break;
                      default:
                        (0, i.warn)("Unimplemented graphic state operator ".concat(_e106));
                    }
                  }
                } catch (err) {
                  _iterator124.e(err);
                } finally {
                  _iterator124.f();
                }
              }
            }, {
              key: "fill",
              value: function fill() {
                var t = this.current;
                if (t.element) {
                  t.element.setAttributeNS(null, "fill", t.fillColor);
                  t.element.setAttributeNS(null, "fill-opacity", t.fillAlpha);
                  this.endPath();
                }
              }
            }, {
              key: "stroke",
              value: function stroke() {
                var t = this.current;
                if (t.element) {
                  this._setStrokeAttributes(t.element);
                  t.element.setAttributeNS(null, "fill", "none");
                  this.endPath();
                }
              }
            }, {
              key: "_setStrokeAttributes",
              value: function _setStrokeAttributes(t) {
                var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
                var s = this.current;
                var n = s.dashArray;
                1 !== e && n.length > 0 && (n = n.map(function (t) {
                  return e * t;
                }));
                t.setAttributeNS(null, "stroke", s.strokeColor);
                t.setAttributeNS(null, "stroke-opacity", s.strokeAlpha);
                t.setAttributeNS(null, "stroke-miterlimit", pf(s.miterLimit));
                t.setAttributeNS(null, "stroke-linecap", s.lineCap);
                t.setAttributeNS(null, "stroke-linejoin", s.lineJoin);
                t.setAttributeNS(null, "stroke-width", pf(e * s.lineWidth) + "px");
                t.setAttributeNS(null, "stroke-dasharray", n.map(pf).join(" "));
                t.setAttributeNS(null, "stroke-dashoffset", pf(e * s.dashPhase) + "px");
              }
            }, {
              key: "eoFill",
              value: function eoFill() {
                var _this$current$element;
                (_this$current$element = this.current.element) === null || _this$current$element === void 0 ? void 0 : _this$current$element.setAttributeNS(null, "fill-rule", "evenodd");
                this.fill();
              }
            }, {
              key: "fillStroke",
              value: function fillStroke() {
                this.stroke();
                this.fill();
              }
            }, {
              key: "eoFillStroke",
              value: function eoFillStroke() {
                var _this$current$element2;
                (_this$current$element2 = this.current.element) === null || _this$current$element2 === void 0 ? void 0 : _this$current$element2.setAttributeNS(null, "fill-rule", "evenodd");
                this.fillStroke();
              }
            }, {
              key: "closeStroke",
              value: function closeStroke() {
                this.closePath();
                this.stroke();
              }
            }, {
              key: "closeFillStroke",
              value: function closeFillStroke() {
                this.closePath();
                this.fillStroke();
              }
            }, {
              key: "closeEOFillStroke",
              value: function closeEOFillStroke() {
                this.closePath();
                this.eoFillStroke();
              }
            }, {
              key: "paintSolidColorImageMask",
              value: function paintSolidColorImageMask() {
                var t = this.svgFactory.createElement("svg:rect");
                t.setAttributeNS(null, "x", "0");
                t.setAttributeNS(null, "y", "0");
                t.setAttributeNS(null, "width", "1px");
                t.setAttributeNS(null, "height", "1px");
                t.setAttributeNS(null, "fill", this.current.fillColor);
                this._ensureTransformGroup().append(t);
              }
            }, {
              key: "paintImageXObject",
              value: function paintImageXObject(t) {
                var e = this.getObject(t);
                e ? this.paintInlineImageXObject(e) : (0, i.warn)("Dependent image with object ID ".concat(t, " is not ready yet"));
              }
            }, {
              key: "paintInlineImageXObject",
              value: function paintInlineImageXObject(t, e) {
                var s = t.width,
                  n = t.height,
                  i = u(t, this.forceDataSchema, !!e),
                  a = this.svgFactory.createElement("svg:rect");
                a.setAttributeNS(null, "x", "0");
                a.setAttributeNS(null, "y", "0");
                a.setAttributeNS(null, "width", pf(s));
                a.setAttributeNS(null, "height", pf(n));
                this.current.element = a;
                this.clip("nonzero");
                var _r32 = this.svgFactory.createElement("svg:image");
                _r32.setAttributeNS(c, "xlink:href", i);
                _r32.setAttributeNS(null, "x", "0");
                _r32.setAttributeNS(null, "y", pf(-n));
                _r32.setAttributeNS(null, "width", pf(s) + "px");
                _r32.setAttributeNS(null, "height", pf(n) + "px");
                _r32.setAttributeNS(null, "transform", "scale(".concat(pf(1 / s), " ").concat(pf(-1 / n), ")"));
                e ? e.append(_r32) : this._ensureTransformGroup().append(_r32);
              }
            }, {
              key: "paintImageMaskXObject",
              value: function paintImageMaskXObject(t) {
                var e = this.getObject(t.data, t);
                if (e.bitmap) {
                  (0, i.warn)("paintImageMaskXObject: ImageBitmap support is not implemented, ensure that the `isOffscreenCanvasSupported` API parameter is disabled.");
                  return;
                }
                var s = this.current,
                  n = e.width,
                  a = e.height,
                  _r33 = s.fillColor;
                s.maskId = "mask" + g++;
                var o = this.svgFactory.createElement("svg:mask");
                o.setAttributeNS(null, "id", s.maskId);
                var l = this.svgFactory.createElement("svg:rect");
                l.setAttributeNS(null, "x", "0");
                l.setAttributeNS(null, "y", "0");
                l.setAttributeNS(null, "width", pf(n));
                l.setAttributeNS(null, "height", pf(a));
                l.setAttributeNS(null, "fill", _r33);
                l.setAttributeNS(null, "mask", "url(#".concat(s.maskId, ")"));
                this.defs.append(o);
                this._ensureTransformGroup().append(l);
                this.paintInlineImageXObject(e, o);
              }
            }, {
              key: "paintFormXObjectBegin",
              value: function paintFormXObjectBegin(t, e) {
                Array.isArray(t) && 6 === t.length && this.transform(t[0], t[1], t[2], t[3], t[4], t[5]);
                if (e) {
                  var _t162 = e[2] - e[0],
                    _s93 = e[3] - e[1],
                    _n62 = this.svgFactory.createElement("svg:rect");
                  _n62.setAttributeNS(null, "x", e[0]);
                  _n62.setAttributeNS(null, "y", e[1]);
                  _n62.setAttributeNS(null, "width", pf(_t162));
                  _n62.setAttributeNS(null, "height", pf(_s93));
                  this.current.element = _n62;
                  this.clip("nonzero");
                  this.endPath();
                }
              }
            }, {
              key: "paintFormXObjectEnd",
              value: function paintFormXObjectEnd() {}
            }, {
              key: "_initialize",
              value: function _initialize(t) {
                var e = this.svgFactory.create(t.width, t.height),
                  s = this.svgFactory.createElement("svg:defs");
                e.append(s);
                this.defs = s;
                var n = this.svgFactory.createElement("svg:g");
                n.setAttributeNS(null, "transform", pm(t.transform));
                e.append(n);
                this.svg = n;
                return e;
              }
            }, {
              key: "_ensureClipGroup",
              value: function _ensureClipGroup() {
                if (!this.current.clipGroup) {
                  var _t163 = this.svgFactory.createElement("svg:g");
                  _t163.setAttributeNS(null, "clip-path", this.current.activeClipUrl);
                  this.svg.append(_t163);
                  this.current.clipGroup = _t163;
                }
                return this.current.clipGroup;
              }
            }, {
              key: "_ensureTransformGroup",
              value: function _ensureTransformGroup() {
                if (!this.tgrp) {
                  this.tgrp = this.svgFactory.createElement("svg:g");
                  this.tgrp.setAttributeNS(null, "transform", pm(this.transformMatrix));
                  this.current.activeClipUrl ? this._ensureClipGroup().append(this.tgrp) : this.svg.append(this.tgrp);
                }
                return this.tgrp;
              }
            }]);
            return r;
          }();
        }
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.PDFNodeStream = void 0;
        var n = s(1),
          i = s(32);
        var a = require("fs"),
          r = require("http"),
          o = require("https"),
          l = require("url"),
          c = /^file:\/\/\/[a-zA-Z]:\//;
        e.PDFNodeStream = /*#__PURE__*/function () {
          function PDFNodeStream(t) {
            _classCallCheck(this, PDFNodeStream);
            this.source = t;
            this.url = function parseUrl(t) {
              var e = l.parse(t);
              if ("file:" === e.protocol || e.host) return e;
              if (/^[a-z]:[/\\]/i.test(t)) return l.parse("file:///".concat(t));
              e.host || (e.protocol = "file:");
              return e;
            }(t.url);
            this.isHttp = "http:" === this.url.protocol || "https:" === this.url.protocol;
            this.isFsUrl = "file:" === this.url.protocol;
            this.httpHeaders = this.isHttp && t.httpHeaders || {};
            this._fullRequestReader = null;
            this._rangeRequestReaders = [];
          }
          _createClass(PDFNodeStream, [{
            key: "_progressiveDataLength",
            get: function get() {
              var _this$_fullRequestRea7, _this$_fullRequestRea8;
              return (_this$_fullRequestRea7 = (_this$_fullRequestRea8 = this._fullRequestReader) === null || _this$_fullRequestRea8 === void 0 ? void 0 : _this$_fullRequestRea8._loaded) !== null && _this$_fullRequestRea7 !== void 0 ? _this$_fullRequestRea7 : 0;
            }
          }, {
            key: "getFullReader",
            value: function getFullReader() {
              (0, n.assert)(!this._fullRequestReader, "PDFNodeStream.getFullReader can only be called once.");
              this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);
              return this._fullRequestReader;
            }
          }, {
            key: "getRangeReader",
            value: function getRangeReader(t, e) {
              if (e <= this._progressiveDataLength) return null;
              var s = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, t, e) : new PDFNodeStreamRangeReader(this, t, e);
              this._rangeRequestReaders.push(s);
              return s;
            }
          }, {
            key: "cancelAllRequests",
            value: function cancelAllRequests(t) {
              var _this$_fullRequestRea9;
              (_this$_fullRequestRea9 = this._fullRequestReader) === null || _this$_fullRequestRea9 === void 0 ? void 0 : _this$_fullRequestRea9.cancel(t);
              var _iterator125 = _createForOfIteratorHelper(this._rangeRequestReaders.slice(0)),
                _step125;
              try {
                for (_iterator125.s(); !(_step125 = _iterator125.n()).done;) {
                  var _e107 = _step125.value;
                  _e107.cancel(t);
                }
              } catch (err) {
                _iterator125.e(err);
              } finally {
                _iterator125.f();
              }
            }
          }]);
          return PDFNodeStream;
        }();
        var BaseFullReader = /*#__PURE__*/function () {
          function BaseFullReader(t) {
            _classCallCheck(this, BaseFullReader);
            this._url = t.url;
            this._done = !1;
            this._storedError = null;
            this.onProgress = null;
            var e = t.source;
            this._contentLength = e.length;
            this._loaded = 0;
            this._filename = null;
            this._disableRange = e.disableRange || !1;
            this._rangeChunkSize = e.rangeChunkSize;
            this._rangeChunkSize || this._disableRange || (this._disableRange = !0);
            this._isStreamingSupported = !e.disableStream;
            this._isRangeSupported = !e.disableRange;
            this._readableStream = null;
            this._readCapability = (0, n.createPromiseCapability)();
            this._headersCapability = (0, n.createPromiseCapability)();
          }
          _createClass(BaseFullReader, [{
            key: "headersReady",
            get: function get() {
              return this._headersCapability.promise;
            }
          }, {
            key: "filename",
            get: function get() {
              return this._filename;
            }
          }, {
            key: "contentLength",
            get: function get() {
              return this._contentLength;
            }
          }, {
            key: "isRangeSupported",
            get: function get() {
              return this._isRangeSupported;
            }
          }, {
            key: "isStreamingSupported",
            get: function get() {
              return this._isStreamingSupported;
            }
          }, {
            key: "read",
            value: function () {
              var _read3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {
                var _this$onProgress;
                var t;
                return _regeneratorRuntime().wrap(function _callee14$(_context14) {
                  while (1) switch (_context14.prev = _context14.next) {
                    case 0:
                      _context14.next = 2;
                      return this._readCapability.promise;
                    case 2:
                      if (!this._done) {
                        _context14.next = 4;
                        break;
                      }
                      return _context14.abrupt("return", {
                        value: void 0,
                        done: !0
                      });
                    case 4:
                      if (!this._storedError) {
                        _context14.next = 6;
                        break;
                      }
                      throw this._storedError;
                    case 6:
                      t = this._readableStream.read();
                      if (!(null === t)) {
                        _context14.next = 10;
                        break;
                      }
                      this._readCapability = (0, n.createPromiseCapability)();
                      return _context14.abrupt("return", this.read());
                    case 10:
                      this._loaded += t.length;
                      (_this$onProgress = this.onProgress) === null || _this$onProgress === void 0 ? void 0 : _this$onProgress.call(this, {
                        loaded: this._loaded,
                        total: this._contentLength
                      });
                      return _context14.abrupt("return", {
                        value: new Uint8Array(t).buffer,
                        done: !1
                      });
                    case 13:
                    case "end":
                      return _context14.stop();
                  }
                }, _callee14, this);
              }));
              function read() {
                return _read3.apply(this, arguments);
              }
              return read;
            }()
          }, {
            key: "cancel",
            value: function cancel(t) {
              this._readableStream ? this._readableStream.destroy(t) : this._error(t);
            }
          }, {
            key: "_error",
            value: function _error(t) {
              this._storedError = t;
              this._readCapability.resolve();
            }
          }, {
            key: "_setReadableStream",
            value: function _setReadableStream(t) {
              var _this73 = this;
              this._readableStream = t;
              t.on("readable", function () {
                _this73._readCapability.resolve();
              });
              t.on("end", function () {
                t.destroy();
                _this73._done = !0;
                _this73._readCapability.resolve();
              });
              t.on("error", function (t) {
                _this73._error(t);
              });
              !this._isStreamingSupported && this._isRangeSupported && this._error(new n.AbortException("streaming is disabled"));
              this._storedError && this._readableStream.destroy(this._storedError);
            }
          }]);
          return BaseFullReader;
        }();
        var BaseRangeReader = /*#__PURE__*/function () {
          function BaseRangeReader(t) {
            _classCallCheck(this, BaseRangeReader);
            this._url = t.url;
            this._done = !1;
            this._storedError = null;
            this.onProgress = null;
            this._loaded = 0;
            this._readableStream = null;
            this._readCapability = (0, n.createPromiseCapability)();
            var e = t.source;
            this._isStreamingSupported = !e.disableStream;
          }
          _createClass(BaseRangeReader, [{
            key: "isStreamingSupported",
            get: function get() {
              return this._isStreamingSupported;
            }
          }, {
            key: "read",
            value: function () {
              var _read4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {
                var _this$onProgress2;
                var t;
                return _regeneratorRuntime().wrap(function _callee15$(_context15) {
                  while (1) switch (_context15.prev = _context15.next) {
                    case 0:
                      _context15.next = 2;
                      return this._readCapability.promise;
                    case 2:
                      if (!this._done) {
                        _context15.next = 4;
                        break;
                      }
                      return _context15.abrupt("return", {
                        value: void 0,
                        done: !0
                      });
                    case 4:
                      if (!this._storedError) {
                        _context15.next = 6;
                        break;
                      }
                      throw this._storedError;
                    case 6:
                      t = this._readableStream.read();
                      if (!(null === t)) {
                        _context15.next = 10;
                        break;
                      }
                      this._readCapability = (0, n.createPromiseCapability)();
                      return _context15.abrupt("return", this.read());
                    case 10:
                      this._loaded += t.length;
                      (_this$onProgress2 = this.onProgress) === null || _this$onProgress2 === void 0 ? void 0 : _this$onProgress2.call(this, {
                        loaded: this._loaded
                      });
                      return _context15.abrupt("return", {
                        value: new Uint8Array(t).buffer,
                        done: !1
                      });
                    case 13:
                    case "end":
                      return _context15.stop();
                  }
                }, _callee15, this);
              }));
              function read() {
                return _read4.apply(this, arguments);
              }
              return read;
            }()
          }, {
            key: "cancel",
            value: function cancel(t) {
              this._readableStream ? this._readableStream.destroy(t) : this._error(t);
            }
          }, {
            key: "_error",
            value: function _error(t) {
              this._storedError = t;
              this._readCapability.resolve();
            }
          }, {
            key: "_setReadableStream",
            value: function _setReadableStream(t) {
              var _this74 = this;
              this._readableStream = t;
              t.on("readable", function () {
                _this74._readCapability.resolve();
              });
              t.on("end", function () {
                t.destroy();
                _this74._done = !0;
                _this74._readCapability.resolve();
              });
              t.on("error", function (t) {
                _this74._error(t);
              });
              this._storedError && this._readableStream.destroy(this._storedError);
            }
          }]);
          return BaseRangeReader;
        }();
        function createRequestOptions(t, e) {
          return {
            protocol: t.protocol,
            auth: t.auth,
            host: t.hostname,
            port: t.port,
            path: t.path,
            method: "GET",
            headers: e
          };
        }
        var PDFNodeStreamFullReader = /*#__PURE__*/function (_BaseFullReader) {
          _inherits(PDFNodeStreamFullReader, _BaseFullReader);
          var _super45 = _createSuper(PDFNodeStreamFullReader);
          function PDFNodeStreamFullReader(t) {
            var _this75;
            _classCallCheck(this, PDFNodeStreamFullReader);
            _this75 = _super45.call(this, t);
            var handleResponse = function handleResponse(e) {
              if (404 === e.statusCode) {
                var _t164 = new n.MissingPDFException("Missing PDF \"".concat(_this75._url, "\"."));
                _this75._storedError = _t164;
                _this75._headersCapability.reject(_t164);
                return;
              }
              _this75._headersCapability.resolve();
              _this75._setReadableStream(e);
              var getResponseHeader = function getResponseHeader(t) {
                  return _this75._readableStream.headers[t.toLowerCase()];
                },
                _ref81 = (0, i.validateRangeRequestCapabilities)({
                  getResponseHeader: getResponseHeader,
                  isHttp: t.isHttp,
                  rangeChunkSize: _this75._rangeChunkSize,
                  disableRange: _this75._disableRange
                }),
                s = _ref81.allowRangeRequests,
                a = _ref81.suggestedLength;
              _this75._isRangeSupported = s;
              _this75._contentLength = a || _this75._contentLength;
              _this75._filename = (0, i.extractFilenameFromHeader)(getResponseHeader);
            };
            _this75._request = null;
            "http:" === _this75._url.protocol ? _this75._request = r.request(createRequestOptions(_this75._url, t.httpHeaders), handleResponse) : _this75._request = o.request(createRequestOptions(_this75._url, t.httpHeaders), handleResponse);
            _this75._request.on("error", function (t) {
              _this75._storedError = t;
              _this75._headersCapability.reject(t);
            });
            _this75._request.end();
            return _this75;
          }
          return _createClass(PDFNodeStreamFullReader);
        }(BaseFullReader);
        var PDFNodeStreamRangeReader = /*#__PURE__*/function (_BaseRangeReader) {
          _inherits(PDFNodeStreamRangeReader, _BaseRangeReader);
          var _super46 = _createSuper(PDFNodeStreamRangeReader);
          function PDFNodeStreamRangeReader(t, e, s) {
            var _this76;
            _classCallCheck(this, PDFNodeStreamRangeReader);
            _this76 = _super46.call(this, t);
            _this76._httpHeaders = {};
            for (var _e108 in t.httpHeaders) {
              var _s94 = t.httpHeaders[_e108];
              void 0 !== _s94 && (_this76._httpHeaders[_e108] = _s94);
            }
            _this76._httpHeaders.Range = "bytes=".concat(e, "-").concat(s - 1);
            var handleResponse = function handleResponse(t) {
              if (404 !== t.statusCode) _this76._setReadableStream(t);else {
                var _t165 = new n.MissingPDFException("Missing PDF \"".concat(_this76._url, "\"."));
                _this76._storedError = _t165;
              }
            };
            _this76._request = null;
            "http:" === _this76._url.protocol ? _this76._request = r.request(createRequestOptions(_this76._url, _this76._httpHeaders), handleResponse) : _this76._request = o.request(createRequestOptions(_this76._url, _this76._httpHeaders), handleResponse);
            _this76._request.on("error", function (t) {
              _this76._storedError = t;
            });
            _this76._request.end();
            return _this76;
          }
          return _createClass(PDFNodeStreamRangeReader);
        }(BaseRangeReader);
        var PDFNodeStreamFsFullReader = /*#__PURE__*/function (_BaseFullReader2) {
          _inherits(PDFNodeStreamFsFullReader, _BaseFullReader2);
          var _super47 = _createSuper(PDFNodeStreamFsFullReader);
          function PDFNodeStreamFsFullReader(t) {
            var _this77;
            _classCallCheck(this, PDFNodeStreamFsFullReader);
            _this77 = _super47.call(this, t);
            var e = decodeURIComponent(_this77._url.path);
            c.test(_this77._url.href) && (e = e.replace(/^\//, ""));
            a.lstat(e, function (t, s) {
              if (t) {
                "ENOENT" === t.code && (t = new n.MissingPDFException("Missing PDF \"".concat(e, "\".")));
                _this77._storedError = t;
                _this77._headersCapability.reject(t);
              } else {
                _this77._contentLength = s.size;
                _this77._setReadableStream(a.createReadStream(e));
                _this77._headersCapability.resolve();
              }
            });
            return _this77;
          }
          return _createClass(PDFNodeStreamFsFullReader);
        }(BaseFullReader);
        var PDFNodeStreamFsRangeReader = /*#__PURE__*/function (_BaseRangeReader2) {
          _inherits(PDFNodeStreamFsRangeReader, _BaseRangeReader2);
          var _super48 = _createSuper(PDFNodeStreamFsRangeReader);
          function PDFNodeStreamFsRangeReader(t, e, s) {
            var _this78;
            _classCallCheck(this, PDFNodeStreamFsRangeReader);
            _this78 = _super48.call(this, t);
            var n = decodeURIComponent(_this78._url.path);
            c.test(_this78._url.href) && (n = n.replace(/^\//, ""));
            _this78._setReadableStream(a.createReadStream(n, {
              start: e,
              end: s - 1
            }));
            return _this78;
          }
          return _createClass(PDFNodeStreamFsRangeReader);
        }(BaseRangeReader);
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.createResponseStatusError = function createResponseStatusError(t, e) {
          if (404 === t || 0 === t && e.startsWith("file:")) return new n.MissingPDFException('Missing PDF "' + e + '".');
          return new n.UnexpectedResponseException("Unexpected server response (".concat(t, ") while retrieving PDF \"").concat(e, "\"."), t);
        };
        e.extractFilenameFromHeader = function extractFilenameFromHeader(t) {
          var e = t("Content-Disposition");
          if (e) {
            var _t166 = (0, i.getFilenameFromContentDispositionHeader)(e);
            if (_t166.includes("%")) try {
              _t166 = decodeURIComponent(_t166);
            } catch (t) {}
            if ((0, a.isPdfFile)(_t166)) return _t166;
          }
          return null;
        };
        e.validateRangeRequestCapabilities = function validateRangeRequestCapabilities(_ref82) {
          var t = _ref82.getResponseHeader,
            e = _ref82.isHttp,
            s = _ref82.rangeChunkSize,
            n = _ref82.disableRange;
          var i = {
              allowRangeRequests: !1,
              suggestedLength: void 0
            },
            a = parseInt(t("Content-Length"), 10);
          if (!Number.isInteger(a)) return i;
          i.suggestedLength = a;
          if (a <= 2 * s) return i;
          if (n || !e) return i;
          if ("bytes" !== t("Accept-Ranges")) return i;
          if ("identity" !== (t("Content-Encoding") || "identity")) return i;
          i.allowRangeRequests = !0;
          return i;
        };
        e.validateResponseStatus = function validateResponseStatus(t) {
          return 200 === t || 206 === t;
        };
        var n = s(1),
          i = s(33),
          a = s(6);
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.getFilenameFromContentDispositionHeader = function getFilenameFromContentDispositionHeader(t) {
          var e = !0,
            s = toParamRegExp("filename\\*", "i").exec(t);
          if (s) {
            s = s[1];
            var _t167 = rfc2616unquote(s);
            _t167 = unescape(_t167);
            _t167 = rfc5987decode(_t167);
            _t167 = rfc2047decode(_t167);
            return fixupEncoding(_t167);
          }
          s = function rfc2231getparam(t) {
            var e = [];
            var s;
            var n = toParamRegExp("filename\\*((?!0\\d)\\d+)(\\*?)", "ig");
            for (; null !== (s = n.exec(t));) {
              var _s95 = s,
                _s96 = _slicedToArray(_s95, 4),
                _t168 = _s96[1],
                _n63 = _s96[2],
                _i66 = _s96[3];
              _t168 = parseInt(_t168, 10);
              if (_t168 in e) {
                if (0 === _t168) break;
              } else e[_t168] = [_n63, _i66];
            }
            var i = [];
            for (var _t169 = 0; _t169 < e.length && _t169 in e; ++_t169) {
              var _e$_t = _slicedToArray(e[_t169], 2),
                _s97 = _e$_t[0],
                _n64 = _e$_t[1];
              _n64 = rfc2616unquote(_n64);
              if (_s97) {
                _n64 = unescape(_n64);
                0 === _t169 && (_n64 = rfc5987decode(_n64));
              }
              i.push(_n64);
            }
            return i.join("");
          }(t);
          if (s) {
            return fixupEncoding(rfc2047decode(s));
          }
          s = toParamRegExp("filename", "i").exec(t);
          if (s) {
            s = s[1];
            var _t170 = rfc2616unquote(s);
            _t170 = rfc2047decode(_t170);
            return fixupEncoding(_t170);
          }
          function toParamRegExp(t, e) {
            return new RegExp("(?:^|;)\\s*" + t + '\\s*=\\s*([^";\\s][^;\\s]*|"(?:[^"\\\\]|\\\\"?)+"?)', e);
          }
          function textdecode(t, s) {
            if (t) {
              if (!/^[\x00-\xFF]+$/.test(s)) return s;
              try {
                var i = new TextDecoder(t, {
                    fatal: !0
                  }),
                  a = (0, n.stringToBytes)(s);
                s = i.decode(a);
                e = !1;
              } catch (t) {}
            }
            return s;
          }
          function fixupEncoding(t) {
            if (e && /[\x80-\xff]/.test(t)) {
              t = textdecode("utf-8", t);
              e && (t = textdecode("iso-8859-1", t));
            }
            return t;
          }
          function rfc2616unquote(t) {
            if (t.startsWith('"')) {
              var _e109 = t.slice(1).split('\\"');
              for (var _t171 = 0; _t171 < _e109.length; ++_t171) {
                var _s98 = _e109[_t171].indexOf('"');
                if (-1 !== _s98) {
                  _e109[_t171] = _e109[_t171].slice(0, _s98);
                  _e109.length = _t171 + 1;
                }
                _e109[_t171] = _e109[_t171].replace(/\\(.)/g, "$1");
              }
              t = _e109.join('"');
            }
            return t;
          }
          function rfc5987decode(t) {
            var e = t.indexOf("'");
            if (-1 === e) return t;
            return textdecode(t.slice(0, e), t.slice(e + 1).replace(/^[^']*'/, ""));
          }
          function rfc2047decode(t) {
            return !t.startsWith("=?") || /[\x00-\x19\x80-\xff]/.test(t) ? t : t.replace(/=\?([\w-]*)\?([QqBb])\?((?:[^?]|\?(?!=))*)\?=/g, function (t, e, s, n) {
              if ("q" === s || "Q" === s) return textdecode(e, n = (n = n.replace(/_/g, " ")).replace(/=([0-9a-fA-F]{2})/g, function (t, e) {
                return String.fromCharCode(parseInt(e, 16));
              }));
              try {
                n = atob(n);
              } catch (t) {}
              return textdecode(e, n);
            });
          }
          return "";
        };
        var n = s(1);
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.PDFNetworkStream = void 0;
        var n = s(1),
          i = s(32);
        var NetworkManager = /*#__PURE__*/function () {
          function NetworkManager(t) {
            var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            _classCallCheck(this, NetworkManager);
            this.url = t;
            this.isHttp = /^https?:/i.test(t);
            this.httpHeaders = this.isHttp && e.httpHeaders || Object.create(null);
            this.withCredentials = e.withCredentials || !1;
            this.getXhr = e.getXhr || function NetworkManager_getXhr() {
              return new XMLHttpRequest();
            };
            this.currXhrId = 0;
            this.pendingRequests = Object.create(null);
          }
          _createClass(NetworkManager, [{
            key: "requestRange",
            value: function requestRange(t, e, s) {
              var n = {
                begin: t,
                end: e
              };
              for (var _t172 in s) n[_t172] = s[_t172];
              return this.request(n);
            }
          }, {
            key: "requestFull",
            value: function requestFull(t) {
              return this.request(t);
            }
          }, {
            key: "request",
            value: function request(t) {
              var e = this.getXhr(),
                s = this.currXhrId++,
                n = this.pendingRequests[s] = {
                  xhr: e
                };
              e.open("GET", this.url);
              e.withCredentials = this.withCredentials;
              for (var _t173 in this.httpHeaders) {
                var _s99 = this.httpHeaders[_t173];
                void 0 !== _s99 && e.setRequestHeader(_t173, _s99);
              }
              if (this.isHttp && "begin" in t && "end" in t) {
                e.setRequestHeader("Range", "bytes=".concat(t.begin, "-").concat(t.end - 1));
                n.expectedStatus = 206;
              } else n.expectedStatus = 200;
              e.responseType = "arraybuffer";
              t.onError && (e.onerror = function (s) {
                t.onError(e.status);
              });
              e.onreadystatechange = this.onStateChange.bind(this, s);
              e.onprogress = this.onProgress.bind(this, s);
              n.onHeadersReceived = t.onHeadersReceived;
              n.onDone = t.onDone;
              n.onError = t.onError;
              n.onProgress = t.onProgress;
              e.send(null);
              return s;
            }
          }, {
            key: "onProgress",
            value: function onProgress(t, e) {
              var _s$onProgress;
              var s = this.pendingRequests[t];
              s && ((_s$onProgress = s.onProgress) === null || _s$onProgress === void 0 ? void 0 : _s$onProgress.call(s, e));
            }
          }, {
            key: "onStateChange",
            value: function onStateChange(t, e) {
              var _s$onError3;
              var s = this.pendingRequests[t];
              if (!s) return;
              var i = s.xhr;
              if (i.readyState >= 2 && s.onHeadersReceived) {
                s.onHeadersReceived();
                delete s.onHeadersReceived;
              }
              if (4 !== i.readyState) return;
              if (!(t in this.pendingRequests)) return;
              delete this.pendingRequests[t];
              if (0 === i.status && this.isHttp) {
                var _s$onError;
                (_s$onError = s.onError) === null || _s$onError === void 0 ? void 0 : _s$onError.call(s, i.status);
                return;
              }
              var a = i.status || 200;
              if (!(200 === a && 206 === s.expectedStatus) && a !== s.expectedStatus) {
                var _s$onError2;
                (_s$onError2 = s.onError) === null || _s$onError2 === void 0 ? void 0 : _s$onError2.call(s, i.status);
                return;
              }
              var r = function getArrayBuffer(t) {
                var e = t.response;
                return "string" != typeof e ? e : (0, n.stringToBytes)(e).buffer;
              }(i);
              if (206 === a) {
                var _t174 = i.getResponseHeader("Content-Range"),
                  _e110 = /bytes (\d+)-(\d+)\/(\d+)/.exec(_t174);
                s.onDone({
                  begin: parseInt(_e110[1], 10),
                  chunk: r
                });
              } else r ? s.onDone({
                begin: 0,
                chunk: r
              }) : (_s$onError3 = s.onError) === null || _s$onError3 === void 0 ? void 0 : _s$onError3.call(s, i.status);
            }
          }, {
            key: "getRequestXhr",
            value: function getRequestXhr(t) {
              return this.pendingRequests[t].xhr;
            }
          }, {
            key: "isPendingRequest",
            value: function isPendingRequest(t) {
              return t in this.pendingRequests;
            }
          }, {
            key: "abortRequest",
            value: function abortRequest(t) {
              var e = this.pendingRequests[t].xhr;
              delete this.pendingRequests[t];
              e.abort();
            }
          }]);
          return NetworkManager;
        }();
        e.PDFNetworkStream = /*#__PURE__*/function () {
          function PDFNetworkStream(t) {
            _classCallCheck(this, PDFNetworkStream);
            this._source = t;
            this._manager = new NetworkManager(t.url, {
              httpHeaders: t.httpHeaders,
              withCredentials: t.withCredentials
            });
            this._rangeChunkSize = t.rangeChunkSize;
            this._fullRequestReader = null;
            this._rangeRequestReaders = [];
          }
          _createClass(PDFNetworkStream, [{
            key: "_onRangeRequestReaderClosed",
            value: function _onRangeRequestReaderClosed(t) {
              var e = this._rangeRequestReaders.indexOf(t);
              e >= 0 && this._rangeRequestReaders.splice(e, 1);
            }
          }, {
            key: "getFullReader",
            value: function getFullReader() {
              (0, n.assert)(!this._fullRequestReader, "PDFNetworkStream.getFullReader can only be called once.");
              this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);
              return this._fullRequestReader;
            }
          }, {
            key: "getRangeReader",
            value: function getRangeReader(t, e) {
              var s = new PDFNetworkStreamRangeRequestReader(this._manager, t, e);
              s.onClosed = this._onRangeRequestReaderClosed.bind(this);
              this._rangeRequestReaders.push(s);
              return s;
            }
          }, {
            key: "cancelAllRequests",
            value: function cancelAllRequests(t) {
              var _this$_fullRequestRea10;
              (_this$_fullRequestRea10 = this._fullRequestReader) === null || _this$_fullRequestRea10 === void 0 ? void 0 : _this$_fullRequestRea10.cancel(t);
              var _iterator126 = _createForOfIteratorHelper(this._rangeRequestReaders.slice(0)),
                _step126;
              try {
                for (_iterator126.s(); !(_step126 = _iterator126.n()).done;) {
                  var _e111 = _step126.value;
                  _e111.cancel(t);
                }
              } catch (err) {
                _iterator126.e(err);
              } finally {
                _iterator126.f();
              }
            }
          }]);
          return PDFNetworkStream;
        }();
        var PDFNetworkStreamFullRequestReader = /*#__PURE__*/function () {
          function PDFNetworkStreamFullRequestReader(t, e) {
            _classCallCheck(this, PDFNetworkStreamFullRequestReader);
            this._manager = t;
            var s = {
              onHeadersReceived: this._onHeadersReceived.bind(this),
              onDone: this._onDone.bind(this),
              onError: this._onError.bind(this),
              onProgress: this._onProgress.bind(this)
            };
            this._url = e.url;
            this._fullRequestId = t.requestFull(s);
            this._headersReceivedCapability = (0, n.createPromiseCapability)();
            this._disableRange = e.disableRange || !1;
            this._contentLength = e.length;
            this._rangeChunkSize = e.rangeChunkSize;
            this._rangeChunkSize || this._disableRange || (this._disableRange = !0);
            this._isStreamingSupported = !1;
            this._isRangeSupported = !1;
            this._cachedChunks = [];
            this._requests = [];
            this._done = !1;
            this._storedError = void 0;
            this._filename = null;
            this.onProgress = null;
          }
          _createClass(PDFNetworkStreamFullRequestReader, [{
            key: "_onHeadersReceived",
            value: function _onHeadersReceived() {
              var t = this._fullRequestId,
                e = this._manager.getRequestXhr(t),
                getResponseHeader = function getResponseHeader(t) {
                  return e.getResponseHeader(t);
                },
                _ref83 = (0, i.validateRangeRequestCapabilities)({
                  getResponseHeader: getResponseHeader,
                  isHttp: this._manager.isHttp,
                  rangeChunkSize: this._rangeChunkSize,
                  disableRange: this._disableRange
                }),
                s = _ref83.allowRangeRequests,
                n = _ref83.suggestedLength;
              s && (this._isRangeSupported = !0);
              this._contentLength = n || this._contentLength;
              this._filename = (0, i.extractFilenameFromHeader)(getResponseHeader);
              this._isRangeSupported && this._manager.abortRequest(t);
              this._headersReceivedCapability.resolve();
            }
          }, {
            key: "_onDone",
            value: function _onDone(t) {
              if (t) if (this._requests.length > 0) {
                this._requests.shift().resolve({
                  value: t.chunk,
                  done: !1
                });
              } else this._cachedChunks.push(t.chunk);
              this._done = !0;
              if (!(this._cachedChunks.length > 0)) {
                var _iterator127 = _createForOfIteratorHelper(this._requests),
                  _step127;
                try {
                  for (_iterator127.s(); !(_step127 = _iterator127.n()).done;) {
                    var _t175 = _step127.value;
                    _t175.resolve({
                      value: void 0,
                      done: !0
                    });
                  }
                } catch (err) {
                  _iterator127.e(err);
                } finally {
                  _iterator127.f();
                }
                this._requests.length = 0;
              }
            }
          }, {
            key: "_onError",
            value: function _onError(t) {
              this._storedError = (0, i.createResponseStatusError)(t, this._url);
              this._headersReceivedCapability.reject(this._storedError);
              var _iterator128 = _createForOfIteratorHelper(this._requests),
                _step128;
              try {
                for (_iterator128.s(); !(_step128 = _iterator128.n()).done;) {
                  var _t176 = _step128.value;
                  _t176.reject(this._storedError);
                }
              } catch (err) {
                _iterator128.e(err);
              } finally {
                _iterator128.f();
              }
              this._requests.length = 0;
              this._cachedChunks.length = 0;
            }
          }, {
            key: "_onProgress",
            value: function _onProgress(t) {
              var _this$onProgress3;
              (_this$onProgress3 = this.onProgress) === null || _this$onProgress3 === void 0 ? void 0 : _this$onProgress3.call(this, {
                loaded: t.loaded,
                total: t.lengthComputable ? t.total : this._contentLength
              });
            }
          }, {
            key: "filename",
            get: function get() {
              return this._filename;
            }
          }, {
            key: "isRangeSupported",
            get: function get() {
              return this._isRangeSupported;
            }
          }, {
            key: "isStreamingSupported",
            get: function get() {
              return this._isStreamingSupported;
            }
          }, {
            key: "contentLength",
            get: function get() {
              return this._contentLength;
            }
          }, {
            key: "headersReady",
            get: function get() {
              return this._headersReceivedCapability.promise;
            }
          }, {
            key: "read",
            value: function () {
              var _read5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {
                var t;
                return _regeneratorRuntime().wrap(function _callee16$(_context16) {
                  while (1) switch (_context16.prev = _context16.next) {
                    case 0:
                      if (!this._storedError) {
                        _context16.next = 2;
                        break;
                      }
                      throw this._storedError;
                    case 2:
                      if (!(this._cachedChunks.length > 0)) {
                        _context16.next = 4;
                        break;
                      }
                      return _context16.abrupt("return", {
                        value: this._cachedChunks.shift(),
                        done: !1
                      });
                    case 4:
                      if (!this._done) {
                        _context16.next = 6;
                        break;
                      }
                      return _context16.abrupt("return", {
                        value: void 0,
                        done: !0
                      });
                    case 6:
                      t = (0, n.createPromiseCapability)();
                      this._requests.push(t);
                      return _context16.abrupt("return", t.promise);
                    case 9:
                    case "end":
                      return _context16.stop();
                  }
                }, _callee16, this);
              }));
              function read() {
                return _read5.apply(this, arguments);
              }
              return read;
            }()
          }, {
            key: "cancel",
            value: function cancel(t) {
              this._done = !0;
              this._headersReceivedCapability.reject(t);
              var _iterator129 = _createForOfIteratorHelper(this._requests),
                _step129;
              try {
                for (_iterator129.s(); !(_step129 = _iterator129.n()).done;) {
                  var _t177 = _step129.value;
                  _t177.resolve({
                    value: void 0,
                    done: !0
                  });
                }
              } catch (err) {
                _iterator129.e(err);
              } finally {
                _iterator129.f();
              }
              this._requests.length = 0;
              this._manager.isPendingRequest(this._fullRequestId) && this._manager.abortRequest(this._fullRequestId);
              this._fullRequestReader = null;
            }
          }]);
          return PDFNetworkStreamFullRequestReader;
        }();
        var PDFNetworkStreamRangeRequestReader = /*#__PURE__*/function () {
          function PDFNetworkStreamRangeRequestReader(t, e, s) {
            _classCallCheck(this, PDFNetworkStreamRangeRequestReader);
            this._manager = t;
            var n = {
              onDone: this._onDone.bind(this),
              onError: this._onError.bind(this),
              onProgress: this._onProgress.bind(this)
            };
            this._url = t.url;
            this._requestId = t.requestRange(e, s, n);
            this._requests = [];
            this._queuedChunk = null;
            this._done = !1;
            this._storedError = void 0;
            this.onProgress = null;
            this.onClosed = null;
          }
          _createClass(PDFNetworkStreamRangeRequestReader, [{
            key: "_close",
            value: function _close() {
              var _this$onClosed;
              (_this$onClosed = this.onClosed) === null || _this$onClosed === void 0 ? void 0 : _this$onClosed.call(this, this);
            }
          }, {
            key: "_onDone",
            value: function _onDone(t) {
              var e = t.chunk;
              if (this._requests.length > 0) {
                this._requests.shift().resolve({
                  value: e,
                  done: !1
                });
              } else this._queuedChunk = e;
              this._done = !0;
              var _iterator130 = _createForOfIteratorHelper(this._requests),
                _step130;
              try {
                for (_iterator130.s(); !(_step130 = _iterator130.n()).done;) {
                  var _t178 = _step130.value;
                  _t178.resolve({
                    value: void 0,
                    done: !0
                  });
                }
              } catch (err) {
                _iterator130.e(err);
              } finally {
                _iterator130.f();
              }
              this._requests.length = 0;
              this._close();
            }
          }, {
            key: "_onError",
            value: function _onError(t) {
              this._storedError = (0, i.createResponseStatusError)(t, this._url);
              var _iterator131 = _createForOfIteratorHelper(this._requests),
                _step131;
              try {
                for (_iterator131.s(); !(_step131 = _iterator131.n()).done;) {
                  var _t179 = _step131.value;
                  _t179.reject(this._storedError);
                }
              } catch (err) {
                _iterator131.e(err);
              } finally {
                _iterator131.f();
              }
              this._requests.length = 0;
              this._queuedChunk = null;
            }
          }, {
            key: "_onProgress",
            value: function _onProgress(t) {
              var _this$onProgress4;
              this.isStreamingSupported || ((_this$onProgress4 = this.onProgress) === null || _this$onProgress4 === void 0 ? void 0 : _this$onProgress4.call(this, {
                loaded: t.loaded
              }));
            }
          }, {
            key: "isStreamingSupported",
            get: function get() {
              return !1;
            }
          }, {
            key: "read",
            value: function () {
              var _read6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {
                var _t180, t;
                return _regeneratorRuntime().wrap(function _callee17$(_context17) {
                  while (1) switch (_context17.prev = _context17.next) {
                    case 0:
                      if (!this._storedError) {
                        _context17.next = 2;
                        break;
                      }
                      throw this._storedError;
                    case 2:
                      if (!(null !== this._queuedChunk)) {
                        _context17.next = 6;
                        break;
                      }
                      _t180 = this._queuedChunk;
                      this._queuedChunk = null;
                      return _context17.abrupt("return", {
                        value: _t180,
                        done: !1
                      });
                    case 6:
                      if (!this._done) {
                        _context17.next = 8;
                        break;
                      }
                      return _context17.abrupt("return", {
                        value: void 0,
                        done: !0
                      });
                    case 8:
                      t = (0, n.createPromiseCapability)();
                      this._requests.push(t);
                      return _context17.abrupt("return", t.promise);
                    case 11:
                    case "end":
                      return _context17.stop();
                  }
                }, _callee17, this);
              }));
              function read() {
                return _read6.apply(this, arguments);
              }
              return read;
            }()
          }, {
            key: "cancel",
            value: function cancel(t) {
              this._done = !0;
              var _iterator132 = _createForOfIteratorHelper(this._requests),
                _step132;
              try {
                for (_iterator132.s(); !(_step132 = _iterator132.n()).done;) {
                  var _t181 = _step132.value;
                  _t181.resolve({
                    value: void 0,
                    done: !0
                  });
                }
              } catch (err) {
                _iterator132.e(err);
              } finally {
                _iterator132.f();
              }
              this._requests.length = 0;
              this._manager.isPendingRequest(this._requestId) && this._manager.abortRequest(this._requestId);
              this._close();
            }
          }]);
          return PDFNetworkStreamRangeRequestReader;
        }();
      }, function (t, e, s) {
        Object.defineProperty(e, "__esModule", {
          value: !0
        });
        e.PDFFetchStream = void 0;
        var n = s(1),
          i = s(32);
        function createFetchOptions(t, e, s) {
          return {
            method: "GET",
            headers: t,
            signal: s.signal,
            mode: "cors",
            credentials: e ? "include" : "same-origin",
            redirect: "follow"
          };
        }
        function createHeaders(t) {
          var e = new Headers();
          for (var _s100 in t) {
            var _n65 = t[_s100];
            void 0 !== _n65 && e.append(_s100, _n65);
          }
          return e;
        }
        e.PDFFetchStream = /*#__PURE__*/function () {
          function PDFFetchStream(t) {
            _classCallCheck(this, PDFFetchStream);
            this.source = t;
            this.isHttp = /^https?:/i.test(t.url);
            this.httpHeaders = this.isHttp && t.httpHeaders || {};
            this._fullRequestReader = null;
            this._rangeRequestReaders = [];
          }
          _createClass(PDFFetchStream, [{
            key: "_progressiveDataLength",
            get: function get() {
              var _this$_fullRequestRea11, _this$_fullRequestRea12;
              return (_this$_fullRequestRea11 = (_this$_fullRequestRea12 = this._fullRequestReader) === null || _this$_fullRequestRea12 === void 0 ? void 0 : _this$_fullRequestRea12._loaded) !== null && _this$_fullRequestRea11 !== void 0 ? _this$_fullRequestRea11 : 0;
            }
          }, {
            key: "getFullReader",
            value: function getFullReader() {
              (0, n.assert)(!this._fullRequestReader, "PDFFetchStream.getFullReader can only be called once.");
              this._fullRequestReader = new PDFFetchStreamReader(this);
              return this._fullRequestReader;
            }
          }, {
            key: "getRangeReader",
            value: function getRangeReader(t, e) {
              if (e <= this._progressiveDataLength) return null;
              var s = new PDFFetchStreamRangeReader(this, t, e);
              this._rangeRequestReaders.push(s);
              return s;
            }
          }, {
            key: "cancelAllRequests",
            value: function cancelAllRequests(t) {
              var _this$_fullRequestRea13;
              (_this$_fullRequestRea13 = this._fullRequestReader) === null || _this$_fullRequestRea13 === void 0 ? void 0 : _this$_fullRequestRea13.cancel(t);
              var _iterator133 = _createForOfIteratorHelper(this._rangeRequestReaders.slice(0)),
                _step133;
              try {
                for (_iterator133.s(); !(_step133 = _iterator133.n()).done;) {
                  var _e112 = _step133.value;
                  _e112.cancel(t);
                }
              } catch (err) {
                _iterator133.e(err);
              } finally {
                _iterator133.f();
              }
            }
          }]);
          return PDFFetchStream;
        }();
        var PDFFetchStreamReader = /*#__PURE__*/function () {
          function PDFFetchStreamReader(t) {
            var _this79 = this;
            _classCallCheck(this, PDFFetchStreamReader);
            this._stream = t;
            this._reader = null;
            this._loaded = 0;
            this._filename = null;
            var e = t.source;
            this._withCredentials = e.withCredentials || !1;
            this._contentLength = e.length;
            this._headersCapability = (0, n.createPromiseCapability)();
            this._disableRange = e.disableRange || !1;
            this._rangeChunkSize = e.rangeChunkSize;
            this._rangeChunkSize || this._disableRange || (this._disableRange = !0);
            this._abortController = new AbortController();
            this._isStreamingSupported = !e.disableStream;
            this._isRangeSupported = !e.disableRange;
            this._headers = createHeaders(this._stream.httpHeaders);
            var s = e.url;
            fetch(s, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (t) {
              if (!(0, i.validateResponseStatus)(t.status)) throw (0, i.createResponseStatusError)(t.status, s);
              _this79._reader = t.body.getReader();
              _this79._headersCapability.resolve();
              var getResponseHeader = function getResponseHeader(e) {
                  return t.headers.get(e);
                },
                _ref84 = (0, i.validateRangeRequestCapabilities)({
                  getResponseHeader: getResponseHeader,
                  isHttp: _this79._stream.isHttp,
                  rangeChunkSize: _this79._rangeChunkSize,
                  disableRange: _this79._disableRange
                }),
                e = _ref84.allowRangeRequests,
                a = _ref84.suggestedLength;
              _this79._isRangeSupported = e;
              _this79._contentLength = a || _this79._contentLength;
              _this79._filename = (0, i.extractFilenameFromHeader)(getResponseHeader);
              !_this79._isStreamingSupported && _this79._isRangeSupported && _this79.cancel(new n.AbortException("Streaming is disabled."));
            })["catch"](this._headersCapability.reject);
            this.onProgress = null;
          }
          _createClass(PDFFetchStreamReader, [{
            key: "headersReady",
            get: function get() {
              return this._headersCapability.promise;
            }
          }, {
            key: "filename",
            get: function get() {
              return this._filename;
            }
          }, {
            key: "contentLength",
            get: function get() {
              return this._contentLength;
            }
          }, {
            key: "isRangeSupported",
            get: function get() {
              return this._isRangeSupported;
            }
          }, {
            key: "isStreamingSupported",
            get: function get() {
              return this._isStreamingSupported;
            }
          }, {
            key: "read",
            value: function () {
              var _read7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {
                var _this$onProgress5;
                var _yield$this$_reader$r, t, e;
                return _regeneratorRuntime().wrap(function _callee18$(_context18) {
                  while (1) switch (_context18.prev = _context18.next) {
                    case 0:
                      _context18.next = 2;
                      return this._headersCapability.promise;
                    case 2:
                      _context18.next = 4;
                      return this._reader.read();
                    case 4:
                      _yield$this$_reader$r = _context18.sent;
                      t = _yield$this$_reader$r.value;
                      e = _yield$this$_reader$r.done;
                      if (!e) {
                        _context18.next = 9;
                        break;
                      }
                      return _context18.abrupt("return", {
                        value: t,
                        done: e
                      });
                    case 9:
                      this._loaded += t.byteLength;
                      (_this$onProgress5 = this.onProgress) === null || _this$onProgress5 === void 0 ? void 0 : _this$onProgress5.call(this, {
                        loaded: this._loaded,
                        total: this._contentLength
                      });
                      return _context18.abrupt("return", {
                        value: new Uint8Array(t).buffer,
                        done: !1
                      });
                    case 12:
                    case "end":
                      return _context18.stop();
                  }
                }, _callee18, this);
              }));
              function read() {
                return _read7.apply(this, arguments);
              }
              return read;
            }()
          }, {
            key: "cancel",
            value: function cancel(t) {
              var _this$_reader;
              (_this$_reader = this._reader) === null || _this$_reader === void 0 ? void 0 : _this$_reader.cancel(t);
              this._abortController.abort();
            }
          }]);
          return PDFFetchStreamReader;
        }();
        var PDFFetchStreamRangeReader = /*#__PURE__*/function () {
          function PDFFetchStreamRangeReader(t, e, s) {
            var _this80 = this;
            _classCallCheck(this, PDFFetchStreamRangeReader);
            this._stream = t;
            this._reader = null;
            this._loaded = 0;
            var a = t.source;
            this._withCredentials = a.withCredentials || !1;
            this._readCapability = (0, n.createPromiseCapability)();
            this._isStreamingSupported = !a.disableStream;
            this._abortController = new AbortController();
            this._headers = createHeaders(this._stream.httpHeaders);
            this._headers.append("Range", "bytes=".concat(e, "-").concat(s - 1));
            var r = a.url;
            fetch(r, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (t) {
              if (!(0, i.validateResponseStatus)(t.status)) throw (0, i.createResponseStatusError)(t.status, r);
              _this80._readCapability.resolve();
              _this80._reader = t.body.getReader();
            })["catch"](this._readCapability.reject);
            this.onProgress = null;
          }
          _createClass(PDFFetchStreamRangeReader, [{
            key: "isStreamingSupported",
            get: function get() {
              return this._isStreamingSupported;
            }
          }, {
            key: "read",
            value: function () {
              var _read8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {
                var _this$onProgress6;
                var _yield$this$_reader$r2, t, e;
                return _regeneratorRuntime().wrap(function _callee19$(_context19) {
                  while (1) switch (_context19.prev = _context19.next) {
                    case 0:
                      _context19.next = 2;
                      return this._readCapability.promise;
                    case 2:
                      _context19.next = 4;
                      return this._reader.read();
                    case 4:
                      _yield$this$_reader$r2 = _context19.sent;
                      t = _yield$this$_reader$r2.value;
                      e = _yield$this$_reader$r2.done;
                      if (!e) {
                        _context19.next = 9;
                        break;
                      }
                      return _context19.abrupt("return", {
                        value: t,
                        done: e
                      });
                    case 9:
                      this._loaded += t.byteLength;
                      (_this$onProgress6 = this.onProgress) === null || _this$onProgress6 === void 0 ? void 0 : _this$onProgress6.call(this, {
                        loaded: this._loaded
                      });
                      return _context19.abrupt("return", {
                        value: new Uint8Array(t).buffer,
                        done: !1
                      });
                    case 12:
                    case "end":
                      return _context19.stop();
                  }
                }, _callee19, this);
              }));
              function read() {
                return _read8.apply(this, arguments);
              }
              return read;
            }()
          }, {
            key: "cancel",
            value: function cancel(t) {
              var _this$_reader2;
              (_this$_reader2 = this._reader) === null || _this$_reader2 === void 0 ? void 0 : _this$_reader2.cancel(t);
              this._abortController.abort();
            }
          }]);
          return PDFFetchStreamRangeReader;
        }();
      }],
      __webpack_module_cache__ = {};
    function __w_pdfjs_require__(t) {
      var e = __webpack_module_cache__[t];
      if (void 0 !== e) return e.exports;
      var s = __webpack_module_cache__[t] = {
        exports: {}
      };
      __webpack_modules__[t](s, s.exports, __w_pdfjs_require__);
      return s.exports;
    }
    var __webpack_exports__ = {};
    (function () {
      var t = __webpack_exports__;
      Object.defineProperty(t, "__esModule", {
        value: !0
      });
      Object.defineProperty(t, "AbortException", {
        enumerable: !0,
        get: function get() {
          return e.AbortException;
        }
      });
      Object.defineProperty(t, "AnnotationEditorLayer", {
        enumerable: !0,
        get: function get() {
          return a.AnnotationEditorLayer;
        }
      });
      Object.defineProperty(t, "AnnotationEditorParamsType", {
        enumerable: !0,
        get: function get() {
          return e.AnnotationEditorParamsType;
        }
      });
      Object.defineProperty(t, "AnnotationEditorType", {
        enumerable: !0,
        get: function get() {
          return e.AnnotationEditorType;
        }
      });
      Object.defineProperty(t, "AnnotationEditorUIManager", {
        enumerable: !0,
        get: function get() {
          return r.AnnotationEditorUIManager;
        }
      });
      Object.defineProperty(t, "AnnotationLayer", {
        enumerable: !0,
        get: function get() {
          return o.AnnotationLayer;
        }
      });
      Object.defineProperty(t, "AnnotationMode", {
        enumerable: !0,
        get: function get() {
          return e.AnnotationMode;
        }
      });
      Object.defineProperty(t, "CMapCompressionType", {
        enumerable: !0,
        get: function get() {
          return e.CMapCompressionType;
        }
      });
      Object.defineProperty(t, "GlobalWorkerOptions", {
        enumerable: !0,
        get: function get() {
          return l.GlobalWorkerOptions;
        }
      });
      Object.defineProperty(t, "InvalidPDFException", {
        enumerable: !0,
        get: function get() {
          return e.InvalidPDFException;
        }
      });
      Object.defineProperty(t, "MissingPDFException", {
        enumerable: !0,
        get: function get() {
          return e.MissingPDFException;
        }
      });
      Object.defineProperty(t, "OPS", {
        enumerable: !0,
        get: function get() {
          return e.OPS;
        }
      });
      Object.defineProperty(t, "PDFDataRangeTransport", {
        enumerable: !0,
        get: function get() {
          return s.PDFDataRangeTransport;
        }
      });
      Object.defineProperty(t, "PDFDateString", {
        enumerable: !0,
        get: function get() {
          return n.PDFDateString;
        }
      });
      Object.defineProperty(t, "PDFWorker", {
        enumerable: !0,
        get: function get() {
          return s.PDFWorker;
        }
      });
      Object.defineProperty(t, "PasswordResponses", {
        enumerable: !0,
        get: function get() {
          return e.PasswordResponses;
        }
      });
      Object.defineProperty(t, "PermissionFlag", {
        enumerable: !0,
        get: function get() {
          return e.PermissionFlag;
        }
      });
      Object.defineProperty(t, "PixelsPerInch", {
        enumerable: !0,
        get: function get() {
          return n.PixelsPerInch;
        }
      });
      Object.defineProperty(t, "RenderingCancelledException", {
        enumerable: !0,
        get: function get() {
          return n.RenderingCancelledException;
        }
      });
      Object.defineProperty(t, "SVGGraphics", {
        enumerable: !0,
        get: function get() {
          return h.SVGGraphics;
        }
      });
      Object.defineProperty(t, "UNSUPPORTED_FEATURES", {
        enumerable: !0,
        get: function get() {
          return e.UNSUPPORTED_FEATURES;
        }
      });
      Object.defineProperty(t, "UnexpectedResponseException", {
        enumerable: !0,
        get: function get() {
          return e.UnexpectedResponseException;
        }
      });
      Object.defineProperty(t, "Util", {
        enumerable: !0,
        get: function get() {
          return e.Util;
        }
      });
      Object.defineProperty(t, "VerbosityLevel", {
        enumerable: !0,
        get: function get() {
          return e.VerbosityLevel;
        }
      });
      Object.defineProperty(t, "XfaLayer", {
        enumerable: !0,
        get: function get() {
          return d.XfaLayer;
        }
      });
      Object.defineProperty(t, "build", {
        enumerable: !0,
        get: function get() {
          return s.build;
        }
      });
      Object.defineProperty(t, "createPromiseCapability", {
        enumerable: !0,
        get: function get() {
          return e.createPromiseCapability;
        }
      });
      Object.defineProperty(t, "createValidAbsoluteUrl", {
        enumerable: !0,
        get: function get() {
          return e.createValidAbsoluteUrl;
        }
      });
      Object.defineProperty(t, "getDocument", {
        enumerable: !0,
        get: function get() {
          return s.getDocument;
        }
      });
      Object.defineProperty(t, "getFilenameFromUrl", {
        enumerable: !0,
        get: function get() {
          return n.getFilenameFromUrl;
        }
      });
      Object.defineProperty(t, "getPdfFilenameFromUrl", {
        enumerable: !0,
        get: function get() {
          return n.getPdfFilenameFromUrl;
        }
      });
      Object.defineProperty(t, "getXfaPageViewport", {
        enumerable: !0,
        get: function get() {
          return n.getXfaPageViewport;
        }
      });
      Object.defineProperty(t, "isDataScheme", {
        enumerable: !0,
        get: function get() {
          return n.isDataScheme;
        }
      });
      Object.defineProperty(t, "isPdfFile", {
        enumerable: !0,
        get: function get() {
          return n.isPdfFile;
        }
      });
      Object.defineProperty(t, "loadScript", {
        enumerable: !0,
        get: function get() {
          return n.loadScript;
        }
      });
      Object.defineProperty(t, "renderTextLayer", {
        enumerable: !0,
        get: function get() {
          return i.renderTextLayer;
        }
      });
      Object.defineProperty(t, "setLayerDimensions", {
        enumerable: !0,
        get: function get() {
          return n.setLayerDimensions;
        }
      });
      Object.defineProperty(t, "shadow", {
        enumerable: !0,
        get: function get() {
          return e.shadow;
        }
      });
      Object.defineProperty(t, "updateTextLayer", {
        enumerable: !0,
        get: function get() {
          return i.updateTextLayer;
        }
      });
      Object.defineProperty(t, "version", {
        enumerable: !0,
        get: function get() {
          return s.version;
        }
      });
      var e = __w_pdfjs_require__(1),
        s = __w_pdfjs_require__(2),
        n = __w_pdfjs_require__(6),
        i = __w_pdfjs_require__(21),
        a = __w_pdfjs_require__(22),
        r = __w_pdfjs_require__(5),
        o = __w_pdfjs_require__(27),
        l = __w_pdfjs_require__(14),
        c = __w_pdfjs_require__(10),
        h = __w_pdfjs_require__(30),
        d = __w_pdfjs_require__(29);
      if (c.isNodeJS) {
        var _w_pdfjs_require__2 = __w_pdfjs_require__(31),
          _t182 = _w_pdfjs_require__2.PDFNodeStream;
        (0, s.setPDFNetworkStreamFactory)(function (e) {
          return new _t182(e);
        });
      } else {
        var _w_pdfjs_require__3 = __w_pdfjs_require__(34),
          _t183 = _w_pdfjs_require__3.PDFNetworkStream,
          _w_pdfjs_require__4 = __w_pdfjs_require__(35),
          _e113 = _w_pdfjs_require__4.PDFFetchStream;
        (0, s.setPDFNetworkStreamFactory)(function (s) {
          return (0, n.isValidFetchUrl)(s.url) ? new _e113(s) : new _t183(s);
        });
      }
    })();
    return __webpack_exports__;
  }();
});